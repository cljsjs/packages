// Generated via http://jmmk.github.io/javascript-externs-generator/

// Loaded JavaScripts:
// https://cdnjs.cloudflare.com/ajax/libs/react/15.4.2/react-with-addons.js
// https://cdnjs.cloudflare.com/ajax/libs/react-virtualized/9.0.0-rc.0/react-virtualized.js

// Reference JavaScript object: ReactVirtualized
/**********************************************************************
 * Extern for ReactVirtualized
 * Generated by http://jmmk.github.io/javascript-externs-generator
 **********************************************************************/
var ReactVirtualized = {
  "ArrowKeyStepper": {
    "defaultProps": {
      "disabled": {},
      "mode": {},
      "scrollToColumn": {},
      "scrollToRow": {}
    }
  },
  "AutoSizer": {
    "defaultProps": {
      "onResize": function () {}
    }
  },
  "CellMeasurer": {
    "defaultProps": {
      "style": {}
    }
  },
  "CellMeasurerCache": function () {},
  "Collection": {
    "defaultProps": {
      "aria-label": {},
      "cellGroupRenderer": function () {}
    }
  },
  "ColumnSizer": function () {},
  "defaultTableCellDataGetter": function () {},
  "defaultTableCellRenderer": function () {},
  "defaultTableHeaderRenderer": function () {},
  "defaultTableRowRenderer": function () {},
  "Table": {
    "defaultProps": {
      "disableHeader": {},
      "estimatedRowSize": {},
      "headerHeight": {},
      "headerStyle": {},
      "noRowsRenderer": function () {},
      "onRowsRendered": function () {},
      "onScroll": function () {},
      "overscanRowCount": {},
      "rowRenderer": function () {},
      "rowStyle": {},
      "scrollToAlignment": {},
      "style": {}
    }
  },
  "Column": {
    "defaultProps": {
      "cellDataGetter": function () {},
      "cellRenderer": function () {},
      "flexGrow": {},
      "flexShrink": {},
      "headerRenderer": function () {},
      "style": {}
    }
  },
  "SortDirection": {
    "ASC": {},
    "DESC": {}
  },
  "SortIndicator": function () {},
  "defaultCellRangeRenderer": function () {},
  "Grid": {
    "defaultProps": {
      "aria-label": {},
      "cellRangeRenderer": function () {},
      "estimatedColumnSize": {},
      "estimatedRowSize": {},
      "noContentRenderer": function () {},
      "onScroll": function () {},
      "onSectionRendered": function () {},
      "overscanColumnCount": {},
      "overscanRowCount": {},
      "scrollingResetTimeInterval": {},
      "scrollToAlignment": {},
      "style": {},
      "tabIndex": {}
    }
  },
  "InfiniteLoader": {
    "defaultProps": {
      "minimumBatchSize": {},
      "rowCount": {},
      "threshold": {}
    }
  },
  "List": {
    "defaultProps": {
      "estimatedRowSize": {},
      "noRowsRenderer": function () {},
      "onRowsRendered": function () {},
      "onScroll": function () {},
      "overscanRowCount": {},
      "scrollToAlignment": {},
      "style": {}
    }
  },
  "MultiGrid": {
    "defaultProps": {
      "fixedColumnCount": {},
      "fixedRowCount": {},
      "style": {},
      "styleBottomLeftGrid": {},
      "styleBottomRightGrid": {},
      "styleTopLeftGrid": {},
      "styleTopRightGrid": {}
    }
  },
  "ScrollSync": function () {},
  "WindowScroller": {
    "defaultProps": {
      "onResize": function () {},
      "onScroll": function () {}
    }
  }
};
ReactVirtualized.ArrowKeyStepper.prototype = {
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {},
  "isPureReactComponent": function () {}
};
ReactVirtualized.AutoSizer.prototype = {
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {},
  "isPureReactComponent": function () {}
};
ReactVirtualized.CellMeasurer.prototype = {
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {},
  "isPureReactComponent": function () {}
};
ReactVirtualized.Collection.prototype = {
  "isReactComponent": function () {},
  "setState": function () {},
  "isPureReactComponent": function () {}
};
ReactVirtualized.ColumnSizer.prototype = {
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {},
  "isPureReactComponent": function () {}
};
ReactVirtualized.Table.prototype = {
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {},
  "isPureReactComponent": function () {}
};
ReactVirtualized.Column.prototype = {
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {}
};
ReactVirtualized.Grid.prototype = {
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {},
  "isPureReactComponent": function () {}
};
ReactVirtualized.InfiniteLoader.prototype = {
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {},
  "isPureReactComponent": function () {}
};
ReactVirtualized.List.prototype = {
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {},
  "isPureReactComponent": function () {}
};
ReactVirtualized.MultiGrid.prototype = {
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {},
  "isPureReactComponent": function () {}
};
ReactVirtualized.ScrollSync.prototype = {
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {},
  "isPureReactComponent": function () {}
};
ReactVirtualized.WindowScroller.prototype = {
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {},
  "isPureReactComponent": function () {}
};
/**********************************************************************
 * End Generated Extern for ReactVirtualized
/**********************************************************************/
