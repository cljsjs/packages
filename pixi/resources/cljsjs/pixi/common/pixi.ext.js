/**********************************************************************
 * Extern for PIXI
 * Generated by http://jmmk.github.io/javascript-externs-generator
 **********************************************************************/
var PIXI = {
  "__esModule": {},
  "accessibility": {
    "__esModule": {},
    "accessibleTarget": {
      "accessible": {},
      "accessibleTitle": {},
      "accessibleHint": {},
      "tabIndex": {},
      "_accessibleActive": {},
      "_accessibleDiv": {}
    },
    "AccessibilityManager": function () {}
  },
  "extract": {
    "__esModule": {},
    "webgl": function () {},
    "canvas": function () {}
  },
  "extras": {
    "__esModule": {},
    "TextureTransform": function () {},
    "MovieClip": {
      "fromFrames": function () {},
      "fromImages": function () {},
      "from": function () {},
      "fromFrame": function () {},
      "fromImage": function () {},
      "prefixed": {},
      "EventEmitter": {
        "prefixed": {},
        "EventEmitter": function () {}
      }
    },
    "TilingSprite": {
      "from": function () {},
      "fromFrame": function () {},
      "fromImage": function () {},
      "prefixed": {},
      "EventEmitter": {
        "prefixed": {},
        "EventEmitter": function () {}
      }
    },
    "TilingSpriteRenderer": {},
    "BitmapText": {
      "fonts": {},
      "prefixed": {},
      "EventEmitter": {
        "prefixed": {},
        "EventEmitter": function () {}
      }
    },
    "cacheAsBitmap": {},
    "getChildByName": {},
    "getGlobalPosition": {}
  },
  "filters": {
    "__esModule": {},
    "FXAAFilter": function () {},
    "NoiseFilter": function () {},
    "DisplacementFilter": function () {},
    "BlurFilter": function () {},
    "BlurXFilter": function () {},
    "BlurYFilter": function () {},
    "ColorMatrixFilter": function () {},
    "VoidFilter": function () {}
  },
  "interaction": {
    "__esModule": {},
    "InteractionData": function () {},
    "InteractionManager": {
      "prefixed": {},
      "EventEmitter": {
        "prefixed": {},
        "EventEmitter": function () {}
      }
    },
    "interactiveTarget": {
      "interactive": {},
      "interactiveChildren": {},
      "hitArea": {},
      "buttonMode": {},
      "defaultCursor": {},
      "_over": {},
      "_isLeftDown": {},
      "_isRightDown": {},
      "_pointerOver": {},
      "_pointerDown": {},
      "_touchDown": {}
    }
  },
  "loaders": {
    "__esModule": {},
    "Loader": {
      "addPixiMiddleware": function () {},
      "_pixiMiddleware": {},
      "LOAD_TYPE": {
        "XHR": {},
        "IMAGE": {},
        "AUDIO": {},
        "VIDEO": {}
      },
      "XHR_RESPONSE_TYPE": {
        "DEFAULT": {},
        "BUFFER": {},
        "BLOB": {},
        "DOCUMENT": {},
        "JSON": {},
        "TEXT": {}
      },
      "Resource": {
        "LOAD_TYPE": {
          "XHR": {},
          "IMAGE": {},
          "AUDIO": {},
          "VIDEO": {}
        },
        "XHR_RESPONSE_TYPE": {
          "DEFAULT": {},
          "BUFFER": {},
          "BLOB": {},
          "DOCUMENT": {},
          "JSON": {},
          "TEXT": {}
        },
        "_loadTypeMap": {
          "gif": {},
          "png": {},
          "bmp": {},
          "jpg": {},
          "jpeg": {},
          "tif": {},
          "tiff": {},
          "webp": {},
          "tga": {},
          "svg+xml": {}
        },
        "_xhrTypeMap": {
          "xhtml": {},
          "html": {},
          "htm": {},
          "xml": {},
          "tmx": {},
          "tsx": {},
          "svg": {},
          "gif": {},
          "png": {},
          "bmp": {},
          "jpg": {},
          "jpeg": {},
          "tif": {},
          "tiff": {},
          "webp": {},
          "tga": {},
          "json": {},
          "text": {},
          "txt": {},
          "fnt": {}
        },
        "setExtensionLoadType": function () {},
        "setExtensionXhrType": function () {}
      },
      "middleware": {
        "caching": {
          "memory": function () {}
        },
        "parsing": {
          "blob": function () {}
        }
      },
      "async": {
        "eachSeries": function () {},
        "queue": function () {}
      }
    },
    "bitmapFontParser": function () {},
    "parseBitmapFontData": function () {},
    "spritesheetParser": function () {},
    "textureParser": function () {},
    "Resource": {
      "LOAD_TYPE": {
        "XHR": {},
        "IMAGE": {},
        "AUDIO": {},
        "VIDEO": {}
      },
      "XHR_RESPONSE_TYPE": {
        "DEFAULT": {},
        "BUFFER": {},
        "BLOB": {},
        "DOCUMENT": {},
        "JSON": {},
        "TEXT": {}
      },
      "_loadTypeMap": {
        "gif": {},
        "png": {},
        "bmp": {},
        "jpg": {},
        "jpeg": {},
        "tif": {},
        "tiff": {},
        "webp": {},
        "tga": {},
        "svg+xml": {}
      },
      "_xhrTypeMap": {
        "xhtml": {},
        "html": {},
        "htm": {},
        "xml": {},
        "tmx": {},
        "tsx": {},
        "svg": {},
        "gif": {},
        "png": {},
        "bmp": {},
        "jpg": {},
        "jpeg": {},
        "tif": {},
        "tiff": {},
        "webp": {},
        "tga": {},
        "json": {},
        "text": {},
        "txt": {},
        "fnt": {}
      },
      "setExtensionLoadType": function () {},
      "setExtensionXhrType": function () {}
    }
  },
  "mesh": {
    "__esModule": {},
    "Mesh": {
      "DRAW_MODES": {
        "TRIANGLE_MESH": {},
        "TRIANGLES": {}
      },
      "prefixed": {},
      "EventEmitter": {
        "prefixed": {},
        "EventEmitter": function () {}
      }
    },
    "MeshRenderer": {},
    "CanvasMeshRenderer": function () {},
    "Plane": {
      "DRAW_MODES": {
        "TRIANGLE_MESH": {},
        "TRIANGLES": {}
      },
      "prefixed": {},
      "EventEmitter": {
        "prefixed": {},
        "EventEmitter": function () {}
      }
    },
    "NineSlicePlane": {
      "DRAW_MODES": {
        "TRIANGLE_MESH": {},
        "TRIANGLES": {}
      },
      "prefixed": {},
      "EventEmitter": {
        "prefixed": {},
        "EventEmitter": function () {}
      }
    },
    "Rope": {
      "DRAW_MODES": {
        "TRIANGLE_MESH": {},
        "TRIANGLES": {}
      },
      "prefixed": {},
      "EventEmitter": {
        "prefixed": {},
        "EventEmitter": function () {}
      }
    }
  },
  "particles": {
    "__esModule": {},
    "ParticleContainer": {
      "prefixed": {},
      "EventEmitter": {
        "prefixed": {},
        "EventEmitter": function () {}
      }
    },
    "ParticleRenderer": function () {}
  },
  "prepare": {
    "__esModule": {},
    "webgl": {
      "UPLOADS_PER_FRAME": {}
    },
    "canvas": {
      "UPLOADS_PER_FRAME": {}
    }
  },
  "loader": {
    "_events": {},
    "_eventsCount": {},
    "baseUrl": {},
    "progress": {},
    "loading": {},
    "_progressChunk": {},
    "_beforeMiddleware": {},
    "_afterMiddleware": {},
    "_boundLoadResource": function () {},
    "_buffer": {},
    "_numToLoad": {},
    "_queue": {
      "_tasks": {},
      "concurrency": {},
      "saturated": function () {},
      "unsaturated": function () {},
      "buffer": {},
      "empty": function () {},
      "drain": function () {},
      "error": function () {},
      "started": {},
      "paused": {},
      "push": function () {},
      "kill": function () {},
      "unshift": function () {},
      "process": function () {},
      "length": function () {},
      "running": function () {},
      "idle": function () {},
      "pause": function () {},
      "resume": function () {}
    },
    "resources": {},
    "enqueue": function () {},
    "add": function () {},
    "pre": function () {},
    "before": function () {},
    "use": function () {},
    "after": function () {},
    "reset": function () {},
    "load": function () {},
    "_prepareUrl": function () {},
    "_loadResource": function () {},
    "_onComplete": function () {},
    "_onLoad": function () {},
    "eventNames": function () {},
    "listeners": function () {},
    "emit": function () {},
    "on": function () {},
    "once": function () {},
    "removeListener": function () {},
    "removeAllListeners": function () {},
    "off": function () {},
    "addListener": function () {},
    "setMaxListeners": function () {}
  },
  "utils": {
    "__esModule": {},
    "EventEmitter": {
      "prefixed": {},
      "EventEmitter": function () {}
    },
    "pluginTarget": {
      "mixin": function () {}
    },
    "TextureCache": {},
    "BaseTextureCache": {},
    "uid": function () {},
    "hex2rgb": function () {},
    "hex2string": function () {},
    "rgb2hex": function () {},
    "getResolutionOfUrl": function () {},
    "decomposeDataUri": function () {},
    "getUrlFileExtension": function () {},
    "getSvgSize": function () {},
    "skipHello": function () {},
    "sayHello": function () {},
    "isWebGLSupported": function () {},
    "sign": function () {},
    "removeItems": function () {},
    "uuid": function () {},
    "canUseNewCanvasBlendModes": function () {}
  },
  "ticker": {
    "__esModule": {},
    "shared": {
      "_emitter": {
        "_events": {},
        "_eventsCount": {},
        "eventNames": function () {},
        "listeners": function () {},
        "emit": function () {},
        "on": function () {},
        "once": function () {},
        "removeListener": function () {},
        "removeAllListeners": function () {},
        "off": function () {},
        "addListener": function () {},
        "setMaxListeners": function () {}
      },
      "_requestId": {},
      "_maxElapsedMS": {},
      "autoStart": {},
      "deltaTime": {},
      "elapsedMS": {},
      "lastTime": {},
      "speed": {},
      "started": {},
      "_tick": function () {},
      "_requestIfNeeded": function () {},
      "_cancelIfNeeded": function () {},
      "_startIfPossible": function () {},
      "add": function () {},
      "addOnce": function () {},
      "remove": function () {},
      "start": function () {},
      "stop": function () {},
      "update": function () {}
    },
    "Ticker": function () {}
  },
  "CanvasRenderer": {
    "__plugins": {
      "sprite": function () {},
      "graphics": function () {},
      "mesh": function () {},
      "accessibility": function () {},
      "extract": function () {},
      "interaction": {
        "prefixed": {},
        "EventEmitter": {
          "prefixed": {},
          "EventEmitter": function () {}
        }
      },
      "prepare": {
        "UPLOADS_PER_FRAME": {}
      }
    },
    "registerPlugin": function () {},
    "prefixed": {},
    "EventEmitter": {
      "prefixed": {},
      "EventEmitter": function () {}
    }
  },
  "WebGLRenderer": {
    "__plugins": {
      "sprite": function () {},
      "graphics": function () {},
      "mesh": function () {},
      "particle": function () {},
      "tilingSprite": function () {},
      "accessibility": function () {},
      "extract": function () {},
      "interaction": {
        "prefixed": {},
        "EventEmitter": {
          "prefixed": {},
          "EventEmitter": function () {}
        }
      },
      "prepare": {
        "UPLOADS_PER_FRAME": {}
      }
    },
    "registerPlugin": function () {},
    "prefixed": {},
    "EventEmitter": {
      "prefixed": {},
      "EventEmitter": function () {}
    }
  },
  "glCore": {
    "createContext": function () {},
    "setVertexAttribArrays": function () {},
    "GLBuffer": {
      "createVertexBuffer": function () {},
      "createIndexBuffer": function () {},
      "create": function () {}
    },
    "GLFramebuffer": {
      "createRGBA": function () {},
      "createFloat32": function () {}
    },
    "GLShader": function () {},
    "GLTexture": {
      "fromSource": function () {},
      "fromData": function () {}
    },
    "VertexArrayObject": {
      "FORCE_NATIVE": {}
    },
    "shader": {
      "compileProgram": function () {},
      "defaultValue": function () {},
      "extractAttributes": function () {},
      "extractUniforms": function () {},
      "generateUniformAccessObject": function () {},
      "mapSize": function () {},
      "mapType": function () {}
    }
  },
  "DisplayObject": {
    "prefixed": {},
    "EventEmitter": {
      "prefixed": {},
      "EventEmitter": function () {}
    }
  },
  "Container": {
    "prefixed": {},
    "EventEmitter": {
      "prefixed": {},
      "EventEmitter": function () {}
    }
  },
  "Transform": {
    "IDENTITY": {
      "worldTransform": {
        "a": {},
        "b": {},
        "c": {},
        "d": {},
        "tx": {},
        "ty": {},
        "array": {},
        "fromArray": function () {},
        "set": function () {},
        "toArray": function () {},
        "apply": function () {},
        "applyInverse": function () {},
        "translate": function () {},
        "scale": function () {},
        "rotate": function () {},
        "append": function () {},
        "setTransform": function () {},
        "prepend": function () {},
        "decompose": function () {},
        "invert": function () {},
        "identity": function () {},
        "clone": function () {},
        "copy": function () {}
      },
      "localTransform": {
        "a": {},
        "b": {},
        "c": {},
        "d": {},
        "tx": {},
        "ty": {},
        "array": {},
        "fromArray": function () {},
        "set": function () {},
        "toArray": function () {},
        "apply": function () {},
        "applyInverse": function () {},
        "translate": function () {},
        "scale": function () {},
        "rotate": function () {},
        "append": function () {},
        "setTransform": function () {},
        "prepend": function () {},
        "decompose": function () {},
        "invert": function () {},
        "identity": function () {},
        "clone": function () {},
        "copy": function () {}
      },
      "_worldID": {},
      "_parentID": {},
      "updateLocalTransform": function () {},
      "updateTransform": function () {},
      "updateWorldTransform": function () {}
    }
  },
  "TransformStatic": {
    "IDENTITY": {
      "worldTransform": {
        "a": {},
        "b": {},
        "c": {},
        "d": {},
        "tx": {},
        "ty": {},
        "array": {},
        "fromArray": function () {},
        "set": function () {},
        "toArray": function () {},
        "apply": function () {},
        "applyInverse": function () {},
        "translate": function () {},
        "scale": function () {},
        "rotate": function () {},
        "append": function () {},
        "setTransform": function () {},
        "prepend": function () {},
        "decompose": function () {},
        "invert": function () {},
        "identity": function () {},
        "clone": function () {},
        "copy": function () {}
      },
      "localTransform": {
        "a": {},
        "b": {},
        "c": {},
        "d": {},
        "tx": {},
        "ty": {},
        "array": {},
        "fromArray": function () {},
        "set": function () {},
        "toArray": function () {},
        "apply": function () {},
        "applyInverse": function () {},
        "translate": function () {},
        "scale": function () {},
        "rotate": function () {},
        "append": function () {},
        "setTransform": function () {},
        "prepend": function () {},
        "decompose": function () {},
        "invert": function () {},
        "identity": function () {},
        "clone": function () {},
        "copy": function () {}
      },
      "_worldID": {},
      "_parentID": {},
      "updateLocalTransform": function () {},
      "updateTransform": function () {},
      "updateWorldTransform": function () {}
    }
  },
  "TransformBase": {
    "IDENTITY": {
      "worldTransform": {
        "a": {},
        "b": {},
        "c": {},
        "d": {},
        "tx": {},
        "ty": {},
        "array": {},
        "fromArray": function () {},
        "set": function () {},
        "toArray": function () {},
        "apply": function () {},
        "applyInverse": function () {},
        "translate": function () {},
        "scale": function () {},
        "rotate": function () {},
        "append": function () {},
        "setTransform": function () {},
        "prepend": function () {},
        "decompose": function () {},
        "invert": function () {},
        "identity": function () {},
        "clone": function () {},
        "copy": function () {}
      },
      "localTransform": {
        "a": {},
        "b": {},
        "c": {},
        "d": {},
        "tx": {},
        "ty": {},
        "array": {},
        "fromArray": function () {},
        "set": function () {},
        "toArray": function () {},
        "apply": function () {},
        "applyInverse": function () {},
        "translate": function () {},
        "scale": function () {},
        "rotate": function () {},
        "append": function () {},
        "setTransform": function () {},
        "prepend": function () {},
        "decompose": function () {},
        "invert": function () {},
        "identity": function () {},
        "clone": function () {},
        "copy": function () {}
      },
      "_worldID": {},
      "_parentID": {},
      "updateLocalTransform": function () {},
      "updateTransform": function () {},
      "updateWorldTransform": function () {}
    }
  },
  "Sprite": {
    "from": function () {},
    "fromFrame": function () {},
    "fromImage": function () {},
    "prefixed": {},
    "EventEmitter": {
      "prefixed": {},
      "EventEmitter": function () {}
    }
  },
  "CanvasSpriteRenderer": function () {},
  "CanvasTinter": {
    "getTintedTexture": function () {},
    "tintWithMultiply": function () {},
    "tintWithOverlay": function () {},
    "tintWithPerPixel": function () {},
    "roundColor": function () {},
    "cacheStepsPerColorChannel": {},
    "convertTintToImage": {},
    "canUseMultiply": {},
    "tintMethod": function () {}
  },
  "SpriteRenderer": function () {},
  "Text": {
    "fontPropertiesCache": {},
    "fontPropertiesCanvas": {},
    "fontPropertiesContext": {
      "save": function () {},
      "restore": function () {},
      "scale": function () {},
      "rotate": function () {},
      "translate": function () {},
      "transform": function () {},
      "setTransform": function () {},
      "resetTransform": function () {},
      "createLinearGradient": function () {},
      "createRadialGradient": function () {},
      "createPattern": function () {},
      "clearRect": function () {},
      "fillRect": function () {},
      "strokeRect": function () {},
      "beginPath": function () {},
      "fill": function () {},
      "stroke": function () {},
      "drawFocusIfNeeded": function () {},
      "clip": function () {},
      "isPointInPath": function () {},
      "isPointInStroke": function () {},
      "fillText": function () {},
      "strokeText": function () {},
      "measureText": function () {},
      "drawImage": function () {},
      "createImageData": function () {},
      "getImageData": function () {},
      "putImageData": function () {},
      "setLineDash": function () {},
      "getLineDash": function () {},
      "closePath": function () {},
      "moveTo": function () {},
      "lineTo": function () {},
      "quadraticCurveTo": function () {},
      "bezierCurveTo": function () {},
      "arcTo": function () {},
      "rect": function () {},
      "arc": function () {},
      "canvas": {},
      "globalAlpha": {},
      "globalCompositeOperation": {},
      "strokeStyle": {},
      "fillStyle": {},
      "shadowOffsetX": {},
      "shadowOffsetY": {},
      "shadowBlur": {},
      "shadowColor": {},
      "mozCurrentTransform": {},
      "mozCurrentTransformInverse": {},
      "mozFillRule": {},
      "mozDash": {},
      "mozDashOffset": {},
      "mozTextStyle": {},
      "mozImageSmoothingEnabled": {},
      "lineWidth": {},
      "lineCap": {},
      "lineJoin": {},
      "miterLimit": {},
      "lineDashOffset": {},
      "font": {},
      "textAlign": {},
      "textBaseline": {}
    },
    "from": function () {},
    "fromFrame": function () {},
    "fromImage": function () {},
    "prefixed": {},
    "EventEmitter": {
      "prefixed": {},
      "EventEmitter": function () {}
    }
  },
  "TextStyle": function () {},
  "Graphics": {
    "_SPRITE_TEXTURE": {},
    "prefixed": {},
    "EventEmitter": {
      "prefixed": {},
      "EventEmitter": function () {}
    }
  },
  "GraphicsData": function () {},
  "GraphicsRenderer": function () {},
  "CanvasGraphicsRenderer": function () {},
  "Texture": {
    "fromImage": function () {},
    "fromFrame": function () {},
    "fromCanvas": function () {},
    "fromVideo": function () {},
    "fromVideoUrl": function () {},
    "from": function () {},
    "addTextureToCache": function () {},
    "removeTextureFromCache": function () {},
    "EMPTY": {
      "_events": {},
      "_eventsCount": {},
      "noFrame": {},
      "baseTexture": {
        "_events": {
          "loaded": {
            "fn": function () {},
            "context": {},
            "once": {}
          }
        },
        "_eventsCount": {},
        "uid": {},
        "touched": {},
        "resolution": {},
        "width": {},
        "height": {},
        "realWidth": {},
        "realHeight": {},
        "scaleMode": {},
        "hasLoaded": {},
        "isLoading": {},
        "source": {},
        "origSource": {},
        "imageType": {},
        "sourceScale": {},
        "premultipliedAlpha": {},
        "imageUrl": {},
        "isPowerOfTwo": {},
        "mipmap": {},
        "wrapMode": {},
        "_glTextures": {},
        "_enabled": {},
        "_id": {},
        "update": function () {},
        "loadSource": function () {},
        "_updateImageType": function () {},
        "_loadSvgSource": function () {},
        "_loadSvgSourceUsingDataUri": function () {},
        "_loadSvgSourceUsingXhr": function () {},
        "_loadSvgSourceUsingString": function () {},
        "_sourceLoaded": function () {},
        "destroy": function () {},
        "dispose": function () {},
        "updateSourceImage": function () {},
        "eventNames": function () {},
        "listeners": function () {},
        "emit": function () {},
        "on": function () {},
        "once": function () {},
        "removeListener": function () {},
        "removeAllListeners": function () {},
        "off": function () {},
        "addListener": function () {},
        "setMaxListeners": function () {}
      },
      "_frame": {
        "x": {},
        "y": {},
        "width": {},
        "height": {},
        "type": {},
        "clone": function () {},
        "copy": function () {},
        "contains": function () {},
        "pad": function () {},
        "fit": function () {},
        "enlarge": function () {}
      },
      "trim": {},
      "valid": {},
      "requiresUpdate": {},
      "_uvs": {},
      "orig": {
        "x": {},
        "y": {},
        "width": {},
        "height": {},
        "type": {},
        "clone": function () {},
        "copy": function () {},
        "contains": function () {},
        "pad": function () {},
        "fit": function () {},
        "enlarge": function () {}
      },
      "_rotate": {},
      "_updateID": {},
      "transform": {},
      "destroy": function () {},
      "on": function () {},
      "once": function () {},
      "emit": function () {},
      "update": function () {},
      "onBaseTextureLoaded": function () {},
      "onBaseTextureUpdated": function () {},
      "clone": function () {},
      "_updateUvs": function () {},
      "setFrame": function () {},
      "eventNames": function () {},
      "listeners": function () {},
      "removeListener": function () {},
      "removeAllListeners": function () {},
      "off": function () {},
      "addListener": function () {},
      "setMaxListeners": function () {}
    },
    "prefixed": {},
    "EventEmitter": {
      "prefixed": {},
      "EventEmitter": function () {}
    }
  },
  "BaseTexture": {
    "fromImage": function () {},
    "fromCanvas": function () {},
    "prefixed": {},
    "EventEmitter": {
      "prefixed": {},
      "EventEmitter": function () {}
    }
  },
  "RenderTexture": {
    "create": function () {},
    "fromImage": function () {},
    "fromFrame": function () {},
    "fromCanvas": function () {},
    "fromVideo": function () {},
    "fromVideoUrl": function () {},
    "from": function () {},
    "addTextureToCache": function () {},
    "removeTextureFromCache": function () {},
    "EMPTY": {
      "_events": {},
      "_eventsCount": {},
      "noFrame": {},
      "baseTexture": {
        "_events": {
          "loaded": {
            "fn": function () {},
            "context": {},
            "once": {}
          }
        },
        "_eventsCount": {},
        "uid": {},
        "touched": {},
        "resolution": {},
        "width": {},
        "height": {},
        "realWidth": {},
        "realHeight": {},
        "scaleMode": {},
        "hasLoaded": {},
        "isLoading": {},
        "source": {},
        "origSource": {},
        "imageType": {},
        "sourceScale": {},
        "premultipliedAlpha": {},
        "imageUrl": {},
        "isPowerOfTwo": {},
        "mipmap": {},
        "wrapMode": {},
        "_glTextures": {},
        "_enabled": {},
        "_id": {},
        "update": function () {},
        "loadSource": function () {},
        "_updateImageType": function () {},
        "_loadSvgSource": function () {},
        "_loadSvgSourceUsingDataUri": function () {},
        "_loadSvgSourceUsingXhr": function () {},
        "_loadSvgSourceUsingString": function () {},
        "_sourceLoaded": function () {},
        "destroy": function () {},
        "dispose": function () {},
        "updateSourceImage": function () {},
        "eventNames": function () {},
        "listeners": function () {},
        "emit": function () {},
        "on": function () {},
        "once": function () {},
        "removeListener": function () {},
        "removeAllListeners": function () {},
        "off": function () {},
        "addListener": function () {},
        "setMaxListeners": function () {}
      },
      "_frame": {
        "x": {},
        "y": {},
        "width": {},
        "height": {},
        "type": {},
        "clone": function () {},
        "copy": function () {},
        "contains": function () {},
        "pad": function () {},
        "fit": function () {},
        "enlarge": function () {}
      },
      "trim": {},
      "valid": {},
      "requiresUpdate": {},
      "_uvs": {},
      "orig": {
        "x": {},
        "y": {},
        "width": {},
        "height": {},
        "type": {},
        "clone": function () {},
        "copy": function () {},
        "contains": function () {},
        "pad": function () {},
        "fit": function () {},
        "enlarge": function () {}
      },
      "_rotate": {},
      "_updateID": {},
      "transform": {},
      "destroy": function () {},
      "on": function () {},
      "once": function () {},
      "emit": function () {},
      "update": function () {},
      "onBaseTextureLoaded": function () {},
      "onBaseTextureUpdated": function () {},
      "clone": function () {},
      "_updateUvs": function () {},
      "setFrame": function () {},
      "eventNames": function () {},
      "listeners": function () {},
      "removeListener": function () {},
      "removeAllListeners": function () {},
      "off": function () {},
      "addListener": function () {},
      "setMaxListeners": function () {}
    },
    "prefixed": {},
    "EventEmitter": {
      "prefixed": {},
      "EventEmitter": function () {}
    }
  },
  "BaseRenderTexture": {
    "fromImage": function () {},
    "fromCanvas": function () {},
    "prefixed": {},
    "EventEmitter": {
      "prefixed": {},
      "EventEmitter": function () {}
    }
  },
  "VideoBaseTexture": {
    "fromVideo": function () {},
    "fromUrl": function () {},
    "fromUrls": function () {},
    "fromImage": function () {},
    "fromCanvas": function () {},
    "prefixed": {},
    "EventEmitter": {
      "prefixed": {},
      "EventEmitter": function () {}
    }
  },
  "TextureUvs": function () {},
  "CanvasRenderTarget": function () {},
  "Shader": function () {},
  "WebGLManager": function () {},
  "ObjectRenderer": function () {},
  "RenderTarget": function () {},
  "Quad": function () {},
  "SpriteMaskFilter": function () {},
  "Filter": function () {},
  "VERSION": {},
  "PI_2": {},
  "RAD_TO_DEG": {},
  "DEG_TO_RAD": {},
  "TARGET_FPMS": {},
  "RENDERER_TYPE": {
    "UNKNOWN": {},
    "WEBGL": {},
    "CANVAS": {}
  },
  "BLEND_MODES": {
    "NORMAL": {},
    "ADD": {},
    "MULTIPLY": {},
    "SCREEN": {},
    "OVERLAY": {},
    "DARKEN": {},
    "LIGHTEN": {},
    "COLOR_DODGE": {},
    "COLOR_BURN": {},
    "HARD_LIGHT": {},
    "SOFT_LIGHT": {},
    "DIFFERENCE": {},
    "EXCLUSION": {},
    "HUE": {},
    "SATURATION": {},
    "COLOR": {},
    "LUMINOSITY": {}
  },
  "DRAW_MODES": {
    "POINTS": {},
    "LINES": {},
    "LINE_LOOP": {},
    "LINE_STRIP": {},
    "TRIANGLES": {},
    "TRIANGLE_STRIP": {},
    "TRIANGLE_FAN": {}
  },
  "SCALE_MODES": {
    "DEFAULT": {},
    "LINEAR": {},
    "NEAREST": {}
  },
  "WRAP_MODES": {
    "DEFAULT": {},
    "CLAMP": {},
    "REPEAT": {},
    "MIRRORED_REPEAT": {}
  },
  "GC_MODES": {
    "DEFAULT": {},
    "AUTO": {},
    "MANUAL": {}
  },
  "MIPMAP_TEXTURES": {},
  "RETINA_PREFIX": {},
  "RESOLUTION": {},
  "FILTER_RESOLUTION": {},
  "DEFAULT_RENDER_OPTIONS": {
    "view": {},
    "antialias": {},
    "forceFXAA": {},
    "autoResize": {},
    "transparent": {},
    "backgroundColor": {},
    "clearBeforeRender": {},
    "preserveDrawingBuffer": {},
    "roundPixels": {}
  },
  "URL_FILE_EXTENSION": {},
  "DATA_URI": {},
  "SVG_SIZE": {},
  "SHAPES": {
    "POLY": {},
    "RECT": {},
    "CIRC": {},
    "ELIP": {},
    "RREC": {}
  },
  "PRECISION": {
    "DEFAULT": {},
    "LOW": {},
    "MEDIUM": {},
    "HIGH": {}
  },
  "TRANSFORM_MODE": {
    "DEFAULT": {},
    "STATIC": {},
    "DYNAMIC": {}
  },
  "TEXT_GRADIENT": {
    "LINEAR_VERTICAL": {},
    "LINEAR_HORIZONTAL": {}
  },
  "SPRITE_BATCH_SIZE": {},
  "SPRITE_MAX_TEXTURES": {},
  "Point": function () {},
  "ObservablePoint": function () {},
  "Matrix": function () {},
  "GroupD8": {
    "E": {},
    "SE": {},
    "S": {},
    "SW": {},
    "W": {},
    "NW": {},
    "N": {},
    "NE": {},
    "MIRROR_VERTICAL": {},
    "MIRROR_HORIZONTAL": {},
    "uX": function () {},
    "uY": function () {},
    "vX": function () {},
    "vY": function () {},
    "inv": function () {},
    "add": function () {},
    "sub": function () {},
    "rotate180": function () {},
    "isSwapWidthHeight": function () {},
    "byDirection": function () {},
    "matrixAppendRotationInv": function () {}
  },
  "Circle": function () {},
  "Ellipse": function () {},
  "Polygon": function () {},
  "Rectangle": function () {},
  "RoundedRectangle": function () {},
  "autoDetectRenderer": function () {},
  "SpriteBatch": function () {},
  "AssetLoader": function () {},
  "Stage": {
    "prefixed": {},
    "EventEmitter": {
      "prefixed": {},
      "EventEmitter": function () {}
    }
  },
  "DisplayObjectContainer": {
    "prefixed": {},
    "EventEmitter": {
      "prefixed": {},
      "EventEmitter": function () {}
    }
  },
  "Strip": {
    "DRAW_MODES": {
      "TRIANGLE_MESH": {},
      "TRIANGLES": {}
    },
    "prefixed": {},
    "EventEmitter": {
      "prefixed": {},
      "EventEmitter": function () {}
    }
  },
  "Rope": {
    "DRAW_MODES": {
      "TRIANGLE_MESH": {},
      "TRIANGLES": {}
    },
    "prefixed": {},
    "EventEmitter": {
      "prefixed": {},
      "EventEmitter": function () {}
    }
  },
  "ParticleContainer": {
    "prefixed": {},
    "EventEmitter": {
      "prefixed": {},
      "EventEmitter": function () {}
    }
  },
  "MovieClip": {
    "fromFrames": function () {},
    "fromImages": function () {},
    "from": function () {},
    "fromFrame": function () {},
    "fromImage": function () {},
    "prefixed": {},
    "EventEmitter": {
      "prefixed": {},
      "EventEmitter": function () {}
    }
  },
  "TilingSprite": {
    "from": function () {},
    "fromFrame": function () {},
    "fromImage": function () {},
    "prefixed": {},
    "EventEmitter": {
      "prefixed": {},
      "EventEmitter": function () {}
    }
  },
  "BitmapText": {
    "fonts": {},
    "prefixed": {},
    "EventEmitter": {
      "prefixed": {},
      "EventEmitter": function () {}
    }
  },
  "blendModes": {
    "NORMAL": {},
    "ADD": {},
    "MULTIPLY": {},
    "SCREEN": {},
    "OVERLAY": {},
    "DARKEN": {},
    "LIGHTEN": {},
    "COLOR_DODGE": {},
    "COLOR_BURN": {},
    "HARD_LIGHT": {},
    "SOFT_LIGHT": {},
    "DIFFERENCE": {},
    "EXCLUSION": {},
    "HUE": {},
    "SATURATION": {},
    "COLOR": {},
    "LUMINOSITY": {}
  },
  "scaleModes": {
    "DEFAULT": {},
    "LINEAR": {},
    "NEAREST": {}
  },
  "BaseTextureCache": {},
  "TextureCache": {},
  "math": {
    "__esModule": {},
    "utils": {
      "__esModule": {},
      "EventEmitter": {
        "prefixed": {},
        "EventEmitter": function () {}
      },
      "pluginTarget": {
        "mixin": function () {}
      },
      "TextureCache": {},
      "BaseTextureCache": {},
      "uid": function () {},
      "hex2rgb": function () {},
      "hex2string": function () {},
      "rgb2hex": function () {},
      "getResolutionOfUrl": function () {},
      "decomposeDataUri": function () {},
      "getUrlFileExtension": function () {},
      "getSvgSize": function () {},
      "skipHello": function () {},
      "sayHello": function () {},
      "isWebGLSupported": function () {},
      "sign": function () {},
      "removeItems": function () {},
      "uuid": function () {},
      "canUseNewCanvasBlendModes": function () {}
    },
    "ticker": {
      "__esModule": {},
      "shared": {
        "_emitter": {
          "_events": {},
          "_eventsCount": {},
          "eventNames": function () {},
          "listeners": function () {},
          "emit": function () {},
          "on": function () {},
          "once": function () {},
          "removeListener": function () {},
          "removeAllListeners": function () {},
          "off": function () {},
          "addListener": function () {},
          "setMaxListeners": function () {}
        },
        "_requestId": {},
        "_maxElapsedMS": {},
        "autoStart": {},
        "deltaTime": {},
        "elapsedMS": {},
        "lastTime": {},
        "speed": {},
        "started": {},
        "_tick": function () {},
        "_requestIfNeeded": function () {},
        "_cancelIfNeeded": function () {},
        "_startIfPossible": function () {},
        "add": function () {},
        "addOnce": function () {},
        "remove": function () {},
        "start": function () {},
        "stop": function () {},
        "update": function () {}
      },
      "Ticker": function () {}
    },
    "CanvasRenderer": {
      "__plugins": {
        "sprite": function () {},
        "graphics": function () {},
        "mesh": function () {},
        "accessibility": function () {},
        "extract": function () {},
        "interaction": {
          "prefixed": {},
          "EventEmitter": {
            "prefixed": {},
            "EventEmitter": function () {}
          }
        },
        "prepare": {
          "UPLOADS_PER_FRAME": {}
        }
      },
      "registerPlugin": function () {},
      "prefixed": {},
      "EventEmitter": {
        "prefixed": {},
        "EventEmitter": function () {}
      }
    },
    "WebGLRenderer": {
      "__plugins": {
        "sprite": function () {},
        "graphics": function () {},
        "mesh": function () {},
        "particle": function () {},
        "tilingSprite": function () {},
        "accessibility": function () {},
        "extract": function () {},
        "interaction": {
          "prefixed": {},
          "EventEmitter": {
            "prefixed": {},
            "EventEmitter": function () {}
          }
        },
        "prepare": {
          "UPLOADS_PER_FRAME": {}
        }
      },
      "registerPlugin": function () {},
      "prefixed": {},
      "EventEmitter": {
        "prefixed": {},
        "EventEmitter": function () {}
      }
    },
    "glCore": {
      "createContext": function () {},
      "setVertexAttribArrays": function () {},
      "GLBuffer": {
        "createVertexBuffer": function () {},
        "createIndexBuffer": function () {},
        "create": function () {}
      },
      "GLFramebuffer": {
        "createRGBA": function () {},
        "createFloat32": function () {}
      },
      "GLShader": function () {},
      "GLTexture": {
        "fromSource": function () {},
        "fromData": function () {}
      },
      "VertexArrayObject": {
        "FORCE_NATIVE": {}
      },
      "shader": {
        "compileProgram": function () {},
        "defaultValue": function () {},
        "extractAttributes": function () {},
        "extractUniforms": function () {},
        "generateUniformAccessObject": function () {},
        "mapSize": function () {},
        "mapType": function () {}
      }
    },
    "DisplayObject": {
      "prefixed": {},
      "EventEmitter": {
        "prefixed": {},
        "EventEmitter": function () {}
      }
    },
    "Container": {
      "prefixed": {},
      "EventEmitter": {
        "prefixed": {},
        "EventEmitter": function () {}
      }
    },
    "Transform": {
      "IDENTITY": {
        "worldTransform": {
          "a": {},
          "b": {},
          "c": {},
          "d": {},
          "tx": {},
          "ty": {},
          "array": {},
          "fromArray": function () {},
          "set": function () {},
          "toArray": function () {},
          "apply": function () {},
          "applyInverse": function () {},
          "translate": function () {},
          "scale": function () {},
          "rotate": function () {},
          "append": function () {},
          "setTransform": function () {},
          "prepend": function () {},
          "decompose": function () {},
          "invert": function () {},
          "identity": function () {},
          "clone": function () {},
          "copy": function () {}
        },
        "localTransform": {
          "a": {},
          "b": {},
          "c": {},
          "d": {},
          "tx": {},
          "ty": {},
          "array": {},
          "fromArray": function () {},
          "set": function () {},
          "toArray": function () {},
          "apply": function () {},
          "applyInverse": function () {},
          "translate": function () {},
          "scale": function () {},
          "rotate": function () {},
          "append": function () {},
          "setTransform": function () {},
          "prepend": function () {},
          "decompose": function () {},
          "invert": function () {},
          "identity": function () {},
          "clone": function () {},
          "copy": function () {}
        },
        "_worldID": {},
        "_parentID": {},
        "updateLocalTransform": function () {},
        "updateTransform": function () {},
        "updateWorldTransform": function () {}
      }
    },
    "TransformStatic": {
      "IDENTITY": {
        "worldTransform": {
          "a": {},
          "b": {},
          "c": {},
          "d": {},
          "tx": {},
          "ty": {},
          "array": {},
          "fromArray": function () {},
          "set": function () {},
          "toArray": function () {},
          "apply": function () {},
          "applyInverse": function () {},
          "translate": function () {},
          "scale": function () {},
          "rotate": function () {},
          "append": function () {},
          "setTransform": function () {},
          "prepend": function () {},
          "decompose": function () {},
          "invert": function () {},
          "identity": function () {},
          "clone": function () {},
          "copy": function () {}
        },
        "localTransform": {
          "a": {},
          "b": {},
          "c": {},
          "d": {},
          "tx": {},
          "ty": {},
          "array": {},
          "fromArray": function () {},
          "set": function () {},
          "toArray": function () {},
          "apply": function () {},
          "applyInverse": function () {},
          "translate": function () {},
          "scale": function () {},
          "rotate": function () {},
          "append": function () {},
          "setTransform": function () {},
          "prepend": function () {},
          "decompose": function () {},
          "invert": function () {},
          "identity": function () {},
          "clone": function () {},
          "copy": function () {}
        },
        "_worldID": {},
        "_parentID": {},
        "updateLocalTransform": function () {},
        "updateTransform": function () {},
        "updateWorldTransform": function () {}
      }
    },
    "TransformBase": {
      "IDENTITY": {
        "worldTransform": {
          "a": {},
          "b": {},
          "c": {},
          "d": {},
          "tx": {},
          "ty": {},
          "array": {},
          "fromArray": function () {},
          "set": function () {},
          "toArray": function () {},
          "apply": function () {},
          "applyInverse": function () {},
          "translate": function () {},
          "scale": function () {},
          "rotate": function () {},
          "append": function () {},
          "setTransform": function () {},
          "prepend": function () {},
          "decompose": function () {},
          "invert": function () {},
          "identity": function () {},
          "clone": function () {},
          "copy": function () {}
        },
        "localTransform": {
          "a": {},
          "b": {},
          "c": {},
          "d": {},
          "tx": {},
          "ty": {},
          "array": {},
          "fromArray": function () {},
          "set": function () {},
          "toArray": function () {},
          "apply": function () {},
          "applyInverse": function () {},
          "translate": function () {},
          "scale": function () {},
          "rotate": function () {},
          "append": function () {},
          "setTransform": function () {},
          "prepend": function () {},
          "decompose": function () {},
          "invert": function () {},
          "identity": function () {},
          "clone": function () {},
          "copy": function () {}
        },
        "_worldID": {},
        "_parentID": {},
        "updateLocalTransform": function () {},
        "updateTransform": function () {},
        "updateWorldTransform": function () {}
      }
    },
    "Sprite": {
      "from": function () {},
      "fromFrame": function () {},
      "fromImage": function () {},
      "prefixed": {},
      "EventEmitter": {
        "prefixed": {},
        "EventEmitter": function () {}
      }
    },
    "CanvasSpriteRenderer": function () {},
    "CanvasTinter": {
      "getTintedTexture": function () {},
      "tintWithMultiply": function () {},
      "tintWithOverlay": function () {},
      "tintWithPerPixel": function () {},
      "roundColor": function () {},
      "cacheStepsPerColorChannel": {},
      "convertTintToImage": {},
      "canUseMultiply": {},
      "tintMethod": function () {}
    },
    "SpriteRenderer": function () {},
    "Text": {
      "fontPropertiesCache": {},
      "fontPropertiesCanvas": {},
      "fontPropertiesContext": {
        "save": function () {},
        "restore": function () {},
        "scale": function () {},
        "rotate": function () {},
        "translate": function () {},
        "transform": function () {},
        "setTransform": function () {},
        "resetTransform": function () {},
        "createLinearGradient": function () {},
        "createRadialGradient": function () {},
        "createPattern": function () {},
        "clearRect": function () {},
        "fillRect": function () {},
        "strokeRect": function () {},
        "beginPath": function () {},
        "fill": function () {},
        "stroke": function () {},
        "drawFocusIfNeeded": function () {},
        "clip": function () {},
        "isPointInPath": function () {},
        "isPointInStroke": function () {},
        "fillText": function () {},
        "strokeText": function () {},
        "measureText": function () {},
        "drawImage": function () {},
        "createImageData": function () {},
        "getImageData": function () {},
        "putImageData": function () {},
        "setLineDash": function () {},
        "getLineDash": function () {},
        "closePath": function () {},
        "moveTo": function () {},
        "lineTo": function () {},
        "quadraticCurveTo": function () {},
        "bezierCurveTo": function () {},
        "arcTo": function () {},
        "rect": function () {},
        "arc": function () {},
        "canvas": {},
        "globalAlpha": {},
        "globalCompositeOperation": {},
        "strokeStyle": {},
        "fillStyle": {},
        "shadowOffsetX": {},
        "shadowOffsetY": {},
        "shadowBlur": {},
        "shadowColor": {},
        "mozCurrentTransform": {},
        "mozCurrentTransformInverse": {},
        "mozFillRule": {},
        "mozDash": {},
        "mozDashOffset": {},
        "mozTextStyle": {},
        "mozImageSmoothingEnabled": {},
        "lineWidth": {},
        "lineCap": {},
        "lineJoin": {},
        "miterLimit": {},
        "lineDashOffset": {},
        "font": {},
        "textAlign": {},
        "textBaseline": {}
      },
      "from": function () {},
      "fromFrame": function () {},
      "fromImage": function () {},
      "prefixed": {},
      "EventEmitter": {
        "prefixed": {},
        "EventEmitter": function () {}
      }
    },
    "TextStyle": function () {},
    "Graphics": {
      "_SPRITE_TEXTURE": {},
      "prefixed": {},
      "EventEmitter": {
        "prefixed": {},
        "EventEmitter": function () {}
      }
    },
    "GraphicsData": function () {},
    "GraphicsRenderer": function () {},
    "CanvasGraphicsRenderer": function () {},
    "Texture": {
      "fromImage": function () {},
      "fromFrame": function () {},
      "fromCanvas": function () {},
      "fromVideo": function () {},
      "fromVideoUrl": function () {},
      "from": function () {},
      "addTextureToCache": function () {},
      "removeTextureFromCache": function () {},
      "EMPTY": {
        "_events": {},
        "_eventsCount": {},
        "noFrame": {},
        "baseTexture": {
          "_events": {
            "loaded": {
              "fn": function () {},
              "context": {},
              "once": {}
            }
          },
          "_eventsCount": {},
          "uid": {},
          "touched": {},
          "resolution": {},
          "width": {},
          "height": {},
          "realWidth": {},
          "realHeight": {},
          "scaleMode": {},
          "hasLoaded": {},
          "isLoading": {},
          "source": {},
          "origSource": {},
          "imageType": {},
          "sourceScale": {},
          "premultipliedAlpha": {},
          "imageUrl": {},
          "isPowerOfTwo": {},
          "mipmap": {},
          "wrapMode": {},
          "_glTextures": {},
          "_enabled": {},
          "_id": {},
          "update": function () {},
          "loadSource": function () {},
          "_updateImageType": function () {},
          "_loadSvgSource": function () {},
          "_loadSvgSourceUsingDataUri": function () {},
          "_loadSvgSourceUsingXhr": function () {},
          "_loadSvgSourceUsingString": function () {},
          "_sourceLoaded": function () {},
          "destroy": function () {},
          "dispose": function () {},
          "updateSourceImage": function () {},
          "eventNames": function () {},
          "listeners": function () {},
          "emit": function () {},
          "on": function () {},
          "once": function () {},
          "removeListener": function () {},
          "removeAllListeners": function () {},
          "off": function () {},
          "addListener": function () {},
          "setMaxListeners": function () {}
        },
        "_frame": {
          "x": {},
          "y": {},
          "width": {},
          "height": {},
          "type": {},
          "clone": function () {},
          "copy": function () {},
          "contains": function () {},
          "pad": function () {},
          "fit": function () {},
          "enlarge": function () {}
        },
        "trim": {},
        "valid": {},
        "requiresUpdate": {},
        "_uvs": {},
        "orig": {
          "x": {},
          "y": {},
          "width": {},
          "height": {},
          "type": {},
          "clone": function () {},
          "copy": function () {},
          "contains": function () {},
          "pad": function () {},
          "fit": function () {},
          "enlarge": function () {}
        },
        "_rotate": {},
        "_updateID": {},
        "transform": {},
        "destroy": function () {},
        "on": function () {},
        "once": function () {},
        "emit": function () {},
        "update": function () {},
        "onBaseTextureLoaded": function () {},
        "onBaseTextureUpdated": function () {},
        "clone": function () {},
        "_updateUvs": function () {},
        "setFrame": function () {},
        "eventNames": function () {},
        "listeners": function () {},
        "removeListener": function () {},
        "removeAllListeners": function () {},
        "off": function () {},
        "addListener": function () {},
        "setMaxListeners": function () {}
      },
      "prefixed": {},
      "EventEmitter": {
        "prefixed": {},
        "EventEmitter": function () {}
      }
    },
    "BaseTexture": {
      "fromImage": function () {},
      "fromCanvas": function () {},
      "prefixed": {},
      "EventEmitter": {
        "prefixed": {},
        "EventEmitter": function () {}
      }
    },
    "RenderTexture": {
      "create": function () {},
      "fromImage": function () {},
      "fromFrame": function () {},
      "fromCanvas": function () {},
      "fromVideo": function () {},
      "fromVideoUrl": function () {},
      "from": function () {},
      "addTextureToCache": function () {},
      "removeTextureFromCache": function () {},
      "EMPTY": {
        "_events": {},
        "_eventsCount": {},
        "noFrame": {},
        "baseTexture": {
          "_events": {
            "loaded": {
              "fn": function () {},
              "context": {},
              "once": {}
            }
          },
          "_eventsCount": {},
          "uid": {},
          "touched": {},
          "resolution": {},
          "width": {},
          "height": {},
          "realWidth": {},
          "realHeight": {},
          "scaleMode": {},
          "hasLoaded": {},
          "isLoading": {},
          "source": {},
          "origSource": {},
          "imageType": {},
          "sourceScale": {},
          "premultipliedAlpha": {},
          "imageUrl": {},
          "isPowerOfTwo": {},
          "mipmap": {},
          "wrapMode": {},
          "_glTextures": {},
          "_enabled": {},
          "_id": {},
          "update": function () {},
          "loadSource": function () {},
          "_updateImageType": function () {},
          "_loadSvgSource": function () {},
          "_loadSvgSourceUsingDataUri": function () {},
          "_loadSvgSourceUsingXhr": function () {},
          "_loadSvgSourceUsingString": function () {},
          "_sourceLoaded": function () {},
          "destroy": function () {},
          "dispose": function () {},
          "updateSourceImage": function () {},
          "eventNames": function () {},
          "listeners": function () {},
          "emit": function () {},
          "on": function () {},
          "once": function () {},
          "removeListener": function () {},
          "removeAllListeners": function () {},
          "off": function () {},
          "addListener": function () {},
          "setMaxListeners": function () {}
        },
        "_frame": {
          "x": {},
          "y": {},
          "width": {},
          "height": {},
          "type": {},
          "clone": function () {},
          "copy": function () {},
          "contains": function () {},
          "pad": function () {},
          "fit": function () {},
          "enlarge": function () {}
        },
        "trim": {},
        "valid": {},
        "requiresUpdate": {},
        "_uvs": {},
        "orig": {
          "x": {},
          "y": {},
          "width": {},
          "height": {},
          "type": {},
          "clone": function () {},
          "copy": function () {},
          "contains": function () {},
          "pad": function () {},
          "fit": function () {},
          "enlarge": function () {}
        },
        "_rotate": {},
        "_updateID": {},
        "transform": {},
        "destroy": function () {},
        "on": function () {},
        "once": function () {},
        "emit": function () {},
        "update": function () {},
        "onBaseTextureLoaded": function () {},
        "onBaseTextureUpdated": function () {},
        "clone": function () {},
        "_updateUvs": function () {},
        "setFrame": function () {},
        "eventNames": function () {},
        "listeners": function () {},
        "removeListener": function () {},
        "removeAllListeners": function () {},
        "off": function () {},
        "addListener": function () {},
        "setMaxListeners": function () {}
      },
      "prefixed": {},
      "EventEmitter": {
        "prefixed": {},
        "EventEmitter": function () {}
      }
    },
    "BaseRenderTexture": {
      "fromImage": function () {},
      "fromCanvas": function () {},
      "prefixed": {},
      "EventEmitter": {
        "prefixed": {},
        "EventEmitter": function () {}
      }
    },
    "VideoBaseTexture": {
      "fromVideo": function () {},
      "fromUrl": function () {},
      "fromUrls": function () {},
      "fromImage": function () {},
      "fromCanvas": function () {},
      "prefixed": {},
      "EventEmitter": {
        "prefixed": {},
        "EventEmitter": function () {}
      }
    },
    "TextureUvs": function () {},
    "CanvasRenderTarget": function () {},
    "Shader": function () {},
    "WebGLManager": function () {},
    "ObjectRenderer": function () {},
    "RenderTarget": function () {},
    "Quad": function () {},
    "SpriteMaskFilter": function () {},
    "Filter": function () {},
    "VERSION": {},
    "PI_2": {},
    "RAD_TO_DEG": {},
    "DEG_TO_RAD": {},
    "TARGET_FPMS": {},
    "RENDERER_TYPE": {
      "UNKNOWN": {},
      "WEBGL": {},
      "CANVAS": {}
    },
    "BLEND_MODES": {
      "NORMAL": {},
      "ADD": {},
      "MULTIPLY": {},
      "SCREEN": {},
      "OVERLAY": {},
      "DARKEN": {},
      "LIGHTEN": {},
      "COLOR_DODGE": {},
      "COLOR_BURN": {},
      "HARD_LIGHT": {},
      "SOFT_LIGHT": {},
      "DIFFERENCE": {},
      "EXCLUSION": {},
      "HUE": {},
      "SATURATION": {},
      "COLOR": {},
      "LUMINOSITY": {}
    },
    "DRAW_MODES": {
      "POINTS": {},
      "LINES": {},
      "LINE_LOOP": {},
      "LINE_STRIP": {},
      "TRIANGLES": {},
      "TRIANGLE_STRIP": {},
      "TRIANGLE_FAN": {}
    },
    "SCALE_MODES": {
      "DEFAULT": {},
      "LINEAR": {},
      "NEAREST": {}
    },
    "WRAP_MODES": {
      "DEFAULT": {},
      "CLAMP": {},
      "REPEAT": {},
      "MIRRORED_REPEAT": {}
    },
    "GC_MODES": {
      "DEFAULT": {},
      "AUTO": {},
      "MANUAL": {}
    },
    "MIPMAP_TEXTURES": {},
    "RETINA_PREFIX": {},
    "RESOLUTION": {},
    "FILTER_RESOLUTION": {},
    "DEFAULT_RENDER_OPTIONS": {
      "view": {},
      "antialias": {},
      "forceFXAA": {},
      "autoResize": {},
      "transparent": {},
      "backgroundColor": {},
      "clearBeforeRender": {},
      "preserveDrawingBuffer": {},
      "roundPixels": {}
    },
    "URL_FILE_EXTENSION": {},
    "DATA_URI": {},
    "SVG_SIZE": {},
    "SHAPES": {
      "POLY": {},
      "RECT": {},
      "CIRC": {},
      "ELIP": {},
      "RREC": {}
    },
    "PRECISION": {
      "DEFAULT": {},
      "LOW": {},
      "MEDIUM": {},
      "HIGH": {}
    },
    "TRANSFORM_MODE": {
      "DEFAULT": {},
      "STATIC": {},
      "DYNAMIC": {}
    },
    "TEXT_GRADIENT": {
      "LINEAR_VERTICAL": {},
      "LINEAR_HORIZONTAL": {}
    },
    "SPRITE_BATCH_SIZE": {},
    "SPRITE_MAX_TEXTURES": {},
    "Point": function () {},
    "ObservablePoint": function () {},
    "Matrix": function () {},
    "GroupD8": {
      "E": {},
      "SE": {},
      "S": {},
      "SW": {},
      "W": {},
      "NW": {},
      "N": {},
      "NE": {},
      "MIRROR_VERTICAL": {},
      "MIRROR_HORIZONTAL": {},
      "uX": function () {},
      "uY": function () {},
      "vX": function () {},
      "vY": function () {},
      "inv": function () {},
      "add": function () {},
      "sub": function () {},
      "rotate180": function () {},
      "isSwapWidthHeight": function () {},
      "byDirection": function () {},
      "matrixAppendRotationInv": function () {}
    },
    "Circle": function () {},
    "Ellipse": function () {},
    "Polygon": function () {},
    "Rectangle": function () {},
    "RoundedRectangle": function () {},
    "autoDetectRenderer": function () {},
    "SpriteBatch": function () {},
    "AssetLoader": function () {},
    "Stage": {
      "prefixed": {},
      "EventEmitter": {
        "prefixed": {},
        "EventEmitter": function () {}
      }
    },
    "DisplayObjectContainer": {
      "prefixed": {},
      "EventEmitter": {
        "prefixed": {},
        "EventEmitter": function () {}
      }
    },
    "Strip": {
      "DRAW_MODES": {
        "TRIANGLE_MESH": {},
        "TRIANGLES": {}
      },
      "prefixed": {},
      "EventEmitter": {
        "prefixed": {},
        "EventEmitter": function () {}
      }
    },
    "Rope": {
      "DRAW_MODES": {
        "TRIANGLE_MESH": {},
        "TRIANGLES": {}
      },
      "prefixed": {},
      "EventEmitter": {
        "prefixed": {},
        "EventEmitter": function () {}
      }
    },
    "ParticleContainer": {
      "prefixed": {},
      "EventEmitter": {
        "prefixed": {},
        "EventEmitter": function () {}
      }
    },
    "MovieClip": {
      "fromFrames": function () {},
      "fromImages": function () {},
      "from": function () {},
      "fromFrame": function () {},
      "fromImage": function () {},
      "prefixed": {},
      "EventEmitter": {
        "prefixed": {},
        "EventEmitter": function () {}
      }
    },
    "TilingSprite": {
      "from": function () {},
      "fromFrame": function () {},
      "fromImage": function () {},
      "prefixed": {},
      "EventEmitter": {
        "prefixed": {},
        "EventEmitter": function () {}
      }
    },
    "BitmapText": {
      "fonts": {},
      "prefixed": {},
      "EventEmitter": {
        "prefixed": {},
        "EventEmitter": function () {}
      }
    },
    "blendModes": {
      "NORMAL": {},
      "ADD": {},
      "MULTIPLY": {},
      "SCREEN": {},
      "OVERLAY": {},
      "DARKEN": {},
      "LIGHTEN": {},
      "COLOR_DODGE": {},
      "COLOR_BURN": {},
      "HARD_LIGHT": {},
      "SOFT_LIGHT": {},
      "DIFFERENCE": {},
      "EXCLUSION": {},
      "HUE": {},
      "SATURATION": {},
      "COLOR": {},
      "LUMINOSITY": {}
    },
    "scaleModes": {
      "DEFAULT": {},
      "LINEAR": {},
      "NEAREST": {}
    },
    "BaseTextureCache": {},
    "TextureCache": {},
    "math": {},
    "AbstractFilter": function () {},
    "TransformManual": {
      "IDENTITY": {
        "worldTransform": {
          "a": {},
          "b": {},
          "c": {},
          "d": {},
          "tx": {},
          "ty": {},
          "array": {},
          "fromArray": function () {},
          "set": function () {},
          "toArray": function () {},
          "apply": function () {},
          "applyInverse": function () {},
          "translate": function () {},
          "scale": function () {},
          "rotate": function () {},
          "append": function () {},
          "setTransform": function () {},
          "prepend": function () {},
          "decompose": function () {},
          "invert": function () {},
          "identity": function () {},
          "clone": function () {},
          "copy": function () {}
        },
        "localTransform": {
          "a": {},
          "b": {},
          "c": {},
          "d": {},
          "tx": {},
          "ty": {},
          "array": {},
          "fromArray": function () {},
          "set": function () {},
          "toArray": function () {},
          "apply": function () {},
          "applyInverse": function () {},
          "translate": function () {},
          "scale": function () {},
          "rotate": function () {},
          "append": function () {},
          "setTransform": function () {},
          "prepend": function () {},
          "decompose": function () {},
          "invert": function () {},
          "identity": function () {},
          "clone": function () {},
          "copy": function () {}
        },
        "_worldID": {},
        "_parentID": {},
        "updateLocalTransform": function () {},
        "updateTransform": function () {},
        "updateWorldTransform": function () {}
      }
    }
  },
  "AbstractFilter": function () {},
  "TransformManual": {
    "IDENTITY": {
      "worldTransform": {
        "a": {},
        "b": {},
        "c": {},
        "d": {},
        "tx": {},
        "ty": {},
        "array": {},
        "fromArray": function () {},
        "set": function () {},
        "toArray": function () {},
        "apply": function () {},
        "applyInverse": function () {},
        "translate": function () {},
        "scale": function () {},
        "rotate": function () {},
        "append": function () {},
        "setTransform": function () {},
        "prepend": function () {},
        "decompose": function () {},
        "invert": function () {},
        "identity": function () {},
        "clone": function () {},
        "copy": function () {}
      },
      "localTransform": {
        "a": {},
        "b": {},
        "c": {},
        "d": {},
        "tx": {},
        "ty": {},
        "array": {},
        "fromArray": function () {},
        "set": function () {},
        "toArray": function () {},
        "apply": function () {},
        "applyInverse": function () {},
        "translate": function () {},
        "scale": function () {},
        "rotate": function () {},
        "append": function () {},
        "setTransform": function () {},
        "prepend": function () {},
        "decompose": function () {},
        "invert": function () {},
        "identity": function () {},
        "clone": function () {},
        "copy": function () {}
      },
      "_worldID": {},
      "_parentID": {},
      "updateLocalTransform": function () {},
      "updateTransform": function () {},
      "updateWorldTransform": function () {}
    }
  }
};
PIXI.accessibility.AccessibilityManager.prototype = {
  "createTouchHook": function () {},
  "activate": function () {},
  "deactivate": function () {},
  "updateAccessibleObjects": function () {},
  "update": function () {},
  "capHitArea": function () {},
  "addChild": function () {},
  "_onClick": function () {},
  "_onFocus": function () {},
  "_onFocusOut": function () {},
  "_onKeyDown": function () {},
  "_onMouseMove": function () {},
  "destroy": function () {}
};
PIXI.extract.webgl.prototype = {
  "image": function () {},
  "base64": function () {},
  "canvas": function () {},
  "pixels": function () {},
  "destroy": function () {}
};
PIXI.extract.canvas.prototype = {
  "image": function () {},
  "base64": function () {},
  "canvas": function () {},
  "pixels": function () {},
  "destroy": function () {}
};
PIXI.extras.TextureTransform.prototype = {
  "update": function () {}
};
PIXI.extras.MovieClip.prototype = {
  "stop": function () {},
  "play": function () {},
  "gotoAndStop": function () {},
  "gotoAndPlay": function () {},
  "update": function () {},
  "destroy": function () {},
  "_onTextureUpdate": function () {},
  "_onAnchorUpdate": function () {},
  "calculateVertices": function () {},
  "calculateTrimmedVertices": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "_calculateBounds": function () {},
  "getLocalBounds": function () {},
  "containsPoint": function () {},
  "setTexture": function () {},
  "onChildrenChange": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "calculateBounds": function () {},
  "renderWebGL": function () {},
  "renderAdvancedWebGL": function () {},
  "renderCanvas": function () {},
  "containerUpdateTransform": function () {},
  "getChildByName": function () {},
  "_recursivePostUpdateTransform": function () {},
  "getBounds": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "displayObjectUpdateTransform": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheData": function () {},
  "_renderCachedWebGL": function () {},
  "_initCachedDisplayObject": function () {},
  "_renderCachedCanvas": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_calculateCachedBounds": function () {},
  "_getCachedLocalBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "name": function () {},
  "getGlobalPosition": function () {},
  "generateTexture": function () {},
  "accessible": function () {},
  "accessibleTitle": function () {},
  "accessibleHint": function () {},
  "tabIndex": function () {},
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "hitArea": function () {},
  "buttonMode": function () {},
  "defaultCursor": function () {},
  "_over": function () {},
  "_isLeftDown": function () {},
  "_isRightDown": function () {},
  "_pointerOver": function () {},
  "_pointerDown": function () {},
  "_touchDown": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.extras.MovieClip.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.extras.TilingSprite.prototype = {
  "_onTextureUpdate": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "_calculateBounds": function () {},
  "getLocalBounds": function () {},
  "containsPoint": function () {},
  "destroy": function () {},
  "_onAnchorUpdate": function () {},
  "calculateVertices": function () {},
  "calculateTrimmedVertices": function () {},
  "setTexture": function () {},
  "onChildrenChange": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "calculateBounds": function () {},
  "renderWebGL": function () {},
  "renderAdvancedWebGL": function () {},
  "renderCanvas": function () {},
  "containerUpdateTransform": function () {},
  "getChildByName": function () {},
  "_recursivePostUpdateTransform": function () {},
  "getBounds": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "displayObjectUpdateTransform": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheData": function () {},
  "_renderCachedWebGL": function () {},
  "_initCachedDisplayObject": function () {},
  "_renderCachedCanvas": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_calculateCachedBounds": function () {},
  "_getCachedLocalBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "name": function () {},
  "getGlobalPosition": function () {},
  "generateTexture": function () {},
  "accessible": function () {},
  "accessibleTitle": function () {},
  "accessibleHint": function () {},
  "tabIndex": function () {},
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "hitArea": function () {},
  "buttonMode": function () {},
  "defaultCursor": function () {},
  "_over": function () {},
  "_isLeftDown": function () {},
  "_isRightDown": function () {},
  "_pointerOver": function () {},
  "_pointerDown": function () {},
  "_touchDown": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.extras.TilingSprite.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.extras.BitmapText.prototype = {
  "updateText": function () {},
  "updateTransform": function () {},
  "getLocalBounds": function () {},
  "validate": function () {},
  "setText": function () {},
  "onChildrenChange": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "calculateBounds": function () {},
  "_calculateBounds": function () {},
  "renderWebGL": function () {},
  "renderAdvancedWebGL": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "renderCanvas": function () {},
  "destroy": function () {},
  "containerUpdateTransform": function () {},
  "getChildByName": function () {},
  "_recursivePostUpdateTransform": function () {},
  "getBounds": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "displayObjectUpdateTransform": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheData": function () {},
  "_renderCachedWebGL": function () {},
  "_initCachedDisplayObject": function () {},
  "_renderCachedCanvas": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_calculateCachedBounds": function () {},
  "_getCachedLocalBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "name": function () {},
  "getGlobalPosition": function () {},
  "generateTexture": function () {},
  "accessible": function () {},
  "accessibleTitle": function () {},
  "accessibleHint": function () {},
  "tabIndex": function () {},
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "hitArea": function () {},
  "buttonMode": function () {},
  "defaultCursor": function () {},
  "_over": function () {},
  "_isLeftDown": function () {},
  "_isRightDown": function () {},
  "_pointerOver": function () {},
  "_pointerDown": function () {},
  "_touchDown": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.extras.BitmapText.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.filters.FXAAFilter.prototype = {
  "apply": function () {}
};
PIXI.filters.NoiseFilter.prototype = {
  "apply": function () {}
};
PIXI.filters.DisplacementFilter.prototype = {
  "apply": function () {}
};
PIXI.filters.BlurFilter.prototype = {
  "apply": function () {}
};
PIXI.filters.BlurXFilter.prototype = {
  "apply": function () {}
};
PIXI.filters.BlurYFilter.prototype = {
  "apply": function () {}
};
PIXI.filters.ColorMatrixFilter.prototype = {
  "_loadMatrix": function () {},
  "_multiply": function () {},
  "_colorMatrix": function () {},
  "brightness": function () {},
  "greyscale": function () {},
  "blackAndWhite": function () {},
  "hue": function () {},
  "contrast": function () {},
  "saturate": function () {},
  "desaturate": function () {},
  "negative": function () {},
  "sepia": function () {},
  "technicolor": function () {},
  "polaroid": function () {},
  "toBGR": function () {},
  "kodachrome": function () {},
  "browni": function () {},
  "vintage": function () {},
  "colorTone": function () {},
  "night": function () {},
  "predator": function () {},
  "lsd": function () {},
  "reset": function () {},
  "grayscale": function () {},
  "apply": function () {}
};
PIXI.filters.VoidFilter.prototype = {
  "apply": function () {}
};
PIXI.interaction.InteractionData.prototype = {
  "getLocalPosition": function () {}
};
PIXI.interaction.InteractionManager.prototype = {
  "setTargetElement": function () {},
  "addEvents": function () {},
  "removeEvents": function () {},
  "update": function () {},
  "dispatchEvent": function () {},
  "mapPositionToPoint": function () {},
  "processInteractive": function () {},
  "onMouseDown": function () {},
  "processMouseDown": function () {},
  "onMouseUp": function () {},
  "processMouseUp": function () {},
  "onMouseMove": function () {},
  "processMouseMove": function () {},
  "onMouseOut": function () {},
  "processMouseOverOut": function () {},
  "onMouseOver": function () {},
  "onPointerDown": function () {},
  "processPointerDown": function () {},
  "onPointerUp": function () {},
  "processPointerUp": function () {},
  "onPointerMove": function () {},
  "processPointerMove": function () {},
  "onPointerOut": function () {},
  "processPointerOverOut": function () {},
  "onPointerOver": function () {},
  "onTouchStart": function () {},
  "processTouchStart": function () {},
  "onTouchEnd": function () {},
  "processTouchEnd": function () {},
  "onTouchMove": function () {},
  "processTouchMove": function () {},
  "getTouchData": function () {},
  "returnTouchData": function () {},
  "normalizeToPointerData": function () {},
  "destroy": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.interaction.InteractionManager.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.loaders.Loader.prototype = {
  "enqueue": function () {},
  "add": function () {},
  "pre": function () {},
  "before": function () {},
  "use": function () {},
  "after": function () {},
  "reset": function () {},
  "load": function () {},
  "_prepareUrl": function () {},
  "_loadResource": function () {},
  "_onComplete": function () {},
  "_onLoad": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.loaders.Loader.Resource.prototype = {
  "constructor": function () {},
  "complete": function () {},
  "abort": function () {},
  "load": function () {},
  "_loadElement": function () {},
  "_loadSourceElement": function () {},
  "_loadXhr": function () {},
  "_loadXdr": function () {},
  "_createSource": function () {},
  "_onError": function () {},
  "_onProgress": function () {},
  "_xhrOnError": function () {},
  "_xhrOnAbort": function () {},
  "_xdrOnTimeout": function () {},
  "_xhrOnLoad": function () {},
  "_determineCrossOrigin": function () {},
  "_determineXhrType": function () {},
  "_determineLoadType": function () {},
  "_getExtension": function () {},
  "_getMimeFromXhrType": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.loaders.Resource.prototype = {
  "constructor": function () {},
  "complete": function () {},
  "abort": function () {},
  "load": function () {},
  "_loadElement": function () {},
  "_loadSourceElement": function () {},
  "_loadXhr": function () {},
  "_loadXdr": function () {},
  "_createSource": function () {},
  "_onError": function () {},
  "_onProgress": function () {},
  "_xhrOnError": function () {},
  "_xhrOnAbort": function () {},
  "_xdrOnTimeout": function () {},
  "_xhrOnLoad": function () {},
  "_determineCrossOrigin": function () {},
  "_determineXhrType": function () {},
  "_determineLoadType": function () {},
  "_getExtension": function () {},
  "_getMimeFromXhrType": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.mesh.Mesh.prototype = {
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "_onTextureUpdate": function () {},
  "_calculateBounds": function () {},
  "containsPoint": function () {},
  "onChildrenChange": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "calculateBounds": function () {},
  "renderWebGL": function () {},
  "renderAdvancedWebGL": function () {},
  "renderCanvas": function () {},
  "destroy": function () {},
  "containerUpdateTransform": function () {},
  "getChildByName": function () {},
  "_recursivePostUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "displayObjectUpdateTransform": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheData": function () {},
  "_renderCachedWebGL": function () {},
  "_initCachedDisplayObject": function () {},
  "_renderCachedCanvas": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_calculateCachedBounds": function () {},
  "_getCachedLocalBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "name": function () {},
  "getGlobalPosition": function () {},
  "generateTexture": function () {},
  "accessible": function () {},
  "accessibleTitle": function () {},
  "accessibleHint": function () {},
  "tabIndex": function () {},
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "hitArea": function () {},
  "buttonMode": function () {},
  "defaultCursor": function () {},
  "_over": function () {},
  "_isLeftDown": function () {},
  "_isRightDown": function () {},
  "_pointerOver": function () {},
  "_pointerDown": function () {},
  "_touchDown": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.mesh.Mesh.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.mesh.CanvasMeshRenderer.prototype = {
  "render": function () {},
  "_renderTriangleMesh": function () {},
  "_renderTriangles": function () {},
  "_renderDrawTriangle": function () {},
  "renderMeshFlat": function () {},
  "destroy": function () {}
};
PIXI.mesh.Plane.prototype = {
  "refresh": function () {},
  "_onTextureUpdate": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "_calculateBounds": function () {},
  "containsPoint": function () {},
  "onChildrenChange": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "calculateBounds": function () {},
  "renderWebGL": function () {},
  "renderAdvancedWebGL": function () {},
  "renderCanvas": function () {},
  "destroy": function () {},
  "containerUpdateTransform": function () {},
  "getChildByName": function () {},
  "_recursivePostUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "displayObjectUpdateTransform": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheData": function () {},
  "_renderCachedWebGL": function () {},
  "_initCachedDisplayObject": function () {},
  "_renderCachedCanvas": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_calculateCachedBounds": function () {},
  "_getCachedLocalBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "name": function () {},
  "getGlobalPosition": function () {},
  "generateTexture": function () {},
  "accessible": function () {},
  "accessibleTitle": function () {},
  "accessibleHint": function () {},
  "tabIndex": function () {},
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "hitArea": function () {},
  "buttonMode": function () {},
  "defaultCursor": function () {},
  "_over": function () {},
  "_isLeftDown": function () {},
  "_isRightDown": function () {},
  "_pointerOver": function () {},
  "_pointerDown": function () {},
  "_touchDown": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.mesh.Plane.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.mesh.NineSlicePlane.prototype = {
  "updateHorizontalVertices": function () {},
  "updateVerticalVertices": function () {},
  "_renderCanvas": function () {},
  "drawSegment": function () {},
  "refresh": function () {},
  "_onTextureUpdate": function () {},
  "_renderWebGL": function () {},
  "_calculateBounds": function () {},
  "containsPoint": function () {},
  "onChildrenChange": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "calculateBounds": function () {},
  "renderWebGL": function () {},
  "renderAdvancedWebGL": function () {},
  "renderCanvas": function () {},
  "destroy": function () {},
  "containerUpdateTransform": function () {},
  "getChildByName": function () {},
  "_recursivePostUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "displayObjectUpdateTransform": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheData": function () {},
  "_renderCachedWebGL": function () {},
  "_initCachedDisplayObject": function () {},
  "_renderCachedCanvas": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_calculateCachedBounds": function () {},
  "_getCachedLocalBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "name": function () {},
  "getGlobalPosition": function () {},
  "generateTexture": function () {},
  "accessible": function () {},
  "accessibleTitle": function () {},
  "accessibleHint": function () {},
  "tabIndex": function () {},
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "hitArea": function () {},
  "buttonMode": function () {},
  "defaultCursor": function () {},
  "_over": function () {},
  "_isLeftDown": function () {},
  "_isRightDown": function () {},
  "_pointerOver": function () {},
  "_pointerDown": function () {},
  "_touchDown": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.mesh.NineSlicePlane.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.mesh.Rope.prototype = {
  "refresh": function () {},
  "_onTextureUpdate": function () {},
  "updateTransform": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "_calculateBounds": function () {},
  "containsPoint": function () {},
  "onChildrenChange": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "calculateBounds": function () {},
  "renderWebGL": function () {},
  "renderAdvancedWebGL": function () {},
  "renderCanvas": function () {},
  "destroy": function () {},
  "containerUpdateTransform": function () {},
  "getChildByName": function () {},
  "_recursivePostUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "displayObjectUpdateTransform": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheData": function () {},
  "_renderCachedWebGL": function () {},
  "_initCachedDisplayObject": function () {},
  "_renderCachedCanvas": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_calculateCachedBounds": function () {},
  "_getCachedLocalBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "name": function () {},
  "getGlobalPosition": function () {},
  "generateTexture": function () {},
  "accessible": function () {},
  "accessibleTitle": function () {},
  "accessibleHint": function () {},
  "tabIndex": function () {},
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "hitArea": function () {},
  "buttonMode": function () {},
  "defaultCursor": function () {},
  "_over": function () {},
  "_isLeftDown": function () {},
  "_isRightDown": function () {},
  "_pointerOver": function () {},
  "_pointerDown": function () {},
  "_touchDown": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.mesh.Rope.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.particles.ParticleContainer.prototype = {
  "setProperties": function () {},
  "updateTransform": function () {},
  "renderWebGL": function () {},
  "onChildrenChange": function () {},
  "renderCanvas": function () {},
  "destroy": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "calculateBounds": function () {},
  "_calculateBounds": function () {},
  "renderAdvancedWebGL": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "containerUpdateTransform": function () {},
  "getChildByName": function () {},
  "_recursivePostUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "displayObjectUpdateTransform": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheData": function () {},
  "_renderCachedWebGL": function () {},
  "_initCachedDisplayObject": function () {},
  "_renderCachedCanvas": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_calculateCachedBounds": function () {},
  "_getCachedLocalBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "name": function () {},
  "getGlobalPosition": function () {},
  "generateTexture": function () {},
  "accessible": function () {},
  "accessibleTitle": function () {},
  "accessibleHint": function () {},
  "tabIndex": function () {},
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "hitArea": function () {},
  "buttonMode": function () {},
  "defaultCursor": function () {},
  "_over": function () {},
  "_isLeftDown": function () {},
  "_isRightDown": function () {},
  "_pointerOver": function () {},
  "_pointerDown": function () {},
  "_touchDown": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.particles.ParticleContainer.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.particles.ParticleRenderer.prototype = {
  "onContextChange": function () {},
  "start": function () {},
  "render": function () {},
  "generateBuffers": function () {},
  "uploadVertices": function () {},
  "uploadPosition": function () {},
  "uploadRotation": function () {},
  "uploadUvs": function () {},
  "uploadAlpha": function () {},
  "destroy": function () {},
  "stop": function () {},
  "flush": function () {}
};
PIXI.prepare.webgl.prototype = {
  "upload": function () {},
  "tick": function () {},
  "register": function () {},
  "add": function () {},
  "destroy": function () {}
};
PIXI.prepare.canvas.prototype = {
  "upload": function () {},
  "tick": function () {},
  "register": function () {},
  "add": function () {},
  "destroy": function () {}
};
PIXI.utils.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.ticker.Ticker.prototype = {
  "_requestIfNeeded": function () {},
  "_cancelIfNeeded": function () {},
  "_startIfPossible": function () {},
  "add": function () {},
  "addOnce": function () {},
  "remove": function () {},
  "start": function () {},
  "stop": function () {},
  "update": function () {}
};
PIXI.CanvasRenderer.prototype = {
  "render": function () {},
  "setBlendMode": function () {},
  "destroy": function () {},
  "resize": function () {},
  "initPlugins": function () {},
  "destroyPlugins": function () {},
  "generateTexture": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.CanvasRenderer.__plugins.sprite.prototype = {
  "render": function () {},
  "destroy": function () {}
};
PIXI.CanvasRenderer.__plugins.graphics.prototype = {
  "render": function () {},
  "updateGraphicsTint": function () {},
  "renderPolygon": function () {},
  "destroy": function () {}
};
PIXI.CanvasRenderer.__plugins.mesh.prototype = {
  "render": function () {},
  "_renderTriangleMesh": function () {},
  "_renderTriangles": function () {},
  "_renderDrawTriangle": function () {},
  "renderMeshFlat": function () {},
  "destroy": function () {}
};
PIXI.CanvasRenderer.__plugins.accessibility.prototype = {
  "createTouchHook": function () {},
  "activate": function () {},
  "deactivate": function () {},
  "updateAccessibleObjects": function () {},
  "update": function () {},
  "capHitArea": function () {},
  "addChild": function () {},
  "_onClick": function () {},
  "_onFocus": function () {},
  "_onFocusOut": function () {},
  "_onKeyDown": function () {},
  "_onMouseMove": function () {},
  "destroy": function () {}
};
PIXI.CanvasRenderer.__plugins.extract.prototype = {
  "image": function () {},
  "base64": function () {},
  "canvas": function () {},
  "pixels": function () {},
  "destroy": function () {}
};
PIXI.CanvasRenderer.__plugins.interaction.prototype = {
  "setTargetElement": function () {},
  "addEvents": function () {},
  "removeEvents": function () {},
  "update": function () {},
  "dispatchEvent": function () {},
  "mapPositionToPoint": function () {},
  "processInteractive": function () {},
  "onMouseDown": function () {},
  "processMouseDown": function () {},
  "onMouseUp": function () {},
  "processMouseUp": function () {},
  "onMouseMove": function () {},
  "processMouseMove": function () {},
  "onMouseOut": function () {},
  "processMouseOverOut": function () {},
  "onMouseOver": function () {},
  "onPointerDown": function () {},
  "processPointerDown": function () {},
  "onPointerUp": function () {},
  "processPointerUp": function () {},
  "onPointerMove": function () {},
  "processPointerMove": function () {},
  "onPointerOut": function () {},
  "processPointerOverOut": function () {},
  "onPointerOver": function () {},
  "onTouchStart": function () {},
  "processTouchStart": function () {},
  "onTouchEnd": function () {},
  "processTouchEnd": function () {},
  "onTouchMove": function () {},
  "processTouchMove": function () {},
  "getTouchData": function () {},
  "returnTouchData": function () {},
  "normalizeToPointerData": function () {},
  "destroy": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.CanvasRenderer.__plugins.interaction.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.CanvasRenderer.__plugins.prepare.prototype = {
  "upload": function () {},
  "tick": function () {},
  "register": function () {},
  "add": function () {},
  "destroy": function () {}
};
PIXI.CanvasRenderer.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.WebGLRenderer.prototype = {
  "_initContext": function () {},
  "render": function () {},
  "setObjectRenderer": function () {},
  "flush": function () {},
  "resize": function () {},
  "setBlendMode": function () {},
  "clear": function () {},
  "setTransform": function () {},
  "bindRenderTexture": function () {},
  "bindRenderTarget": function () {},
  "bindShader": function () {},
  "bindTexture": function () {},
  "createVao": function () {},
  "reset": function () {},
  "handleContextLost": function () {},
  "handleContextRestored": function () {},
  "destroy": function () {},
  "initPlugins": function () {},
  "destroyPlugins": function () {},
  "generateTexture": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.WebGLRenderer.__plugins.sprite.prototype = {
  "onContextChange": function () {},
  "onPrerender": function () {},
  "render": function () {},
  "flush": function () {},
  "start": function () {},
  "stop": function () {},
  "destroy": function () {}
};
PIXI.WebGLRenderer.__plugins.graphics.prototype = {
  "onContextChange": function () {},
  "destroy": function () {},
  "render": function () {},
  "updateGraphics": function () {},
  "getWebGLData": function () {},
  "start": function () {},
  "stop": function () {},
  "flush": function () {}
};
PIXI.WebGLRenderer.__plugins.mesh.prototype = {
  "onContextChange": function () {},
  "render": function () {},
  "start": function () {},
  "stop": function () {},
  "flush": function () {},
  "destroy": function () {}
};
PIXI.WebGLRenderer.__plugins.particle.prototype = {
  "onContextChange": function () {},
  "start": function () {},
  "render": function () {},
  "generateBuffers": function () {},
  "uploadVertices": function () {},
  "uploadPosition": function () {},
  "uploadRotation": function () {},
  "uploadUvs": function () {},
  "uploadAlpha": function () {},
  "destroy": function () {},
  "stop": function () {},
  "flush": function () {}
};
PIXI.WebGLRenderer.__plugins.tilingSprite.prototype = {
  "onContextChange": function () {},
  "render": function () {},
  "start": function () {},
  "stop": function () {},
  "flush": function () {},
  "destroy": function () {}
};
PIXI.WebGLRenderer.__plugins.accessibility.prototype = {
  "createTouchHook": function () {},
  "activate": function () {},
  "deactivate": function () {},
  "updateAccessibleObjects": function () {},
  "update": function () {},
  "capHitArea": function () {},
  "addChild": function () {},
  "_onClick": function () {},
  "_onFocus": function () {},
  "_onFocusOut": function () {},
  "_onKeyDown": function () {},
  "_onMouseMove": function () {},
  "destroy": function () {}
};
PIXI.WebGLRenderer.__plugins.extract.prototype = {
  "image": function () {},
  "base64": function () {},
  "canvas": function () {},
  "pixels": function () {},
  "destroy": function () {}
};
PIXI.WebGLRenderer.__plugins.interaction.prototype = {
  "setTargetElement": function () {},
  "addEvents": function () {},
  "removeEvents": function () {},
  "update": function () {},
  "dispatchEvent": function () {},
  "mapPositionToPoint": function () {},
  "processInteractive": function () {},
  "onMouseDown": function () {},
  "processMouseDown": function () {},
  "onMouseUp": function () {},
  "processMouseUp": function () {},
  "onMouseMove": function () {},
  "processMouseMove": function () {},
  "onMouseOut": function () {},
  "processMouseOverOut": function () {},
  "onMouseOver": function () {},
  "onPointerDown": function () {},
  "processPointerDown": function () {},
  "onPointerUp": function () {},
  "processPointerUp": function () {},
  "onPointerMove": function () {},
  "processPointerMove": function () {},
  "onPointerOut": function () {},
  "processPointerOverOut": function () {},
  "onPointerOver": function () {},
  "onTouchStart": function () {},
  "processTouchStart": function () {},
  "onTouchEnd": function () {},
  "processTouchEnd": function () {},
  "onTouchMove": function () {},
  "processTouchMove": function () {},
  "getTouchData": function () {},
  "returnTouchData": function () {},
  "normalizeToPointerData": function () {},
  "destroy": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.WebGLRenderer.__plugins.interaction.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.WebGLRenderer.__plugins.prepare.prototype = {
  "upload": function () {},
  "tick": function () {},
  "register": function () {},
  "add": function () {},
  "destroy": function () {}
};
PIXI.WebGLRenderer.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.glCore.GLBuffer.prototype = {
  "upload": function () {},
  "bind": function () {},
  "destroy": function () {}
};
PIXI.glCore.GLFramebuffer.prototype = {
  "enableTexture": function () {},
  "enableStencil": function () {},
  "clear": function () {},
  "bind": function () {},
  "unbind": function () {},
  "resize": function () {},
  "destroy": function () {}
};
PIXI.glCore.GLShader.prototype = {
  "bind": function () {},
  "destroy": function () {}
};
PIXI.glCore.GLTexture.prototype = {
  "upload": function () {},
  "uploadData": function () {},
  "bind": function () {},
  "unbind": function () {},
  "minFilter": function () {},
  "magFilter": function () {},
  "enableMipmap": function () {},
  "enableLinearScaling": function () {},
  "enableNearestScaling": function () {},
  "enableWrapClamp": function () {},
  "enableWrapRepeat": function () {},
  "enableWrapMirrorRepeat": function () {},
  "destroy": function () {}
};
PIXI.glCore.VertexArrayObject.prototype = {
  "bind": function () {},
  "unbind": function () {},
  "activate": function () {},
  "addAttribute": function () {},
  "addIndex": function () {},
  "clear": function () {},
  "draw": function () {},
  "destroy": function () {}
};
PIXI.DisplayObject.prototype = {
  "updateTransform": function () {},
  "_recursivePostUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "renderWebGL": function () {},
  "renderCanvas": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "destroy": function () {},
  "displayObjectUpdateTransform": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheData": function () {},
  "_renderCachedWebGL": function () {},
  "_initCachedDisplayObject": function () {},
  "_renderCachedCanvas": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_calculateCachedBounds": function () {},
  "_getCachedLocalBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "name": function () {},
  "getGlobalPosition": function () {},
  "generateTexture": function () {},
  "accessible": function () {},
  "accessibleTitle": function () {},
  "accessibleHint": function () {},
  "tabIndex": function () {},
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "hitArea": function () {},
  "buttonMode": function () {},
  "defaultCursor": function () {},
  "_over": function () {},
  "_isLeftDown": function () {},
  "_isRightDown": function () {},
  "_pointerOver": function () {},
  "_pointerDown": function () {},
  "_touchDown": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.DisplayObject.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.Container.prototype = {
  "onChildrenChange": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "calculateBounds": function () {},
  "_calculateBounds": function () {},
  "renderWebGL": function () {},
  "renderAdvancedWebGL": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "renderCanvas": function () {},
  "destroy": function () {},
  "containerUpdateTransform": function () {},
  "getChildByName": function () {},
  "_recursivePostUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "displayObjectUpdateTransform": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheData": function () {},
  "_renderCachedWebGL": function () {},
  "_initCachedDisplayObject": function () {},
  "_renderCachedCanvas": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_calculateCachedBounds": function () {},
  "_getCachedLocalBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "name": function () {},
  "getGlobalPosition": function () {},
  "generateTexture": function () {},
  "accessible": function () {},
  "accessibleTitle": function () {},
  "accessibleHint": function () {},
  "tabIndex": function () {},
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "hitArea": function () {},
  "buttonMode": function () {},
  "defaultCursor": function () {},
  "_over": function () {},
  "_isLeftDown": function () {},
  "_isRightDown": function () {},
  "_pointerOver": function () {},
  "_pointerDown": function () {},
  "_touchDown": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.Container.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.Transform.prototype = {
  "updateSkew": function () {},
  "updateLocalTransform": function () {},
  "updateTransform": function () {},
  "setFromMatrix": function () {},
  "updateWorldTransform": function () {}
};
PIXI.TransformStatic.prototype = {
  "onChange": function () {},
  "updateSkew": function () {},
  "updateLocalTransform": function () {},
  "updateTransform": function () {},
  "setFromMatrix": function () {},
  "updateWorldTransform": function () {}
};
PIXI.TransformBase.prototype = {
  "updateLocalTransform": function () {},
  "updateTransform": function () {},
  "updateWorldTransform": function () {}
};
PIXI.Sprite.prototype = {
  "_onTextureUpdate": function () {},
  "_onAnchorUpdate": function () {},
  "calculateVertices": function () {},
  "calculateTrimmedVertices": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "_calculateBounds": function () {},
  "getLocalBounds": function () {},
  "containsPoint": function () {},
  "destroy": function () {},
  "setTexture": function () {},
  "onChildrenChange": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "calculateBounds": function () {},
  "renderWebGL": function () {},
  "renderAdvancedWebGL": function () {},
  "renderCanvas": function () {},
  "containerUpdateTransform": function () {},
  "getChildByName": function () {},
  "_recursivePostUpdateTransform": function () {},
  "getBounds": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "displayObjectUpdateTransform": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheData": function () {},
  "_renderCachedWebGL": function () {},
  "_initCachedDisplayObject": function () {},
  "_renderCachedCanvas": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_calculateCachedBounds": function () {},
  "_getCachedLocalBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "name": function () {},
  "getGlobalPosition": function () {},
  "generateTexture": function () {},
  "accessible": function () {},
  "accessibleTitle": function () {},
  "accessibleHint": function () {},
  "tabIndex": function () {},
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "hitArea": function () {},
  "buttonMode": function () {},
  "defaultCursor": function () {},
  "_over": function () {},
  "_isLeftDown": function () {},
  "_isRightDown": function () {},
  "_pointerOver": function () {},
  "_pointerDown": function () {},
  "_touchDown": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.Sprite.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.CanvasSpriteRenderer.prototype = {
  "render": function () {},
  "destroy": function () {}
};
PIXI.SpriteRenderer.prototype = {
  "onContextChange": function () {},
  "onPrerender": function () {},
  "render": function () {},
  "flush": function () {},
  "start": function () {},
  "stop": function () {},
  "destroy": function () {}
};
PIXI.Text.prototype = {
  "updateText": function () {},
  "drawLetterSpacing": function () {},
  "updateTexture": function () {},
  "renderWebGL": function () {},
  "_renderCanvas": function () {},
  "determineFontProperties": function () {},
  "wordWrap": function () {},
  "_calculateBounds": function () {},
  "_onStyleChange": function () {},
  "_generateFillStyle": function () {},
  "destroy": function () {},
  "setText": function () {},
  "setStyle": function () {},
  "_onTextureUpdate": function () {},
  "_onAnchorUpdate": function () {},
  "calculateVertices": function () {},
  "calculateTrimmedVertices": function () {},
  "_renderWebGL": function () {},
  "getLocalBounds": function () {},
  "containsPoint": function () {},
  "setTexture": function () {},
  "onChildrenChange": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "calculateBounds": function () {},
  "renderAdvancedWebGL": function () {},
  "renderCanvas": function () {},
  "containerUpdateTransform": function () {},
  "getChildByName": function () {},
  "_recursivePostUpdateTransform": function () {},
  "getBounds": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "displayObjectUpdateTransform": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheData": function () {},
  "_renderCachedWebGL": function () {},
  "_initCachedDisplayObject": function () {},
  "_renderCachedCanvas": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_calculateCachedBounds": function () {},
  "_getCachedLocalBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "name": function () {},
  "getGlobalPosition": function () {},
  "generateTexture": function () {},
  "accessible": function () {},
  "accessibleTitle": function () {},
  "accessibleHint": function () {},
  "tabIndex": function () {},
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "hitArea": function () {},
  "buttonMode": function () {},
  "defaultCursor": function () {},
  "_over": function () {},
  "_isLeftDown": function () {},
  "_isRightDown": function () {},
  "_pointerOver": function () {},
  "_pointerDown": function () {},
  "_touchDown": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.Text.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.TextStyle.prototype = {
  "clone": function () {},
  "reset": function () {}
};
PIXI.Graphics.prototype = {
  "clone": function () {},
  "lineStyle": function () {},
  "moveTo": function () {},
  "lineTo": function () {},
  "quadraticCurveTo": function () {},
  "bezierCurveTo": function () {},
  "arcTo": function () {},
  "arc": function () {},
  "beginFill": function () {},
  "endFill": function () {},
  "drawRect": function () {},
  "drawRoundedRect": function () {},
  "drawCircle": function () {},
  "drawEllipse": function () {},
  "drawPolygon": function () {},
  "clear": function () {},
  "isFastRect": function () {},
  "_renderWebGL": function () {},
  "_renderSpriteRect": function () {},
  "_renderCanvas": function () {},
  "_calculateBounds": function () {},
  "containsPoint": function () {},
  "updateLocalBounds": function () {},
  "drawShape": function () {},
  "generateCanvasTexture": function () {},
  "closePath": function () {},
  "addHole": function () {},
  "destroy": function () {},
  "generateTexture": function () {},
  "onChildrenChange": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "calculateBounds": function () {},
  "renderWebGL": function () {},
  "renderAdvancedWebGL": function () {},
  "renderCanvas": function () {},
  "containerUpdateTransform": function () {},
  "getChildByName": function () {},
  "_recursivePostUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "displayObjectUpdateTransform": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheData": function () {},
  "_renderCachedWebGL": function () {},
  "_initCachedDisplayObject": function () {},
  "_renderCachedCanvas": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_calculateCachedBounds": function () {},
  "_getCachedLocalBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "name": function () {},
  "getGlobalPosition": function () {},
  "accessible": function () {},
  "accessibleTitle": function () {},
  "accessibleHint": function () {},
  "tabIndex": function () {},
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "hitArea": function () {},
  "buttonMode": function () {},
  "defaultCursor": function () {},
  "_over": function () {},
  "_isLeftDown": function () {},
  "_isRightDown": function () {},
  "_pointerOver": function () {},
  "_pointerDown": function () {},
  "_touchDown": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.Graphics.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.GraphicsData.prototype = {
  "clone": function () {},
  "addHole": function () {},
  "destroy": function () {}
};
PIXI.GraphicsRenderer.prototype = {
  "onContextChange": function () {},
  "destroy": function () {},
  "render": function () {},
  "updateGraphics": function () {},
  "getWebGLData": function () {},
  "start": function () {},
  "stop": function () {},
  "flush": function () {}
};
PIXI.CanvasGraphicsRenderer.prototype = {
  "render": function () {},
  "updateGraphicsTint": function () {},
  "renderPolygon": function () {},
  "destroy": function () {}
};
PIXI.Texture.prototype = {
  "update": function () {},
  "onBaseTextureLoaded": function () {},
  "onBaseTextureUpdated": function () {},
  "destroy": function () {},
  "clone": function () {},
  "_updateUvs": function () {},
  "setFrame": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.Texture.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.BaseTexture.prototype = {
  "update": function () {},
  "loadSource": function () {},
  "_updateImageType": function () {},
  "_loadSvgSource": function () {},
  "_loadSvgSourceUsingDataUri": function () {},
  "_loadSvgSourceUsingXhr": function () {},
  "_loadSvgSourceUsingString": function () {},
  "_sourceLoaded": function () {},
  "destroy": function () {},
  "dispose": function () {},
  "updateSourceImage": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.BaseTexture.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.RenderTexture.prototype = {
  "resize": function () {},
  "render": function () {},
  "getImage": function () {},
  "getBase64": function () {},
  "getCanvas": function () {},
  "getPixels": function () {},
  "update": function () {},
  "onBaseTextureLoaded": function () {},
  "onBaseTextureUpdated": function () {},
  "destroy": function () {},
  "clone": function () {},
  "_updateUvs": function () {},
  "setFrame": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.RenderTexture.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.BaseRenderTexture.prototype = {
  "resize": function () {},
  "destroy": function () {},
  "update": function () {},
  "loadSource": function () {},
  "_updateImageType": function () {},
  "_loadSvgSource": function () {},
  "_loadSvgSourceUsingDataUri": function () {},
  "_loadSvgSourceUsingXhr": function () {},
  "_loadSvgSourceUsingString": function () {},
  "_sourceLoaded": function () {},
  "dispose": function () {},
  "updateSourceImage": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.BaseRenderTexture.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.VideoBaseTexture.prototype = {
  "_isSourcePlaying": function () {},
  "_isSourceReady": function () {},
  "_onPlayStart": function () {},
  "_onPlayStop": function () {},
  "_onCanPlay": function () {},
  "destroy": function () {},
  "update": function () {},
  "loadSource": function () {},
  "_updateImageType": function () {},
  "_loadSvgSource": function () {},
  "_loadSvgSourceUsingDataUri": function () {},
  "_loadSvgSourceUsingXhr": function () {},
  "_loadSvgSourceUsingString": function () {},
  "_sourceLoaded": function () {},
  "dispose": function () {},
  "updateSourceImage": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.VideoBaseTexture.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.TextureUvs.prototype = {
  "set": function () {}
};
PIXI.CanvasRenderTarget.prototype = {
  "clear": function () {},
  "resize": function () {},
  "destroy": function () {}
};
PIXI.Shader.prototype = {
  "bind": function () {},
  "destroy": function () {}
};
PIXI.WebGLManager.prototype = {
  "onContextChange": function () {},
  "destroy": function () {}
};
PIXI.ObjectRenderer.prototype = {
  "start": function () {},
  "stop": function () {},
  "flush": function () {},
  "render": function () {},
  "onContextChange": function () {},
  "destroy": function () {}
};
PIXI.RenderTarget.prototype = {
  "clear": function () {},
  "attachStencilBuffer": function () {},
  "setFrame": function () {},
  "activate": function () {},
  "calculateProjection": function () {},
  "resize": function () {},
  "destroy": function () {}
};
PIXI.Quad.prototype = {
  "initVao": function () {},
  "map": function () {},
  "draw": function () {},
  "upload": function () {},
  "destroy": function () {}
};
PIXI.SpriteMaskFilter.prototype = {
  "apply": function () {}
};
PIXI.Filter.prototype = {
  "apply": function () {}
};
PIXI.Point.prototype = {
  "clone": function () {},
  "copy": function () {},
  "equals": function () {},
  "set": function () {}
};
PIXI.ObservablePoint.prototype = {
  "set": function () {},
  "copy": function () {}
};
PIXI.Matrix.prototype = {
  "fromArray": function () {},
  "set": function () {},
  "toArray": function () {},
  "apply": function () {},
  "applyInverse": function () {},
  "translate": function () {},
  "scale": function () {},
  "rotate": function () {},
  "append": function () {},
  "setTransform": function () {},
  "prepend": function () {},
  "decompose": function () {},
  "invert": function () {},
  "identity": function () {},
  "clone": function () {},
  "copy": function () {}
};
PIXI.Circle.prototype = {
  "clone": function () {},
  "contains": function () {},
  "getBounds": function () {}
};
PIXI.Ellipse.prototype = {
  "clone": function () {},
  "contains": function () {},
  "getBounds": function () {}
};
PIXI.Polygon.prototype = {
  "clone": function () {},
  "close": function () {},
  "contains": function () {}
};
PIXI.Rectangle.prototype = {
  "clone": function () {},
  "copy": function () {},
  "contains": function () {},
  "pad": function () {},
  "fit": function () {},
  "enlarge": function () {}
};
PIXI.RoundedRectangle.prototype = {
  "clone": function () {},
  "contains": function () {}
};
PIXI.Stage.prototype = {
  "onChildrenChange": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "calculateBounds": function () {},
  "_calculateBounds": function () {},
  "renderWebGL": function () {},
  "renderAdvancedWebGL": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "renderCanvas": function () {},
  "destroy": function () {},
  "containerUpdateTransform": function () {},
  "getChildByName": function () {},
  "_recursivePostUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "displayObjectUpdateTransform": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheData": function () {},
  "_renderCachedWebGL": function () {},
  "_initCachedDisplayObject": function () {},
  "_renderCachedCanvas": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_calculateCachedBounds": function () {},
  "_getCachedLocalBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "name": function () {},
  "getGlobalPosition": function () {},
  "generateTexture": function () {},
  "accessible": function () {},
  "accessibleTitle": function () {},
  "accessibleHint": function () {},
  "tabIndex": function () {},
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "hitArea": function () {},
  "buttonMode": function () {},
  "defaultCursor": function () {},
  "_over": function () {},
  "_isLeftDown": function () {},
  "_isRightDown": function () {},
  "_pointerOver": function () {},
  "_pointerDown": function () {},
  "_touchDown": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.Stage.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.DisplayObjectContainer.prototype = {
  "onChildrenChange": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "calculateBounds": function () {},
  "_calculateBounds": function () {},
  "renderWebGL": function () {},
  "renderAdvancedWebGL": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "renderCanvas": function () {},
  "destroy": function () {},
  "containerUpdateTransform": function () {},
  "getChildByName": function () {},
  "_recursivePostUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "displayObjectUpdateTransform": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheData": function () {},
  "_renderCachedWebGL": function () {},
  "_initCachedDisplayObject": function () {},
  "_renderCachedCanvas": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_calculateCachedBounds": function () {},
  "_getCachedLocalBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "name": function () {},
  "getGlobalPosition": function () {},
  "generateTexture": function () {},
  "accessible": function () {},
  "accessibleTitle": function () {},
  "accessibleHint": function () {},
  "tabIndex": function () {},
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "hitArea": function () {},
  "buttonMode": function () {},
  "defaultCursor": function () {},
  "_over": function () {},
  "_isLeftDown": function () {},
  "_isRightDown": function () {},
  "_pointerOver": function () {},
  "_pointerDown": function () {},
  "_touchDown": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.DisplayObjectContainer.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.Strip.prototype = {
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "_onTextureUpdate": function () {},
  "_calculateBounds": function () {},
  "containsPoint": function () {},
  "onChildrenChange": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "calculateBounds": function () {},
  "renderWebGL": function () {},
  "renderAdvancedWebGL": function () {},
  "renderCanvas": function () {},
  "destroy": function () {},
  "containerUpdateTransform": function () {},
  "getChildByName": function () {},
  "_recursivePostUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "displayObjectUpdateTransform": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheData": function () {},
  "_renderCachedWebGL": function () {},
  "_initCachedDisplayObject": function () {},
  "_renderCachedCanvas": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_calculateCachedBounds": function () {},
  "_getCachedLocalBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "name": function () {},
  "getGlobalPosition": function () {},
  "generateTexture": function () {},
  "accessible": function () {},
  "accessibleTitle": function () {},
  "accessibleHint": function () {},
  "tabIndex": function () {},
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "hitArea": function () {},
  "buttonMode": function () {},
  "defaultCursor": function () {},
  "_over": function () {},
  "_isLeftDown": function () {},
  "_isRightDown": function () {},
  "_pointerOver": function () {},
  "_pointerDown": function () {},
  "_touchDown": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.Strip.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.Rope.prototype = {
  "refresh": function () {},
  "_onTextureUpdate": function () {},
  "updateTransform": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "_calculateBounds": function () {},
  "containsPoint": function () {},
  "onChildrenChange": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "calculateBounds": function () {},
  "renderWebGL": function () {},
  "renderAdvancedWebGL": function () {},
  "renderCanvas": function () {},
  "destroy": function () {},
  "containerUpdateTransform": function () {},
  "getChildByName": function () {},
  "_recursivePostUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "displayObjectUpdateTransform": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheData": function () {},
  "_renderCachedWebGL": function () {},
  "_initCachedDisplayObject": function () {},
  "_renderCachedCanvas": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_calculateCachedBounds": function () {},
  "_getCachedLocalBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "name": function () {},
  "getGlobalPosition": function () {},
  "generateTexture": function () {},
  "accessible": function () {},
  "accessibleTitle": function () {},
  "accessibleHint": function () {},
  "tabIndex": function () {},
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "hitArea": function () {},
  "buttonMode": function () {},
  "defaultCursor": function () {},
  "_over": function () {},
  "_isLeftDown": function () {},
  "_isRightDown": function () {},
  "_pointerOver": function () {},
  "_pointerDown": function () {},
  "_touchDown": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.Rope.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.ParticleContainer.prototype = {
  "setProperties": function () {},
  "updateTransform": function () {},
  "renderWebGL": function () {},
  "onChildrenChange": function () {},
  "renderCanvas": function () {},
  "destroy": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "calculateBounds": function () {},
  "_calculateBounds": function () {},
  "renderAdvancedWebGL": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "containerUpdateTransform": function () {},
  "getChildByName": function () {},
  "_recursivePostUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "displayObjectUpdateTransform": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheData": function () {},
  "_renderCachedWebGL": function () {},
  "_initCachedDisplayObject": function () {},
  "_renderCachedCanvas": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_calculateCachedBounds": function () {},
  "_getCachedLocalBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "name": function () {},
  "getGlobalPosition": function () {},
  "generateTexture": function () {},
  "accessible": function () {},
  "accessibleTitle": function () {},
  "accessibleHint": function () {},
  "tabIndex": function () {},
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "hitArea": function () {},
  "buttonMode": function () {},
  "defaultCursor": function () {},
  "_over": function () {},
  "_isLeftDown": function () {},
  "_isRightDown": function () {},
  "_pointerOver": function () {},
  "_pointerDown": function () {},
  "_touchDown": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.ParticleContainer.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.MovieClip.prototype = {
  "stop": function () {},
  "play": function () {},
  "gotoAndStop": function () {},
  "gotoAndPlay": function () {},
  "update": function () {},
  "destroy": function () {},
  "_onTextureUpdate": function () {},
  "_onAnchorUpdate": function () {},
  "calculateVertices": function () {},
  "calculateTrimmedVertices": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "_calculateBounds": function () {},
  "getLocalBounds": function () {},
  "containsPoint": function () {},
  "setTexture": function () {},
  "onChildrenChange": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "calculateBounds": function () {},
  "renderWebGL": function () {},
  "renderAdvancedWebGL": function () {},
  "renderCanvas": function () {},
  "containerUpdateTransform": function () {},
  "getChildByName": function () {},
  "_recursivePostUpdateTransform": function () {},
  "getBounds": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "displayObjectUpdateTransform": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheData": function () {},
  "_renderCachedWebGL": function () {},
  "_initCachedDisplayObject": function () {},
  "_renderCachedCanvas": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_calculateCachedBounds": function () {},
  "_getCachedLocalBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "name": function () {},
  "getGlobalPosition": function () {},
  "generateTexture": function () {},
  "accessible": function () {},
  "accessibleTitle": function () {},
  "accessibleHint": function () {},
  "tabIndex": function () {},
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "hitArea": function () {},
  "buttonMode": function () {},
  "defaultCursor": function () {},
  "_over": function () {},
  "_isLeftDown": function () {},
  "_isRightDown": function () {},
  "_pointerOver": function () {},
  "_pointerDown": function () {},
  "_touchDown": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.MovieClip.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.TilingSprite.prototype = {
  "_onTextureUpdate": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "_calculateBounds": function () {},
  "getLocalBounds": function () {},
  "containsPoint": function () {},
  "destroy": function () {},
  "_onAnchorUpdate": function () {},
  "calculateVertices": function () {},
  "calculateTrimmedVertices": function () {},
  "setTexture": function () {},
  "onChildrenChange": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "calculateBounds": function () {},
  "renderWebGL": function () {},
  "renderAdvancedWebGL": function () {},
  "renderCanvas": function () {},
  "containerUpdateTransform": function () {},
  "getChildByName": function () {},
  "_recursivePostUpdateTransform": function () {},
  "getBounds": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "displayObjectUpdateTransform": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheData": function () {},
  "_renderCachedWebGL": function () {},
  "_initCachedDisplayObject": function () {},
  "_renderCachedCanvas": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_calculateCachedBounds": function () {},
  "_getCachedLocalBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "name": function () {},
  "getGlobalPosition": function () {},
  "generateTexture": function () {},
  "accessible": function () {},
  "accessibleTitle": function () {},
  "accessibleHint": function () {},
  "tabIndex": function () {},
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "hitArea": function () {},
  "buttonMode": function () {},
  "defaultCursor": function () {},
  "_over": function () {},
  "_isLeftDown": function () {},
  "_isRightDown": function () {},
  "_pointerOver": function () {},
  "_pointerDown": function () {},
  "_touchDown": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.TilingSprite.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.BitmapText.prototype = {
  "updateText": function () {},
  "updateTransform": function () {},
  "getLocalBounds": function () {},
  "validate": function () {},
  "setText": function () {},
  "onChildrenChange": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "calculateBounds": function () {},
  "_calculateBounds": function () {},
  "renderWebGL": function () {},
  "renderAdvancedWebGL": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "renderCanvas": function () {},
  "destroy": function () {},
  "containerUpdateTransform": function () {},
  "getChildByName": function () {},
  "_recursivePostUpdateTransform": function () {},
  "getBounds": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "displayObjectUpdateTransform": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheData": function () {},
  "_renderCachedWebGL": function () {},
  "_initCachedDisplayObject": function () {},
  "_renderCachedCanvas": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_calculateCachedBounds": function () {},
  "_getCachedLocalBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "name": function () {},
  "getGlobalPosition": function () {},
  "generateTexture": function () {},
  "accessible": function () {},
  "accessibleTitle": function () {},
  "accessibleHint": function () {},
  "tabIndex": function () {},
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "hitArea": function () {},
  "buttonMode": function () {},
  "defaultCursor": function () {},
  "_over": function () {},
  "_isLeftDown": function () {},
  "_isRightDown": function () {},
  "_pointerOver": function () {},
  "_pointerDown": function () {},
  "_touchDown": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.BitmapText.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.utils.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.ticker.Ticker.prototype = {
  "_requestIfNeeded": function () {},
  "_cancelIfNeeded": function () {},
  "_startIfPossible": function () {},
  "add": function () {},
  "addOnce": function () {},
  "remove": function () {},
  "start": function () {},
  "stop": function () {},
  "update": function () {}
};
PIXI.math.CanvasRenderer.prototype = {
  "render": function () {},
  "setBlendMode": function () {},
  "destroy": function () {},
  "resize": function () {},
  "initPlugins": function () {},
  "destroyPlugins": function () {},
  "generateTexture": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.CanvasRenderer.__plugins.sprite.prototype = {
  "render": function () {},
  "destroy": function () {}
};
PIXI.math.CanvasRenderer.__plugins.graphics.prototype = {
  "render": function () {},
  "updateGraphicsTint": function () {},
  "renderPolygon": function () {},
  "destroy": function () {}
};
PIXI.math.CanvasRenderer.__plugins.mesh.prototype = {
  "render": function () {},
  "_renderTriangleMesh": function () {},
  "_renderTriangles": function () {},
  "_renderDrawTriangle": function () {},
  "renderMeshFlat": function () {},
  "destroy": function () {}
};
PIXI.math.CanvasRenderer.__plugins.accessibility.prototype = {
  "createTouchHook": function () {},
  "activate": function () {},
  "deactivate": function () {},
  "updateAccessibleObjects": function () {},
  "update": function () {},
  "capHitArea": function () {},
  "addChild": function () {},
  "_onClick": function () {},
  "_onFocus": function () {},
  "_onFocusOut": function () {},
  "_onKeyDown": function () {},
  "_onMouseMove": function () {},
  "destroy": function () {}
};
PIXI.math.CanvasRenderer.__plugins.extract.prototype = {
  "image": function () {},
  "base64": function () {},
  "canvas": function () {},
  "pixels": function () {},
  "destroy": function () {}
};
PIXI.math.CanvasRenderer.__plugins.interaction.prototype = {
  "setTargetElement": function () {},
  "addEvents": function () {},
  "removeEvents": function () {},
  "update": function () {},
  "dispatchEvent": function () {},
  "mapPositionToPoint": function () {},
  "processInteractive": function () {},
  "onMouseDown": function () {},
  "processMouseDown": function () {},
  "onMouseUp": function () {},
  "processMouseUp": function () {},
  "onMouseMove": function () {},
  "processMouseMove": function () {},
  "onMouseOut": function () {},
  "processMouseOverOut": function () {},
  "onMouseOver": function () {},
  "onPointerDown": function () {},
  "processPointerDown": function () {},
  "onPointerUp": function () {},
  "processPointerUp": function () {},
  "onPointerMove": function () {},
  "processPointerMove": function () {},
  "onPointerOut": function () {},
  "processPointerOverOut": function () {},
  "onPointerOver": function () {},
  "onTouchStart": function () {},
  "processTouchStart": function () {},
  "onTouchEnd": function () {},
  "processTouchEnd": function () {},
  "onTouchMove": function () {},
  "processTouchMove": function () {},
  "getTouchData": function () {},
  "returnTouchData": function () {},
  "normalizeToPointerData": function () {},
  "destroy": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.CanvasRenderer.__plugins.interaction.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.CanvasRenderer.__plugins.prepare.prototype = {
  "upload": function () {},
  "tick": function () {},
  "register": function () {},
  "add": function () {},
  "destroy": function () {}
};
PIXI.math.CanvasRenderer.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.WebGLRenderer.prototype = {
  "_initContext": function () {},
  "render": function () {},
  "setObjectRenderer": function () {},
  "flush": function () {},
  "resize": function () {},
  "setBlendMode": function () {},
  "clear": function () {},
  "setTransform": function () {},
  "bindRenderTexture": function () {},
  "bindRenderTarget": function () {},
  "bindShader": function () {},
  "bindTexture": function () {},
  "createVao": function () {},
  "reset": function () {},
  "handleContextLost": function () {},
  "handleContextRestored": function () {},
  "destroy": function () {},
  "initPlugins": function () {},
  "destroyPlugins": function () {},
  "generateTexture": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.WebGLRenderer.__plugins.sprite.prototype = {
  "onContextChange": function () {},
  "onPrerender": function () {},
  "render": function () {},
  "flush": function () {},
  "start": function () {},
  "stop": function () {},
  "destroy": function () {}
};
PIXI.math.WebGLRenderer.__plugins.graphics.prototype = {
  "onContextChange": function () {},
  "destroy": function () {},
  "render": function () {},
  "updateGraphics": function () {},
  "getWebGLData": function () {},
  "start": function () {},
  "stop": function () {},
  "flush": function () {}
};
PIXI.math.WebGLRenderer.__plugins.mesh.prototype = {
  "onContextChange": function () {},
  "render": function () {},
  "start": function () {},
  "stop": function () {},
  "flush": function () {},
  "destroy": function () {}
};
PIXI.math.WebGLRenderer.__plugins.particle.prototype = {
  "onContextChange": function () {},
  "start": function () {},
  "render": function () {},
  "generateBuffers": function () {},
  "uploadVertices": function () {},
  "uploadPosition": function () {},
  "uploadRotation": function () {},
  "uploadUvs": function () {},
  "uploadAlpha": function () {},
  "destroy": function () {},
  "stop": function () {},
  "flush": function () {}
};
PIXI.math.WebGLRenderer.__plugins.tilingSprite.prototype = {
  "onContextChange": function () {},
  "render": function () {},
  "start": function () {},
  "stop": function () {},
  "flush": function () {},
  "destroy": function () {}
};
PIXI.math.WebGLRenderer.__plugins.accessibility.prototype = {
  "createTouchHook": function () {},
  "activate": function () {},
  "deactivate": function () {},
  "updateAccessibleObjects": function () {},
  "update": function () {},
  "capHitArea": function () {},
  "addChild": function () {},
  "_onClick": function () {},
  "_onFocus": function () {},
  "_onFocusOut": function () {},
  "_onKeyDown": function () {},
  "_onMouseMove": function () {},
  "destroy": function () {}
};
PIXI.math.WebGLRenderer.__plugins.extract.prototype = {
  "image": function () {},
  "base64": function () {},
  "canvas": function () {},
  "pixels": function () {},
  "destroy": function () {}
};
PIXI.math.WebGLRenderer.__plugins.interaction.prototype = {
  "setTargetElement": function () {},
  "addEvents": function () {},
  "removeEvents": function () {},
  "update": function () {},
  "dispatchEvent": function () {},
  "mapPositionToPoint": function () {},
  "processInteractive": function () {},
  "onMouseDown": function () {},
  "processMouseDown": function () {},
  "onMouseUp": function () {},
  "processMouseUp": function () {},
  "onMouseMove": function () {},
  "processMouseMove": function () {},
  "onMouseOut": function () {},
  "processMouseOverOut": function () {},
  "onMouseOver": function () {},
  "onPointerDown": function () {},
  "processPointerDown": function () {},
  "onPointerUp": function () {},
  "processPointerUp": function () {},
  "onPointerMove": function () {},
  "processPointerMove": function () {},
  "onPointerOut": function () {},
  "processPointerOverOut": function () {},
  "onPointerOver": function () {},
  "onTouchStart": function () {},
  "processTouchStart": function () {},
  "onTouchEnd": function () {},
  "processTouchEnd": function () {},
  "onTouchMove": function () {},
  "processTouchMove": function () {},
  "getTouchData": function () {},
  "returnTouchData": function () {},
  "normalizeToPointerData": function () {},
  "destroy": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.WebGLRenderer.__plugins.interaction.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.WebGLRenderer.__plugins.prepare.prototype = {
  "upload": function () {},
  "tick": function () {},
  "register": function () {},
  "add": function () {},
  "destroy": function () {}
};
PIXI.math.WebGLRenderer.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.glCore.GLBuffer.prototype = {
  "upload": function () {},
  "bind": function () {},
  "destroy": function () {}
};
PIXI.math.glCore.GLFramebuffer.prototype = {
  "enableTexture": function () {},
  "enableStencil": function () {},
  "clear": function () {},
  "bind": function () {},
  "unbind": function () {},
  "resize": function () {},
  "destroy": function () {}
};
PIXI.math.glCore.GLShader.prototype = {
  "bind": function () {},
  "destroy": function () {}
};
PIXI.math.glCore.GLTexture.prototype = {
  "upload": function () {},
  "uploadData": function () {},
  "bind": function () {},
  "unbind": function () {},
  "minFilter": function () {},
  "magFilter": function () {},
  "enableMipmap": function () {},
  "enableLinearScaling": function () {},
  "enableNearestScaling": function () {},
  "enableWrapClamp": function () {},
  "enableWrapRepeat": function () {},
  "enableWrapMirrorRepeat": function () {},
  "destroy": function () {}
};
PIXI.math.glCore.VertexArrayObject.prototype = {
  "bind": function () {},
  "unbind": function () {},
  "activate": function () {},
  "addAttribute": function () {},
  "addIndex": function () {},
  "clear": function () {},
  "draw": function () {},
  "destroy": function () {}
};
PIXI.math.DisplayObject.prototype = {
  "updateTransform": function () {},
  "_recursivePostUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "renderWebGL": function () {},
  "renderCanvas": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "destroy": function () {},
  "displayObjectUpdateTransform": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheData": function () {},
  "_renderCachedWebGL": function () {},
  "_initCachedDisplayObject": function () {},
  "_renderCachedCanvas": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_calculateCachedBounds": function () {},
  "_getCachedLocalBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "name": function () {},
  "getGlobalPosition": function () {},
  "generateTexture": function () {},
  "accessible": function () {},
  "accessibleTitle": function () {},
  "accessibleHint": function () {},
  "tabIndex": function () {},
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "hitArea": function () {},
  "buttonMode": function () {},
  "defaultCursor": function () {},
  "_over": function () {},
  "_isLeftDown": function () {},
  "_isRightDown": function () {},
  "_pointerOver": function () {},
  "_pointerDown": function () {},
  "_touchDown": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.DisplayObject.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.Container.prototype = {
  "onChildrenChange": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "calculateBounds": function () {},
  "_calculateBounds": function () {},
  "renderWebGL": function () {},
  "renderAdvancedWebGL": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "renderCanvas": function () {},
  "destroy": function () {},
  "containerUpdateTransform": function () {},
  "getChildByName": function () {},
  "_recursivePostUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "displayObjectUpdateTransform": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheData": function () {},
  "_renderCachedWebGL": function () {},
  "_initCachedDisplayObject": function () {},
  "_renderCachedCanvas": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_calculateCachedBounds": function () {},
  "_getCachedLocalBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "name": function () {},
  "getGlobalPosition": function () {},
  "generateTexture": function () {},
  "accessible": function () {},
  "accessibleTitle": function () {},
  "accessibleHint": function () {},
  "tabIndex": function () {},
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "hitArea": function () {},
  "buttonMode": function () {},
  "defaultCursor": function () {},
  "_over": function () {},
  "_isLeftDown": function () {},
  "_isRightDown": function () {},
  "_pointerOver": function () {},
  "_pointerDown": function () {},
  "_touchDown": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.Container.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.Transform.prototype = {
  "updateSkew": function () {},
  "updateLocalTransform": function () {},
  "updateTransform": function () {},
  "setFromMatrix": function () {},
  "updateWorldTransform": function () {}
};
PIXI.math.TransformStatic.prototype = {
  "onChange": function () {},
  "updateSkew": function () {},
  "updateLocalTransform": function () {},
  "updateTransform": function () {},
  "setFromMatrix": function () {},
  "updateWorldTransform": function () {}
};
PIXI.math.TransformBase.prototype = {
  "updateLocalTransform": function () {},
  "updateTransform": function () {},
  "updateWorldTransform": function () {}
};
PIXI.math.Sprite.prototype = {
  "_onTextureUpdate": function () {},
  "_onAnchorUpdate": function () {},
  "calculateVertices": function () {},
  "calculateTrimmedVertices": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "_calculateBounds": function () {},
  "getLocalBounds": function () {},
  "containsPoint": function () {},
  "destroy": function () {},
  "setTexture": function () {},
  "onChildrenChange": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "calculateBounds": function () {},
  "renderWebGL": function () {},
  "renderAdvancedWebGL": function () {},
  "renderCanvas": function () {},
  "containerUpdateTransform": function () {},
  "getChildByName": function () {},
  "_recursivePostUpdateTransform": function () {},
  "getBounds": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "displayObjectUpdateTransform": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheData": function () {},
  "_renderCachedWebGL": function () {},
  "_initCachedDisplayObject": function () {},
  "_renderCachedCanvas": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_calculateCachedBounds": function () {},
  "_getCachedLocalBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "name": function () {},
  "getGlobalPosition": function () {},
  "generateTexture": function () {},
  "accessible": function () {},
  "accessibleTitle": function () {},
  "accessibleHint": function () {},
  "tabIndex": function () {},
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "hitArea": function () {},
  "buttonMode": function () {},
  "defaultCursor": function () {},
  "_over": function () {},
  "_isLeftDown": function () {},
  "_isRightDown": function () {},
  "_pointerOver": function () {},
  "_pointerDown": function () {},
  "_touchDown": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.Sprite.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.CanvasSpriteRenderer.prototype = {
  "render": function () {},
  "destroy": function () {}
};
PIXI.math.SpriteRenderer.prototype = {
  "onContextChange": function () {},
  "onPrerender": function () {},
  "render": function () {},
  "flush": function () {},
  "start": function () {},
  "stop": function () {},
  "destroy": function () {}
};
PIXI.math.Text.prototype = {
  "updateText": function () {},
  "drawLetterSpacing": function () {},
  "updateTexture": function () {},
  "renderWebGL": function () {},
  "_renderCanvas": function () {},
  "determineFontProperties": function () {},
  "wordWrap": function () {},
  "_calculateBounds": function () {},
  "_onStyleChange": function () {},
  "_generateFillStyle": function () {},
  "destroy": function () {},
  "setText": function () {},
  "setStyle": function () {},
  "_onTextureUpdate": function () {},
  "_onAnchorUpdate": function () {},
  "calculateVertices": function () {},
  "calculateTrimmedVertices": function () {},
  "_renderWebGL": function () {},
  "getLocalBounds": function () {},
  "containsPoint": function () {},
  "setTexture": function () {},
  "onChildrenChange": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "calculateBounds": function () {},
  "renderAdvancedWebGL": function () {},
  "renderCanvas": function () {},
  "containerUpdateTransform": function () {},
  "getChildByName": function () {},
  "_recursivePostUpdateTransform": function () {},
  "getBounds": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "displayObjectUpdateTransform": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheData": function () {},
  "_renderCachedWebGL": function () {},
  "_initCachedDisplayObject": function () {},
  "_renderCachedCanvas": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_calculateCachedBounds": function () {},
  "_getCachedLocalBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "name": function () {},
  "getGlobalPosition": function () {},
  "generateTexture": function () {},
  "accessible": function () {},
  "accessibleTitle": function () {},
  "accessibleHint": function () {},
  "tabIndex": function () {},
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "hitArea": function () {},
  "buttonMode": function () {},
  "defaultCursor": function () {},
  "_over": function () {},
  "_isLeftDown": function () {},
  "_isRightDown": function () {},
  "_pointerOver": function () {},
  "_pointerDown": function () {},
  "_touchDown": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.Text.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.TextStyle.prototype = {
  "clone": function () {},
  "reset": function () {}
};
PIXI.math.Graphics.prototype = {
  "clone": function () {},
  "lineStyle": function () {},
  "moveTo": function () {},
  "lineTo": function () {},
  "quadraticCurveTo": function () {},
  "bezierCurveTo": function () {},
  "arcTo": function () {},
  "arc": function () {},
  "beginFill": function () {},
  "endFill": function () {},
  "drawRect": function () {},
  "drawRoundedRect": function () {},
  "drawCircle": function () {},
  "drawEllipse": function () {},
  "drawPolygon": function () {},
  "clear": function () {},
  "isFastRect": function () {},
  "_renderWebGL": function () {},
  "_renderSpriteRect": function () {},
  "_renderCanvas": function () {},
  "_calculateBounds": function () {},
  "containsPoint": function () {},
  "updateLocalBounds": function () {},
  "drawShape": function () {},
  "generateCanvasTexture": function () {},
  "closePath": function () {},
  "addHole": function () {},
  "destroy": function () {},
  "generateTexture": function () {},
  "onChildrenChange": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "calculateBounds": function () {},
  "renderWebGL": function () {},
  "renderAdvancedWebGL": function () {},
  "renderCanvas": function () {},
  "containerUpdateTransform": function () {},
  "getChildByName": function () {},
  "_recursivePostUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "displayObjectUpdateTransform": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheData": function () {},
  "_renderCachedWebGL": function () {},
  "_initCachedDisplayObject": function () {},
  "_renderCachedCanvas": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_calculateCachedBounds": function () {},
  "_getCachedLocalBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "name": function () {},
  "getGlobalPosition": function () {},
  "accessible": function () {},
  "accessibleTitle": function () {},
  "accessibleHint": function () {},
  "tabIndex": function () {},
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "hitArea": function () {},
  "buttonMode": function () {},
  "defaultCursor": function () {},
  "_over": function () {},
  "_isLeftDown": function () {},
  "_isRightDown": function () {},
  "_pointerOver": function () {},
  "_pointerDown": function () {},
  "_touchDown": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.Graphics.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.GraphicsData.prototype = {
  "clone": function () {},
  "addHole": function () {},
  "destroy": function () {}
};
PIXI.math.GraphicsRenderer.prototype = {
  "onContextChange": function () {},
  "destroy": function () {},
  "render": function () {},
  "updateGraphics": function () {},
  "getWebGLData": function () {},
  "start": function () {},
  "stop": function () {},
  "flush": function () {}
};
PIXI.math.CanvasGraphicsRenderer.prototype = {
  "render": function () {},
  "updateGraphicsTint": function () {},
  "renderPolygon": function () {},
  "destroy": function () {}
};
PIXI.math.Texture.prototype = {
  "update": function () {},
  "onBaseTextureLoaded": function () {},
  "onBaseTextureUpdated": function () {},
  "destroy": function () {},
  "clone": function () {},
  "_updateUvs": function () {},
  "setFrame": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.Texture.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.BaseTexture.prototype = {
  "update": function () {},
  "loadSource": function () {},
  "_updateImageType": function () {},
  "_loadSvgSource": function () {},
  "_loadSvgSourceUsingDataUri": function () {},
  "_loadSvgSourceUsingXhr": function () {},
  "_loadSvgSourceUsingString": function () {},
  "_sourceLoaded": function () {},
  "destroy": function () {},
  "dispose": function () {},
  "updateSourceImage": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.BaseTexture.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.RenderTexture.prototype = {
  "resize": function () {},
  "render": function () {},
  "getImage": function () {},
  "getBase64": function () {},
  "getCanvas": function () {},
  "getPixels": function () {},
  "update": function () {},
  "onBaseTextureLoaded": function () {},
  "onBaseTextureUpdated": function () {},
  "destroy": function () {},
  "clone": function () {},
  "_updateUvs": function () {},
  "setFrame": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.RenderTexture.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.BaseRenderTexture.prototype = {
  "resize": function () {},
  "destroy": function () {},
  "update": function () {},
  "loadSource": function () {},
  "_updateImageType": function () {},
  "_loadSvgSource": function () {},
  "_loadSvgSourceUsingDataUri": function () {},
  "_loadSvgSourceUsingXhr": function () {},
  "_loadSvgSourceUsingString": function () {},
  "_sourceLoaded": function () {},
  "dispose": function () {},
  "updateSourceImage": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.BaseRenderTexture.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.VideoBaseTexture.prototype = {
  "_isSourcePlaying": function () {},
  "_isSourceReady": function () {},
  "_onPlayStart": function () {},
  "_onPlayStop": function () {},
  "_onCanPlay": function () {},
  "destroy": function () {},
  "update": function () {},
  "loadSource": function () {},
  "_updateImageType": function () {},
  "_loadSvgSource": function () {},
  "_loadSvgSourceUsingDataUri": function () {},
  "_loadSvgSourceUsingXhr": function () {},
  "_loadSvgSourceUsingString": function () {},
  "_sourceLoaded": function () {},
  "dispose": function () {},
  "updateSourceImage": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.VideoBaseTexture.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.TextureUvs.prototype = {
  "set": function () {}
};
PIXI.math.CanvasRenderTarget.prototype = {
  "clear": function () {},
  "resize": function () {},
  "destroy": function () {}
};
PIXI.math.Shader.prototype = {
  "bind": function () {},
  "destroy": function () {}
};
PIXI.math.WebGLManager.prototype = {
  "onContextChange": function () {},
  "destroy": function () {}
};
PIXI.math.ObjectRenderer.prototype = {
  "start": function () {},
  "stop": function () {},
  "flush": function () {},
  "render": function () {},
  "onContextChange": function () {},
  "destroy": function () {}
};
PIXI.math.RenderTarget.prototype = {
  "clear": function () {},
  "attachStencilBuffer": function () {},
  "setFrame": function () {},
  "activate": function () {},
  "calculateProjection": function () {},
  "resize": function () {},
  "destroy": function () {}
};
PIXI.math.Quad.prototype = {
  "initVao": function () {},
  "map": function () {},
  "draw": function () {},
  "upload": function () {},
  "destroy": function () {}
};
PIXI.math.SpriteMaskFilter.prototype = {
  "apply": function () {}
};
PIXI.math.Filter.prototype = {
  "apply": function () {}
};
PIXI.math.Point.prototype = {
  "clone": function () {},
  "copy": function () {},
  "equals": function () {},
  "set": function () {}
};
PIXI.math.ObservablePoint.prototype = {
  "set": function () {},
  "copy": function () {}
};
PIXI.math.Matrix.prototype = {
  "fromArray": function () {},
  "set": function () {},
  "toArray": function () {},
  "apply": function () {},
  "applyInverse": function () {},
  "translate": function () {},
  "scale": function () {},
  "rotate": function () {},
  "append": function () {},
  "setTransform": function () {},
  "prepend": function () {},
  "decompose": function () {},
  "invert": function () {},
  "identity": function () {},
  "clone": function () {},
  "copy": function () {}
};
PIXI.math.Circle.prototype = {
  "clone": function () {},
  "contains": function () {},
  "getBounds": function () {}
};
PIXI.math.Ellipse.prototype = {
  "clone": function () {},
  "contains": function () {},
  "getBounds": function () {}
};
PIXI.math.Polygon.prototype = {
  "clone": function () {},
  "close": function () {},
  "contains": function () {}
};
PIXI.math.Rectangle.prototype = {
  "clone": function () {},
  "copy": function () {},
  "contains": function () {},
  "pad": function () {},
  "fit": function () {},
  "enlarge": function () {}
};
PIXI.math.RoundedRectangle.prototype = {
  "clone": function () {},
  "contains": function () {}
};
PIXI.math.Stage.prototype = {
  "onChildrenChange": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "calculateBounds": function () {},
  "_calculateBounds": function () {},
  "renderWebGL": function () {},
  "renderAdvancedWebGL": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "renderCanvas": function () {},
  "destroy": function () {},
  "containerUpdateTransform": function () {},
  "getChildByName": function () {},
  "_recursivePostUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "displayObjectUpdateTransform": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheData": function () {},
  "_renderCachedWebGL": function () {},
  "_initCachedDisplayObject": function () {},
  "_renderCachedCanvas": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_calculateCachedBounds": function () {},
  "_getCachedLocalBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "name": function () {},
  "getGlobalPosition": function () {},
  "generateTexture": function () {},
  "accessible": function () {},
  "accessibleTitle": function () {},
  "accessibleHint": function () {},
  "tabIndex": function () {},
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "hitArea": function () {},
  "buttonMode": function () {},
  "defaultCursor": function () {},
  "_over": function () {},
  "_isLeftDown": function () {},
  "_isRightDown": function () {},
  "_pointerOver": function () {},
  "_pointerDown": function () {},
  "_touchDown": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.Stage.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.DisplayObjectContainer.prototype = {
  "onChildrenChange": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "calculateBounds": function () {},
  "_calculateBounds": function () {},
  "renderWebGL": function () {},
  "renderAdvancedWebGL": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "renderCanvas": function () {},
  "destroy": function () {},
  "containerUpdateTransform": function () {},
  "getChildByName": function () {},
  "_recursivePostUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "displayObjectUpdateTransform": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheData": function () {},
  "_renderCachedWebGL": function () {},
  "_initCachedDisplayObject": function () {},
  "_renderCachedCanvas": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_calculateCachedBounds": function () {},
  "_getCachedLocalBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "name": function () {},
  "getGlobalPosition": function () {},
  "generateTexture": function () {},
  "accessible": function () {},
  "accessibleTitle": function () {},
  "accessibleHint": function () {},
  "tabIndex": function () {},
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "hitArea": function () {},
  "buttonMode": function () {},
  "defaultCursor": function () {},
  "_over": function () {},
  "_isLeftDown": function () {},
  "_isRightDown": function () {},
  "_pointerOver": function () {},
  "_pointerDown": function () {},
  "_touchDown": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.DisplayObjectContainer.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.Strip.prototype = {
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "_onTextureUpdate": function () {},
  "_calculateBounds": function () {},
  "containsPoint": function () {},
  "onChildrenChange": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "calculateBounds": function () {},
  "renderWebGL": function () {},
  "renderAdvancedWebGL": function () {},
  "renderCanvas": function () {},
  "destroy": function () {},
  "containerUpdateTransform": function () {},
  "getChildByName": function () {},
  "_recursivePostUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "displayObjectUpdateTransform": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheData": function () {},
  "_renderCachedWebGL": function () {},
  "_initCachedDisplayObject": function () {},
  "_renderCachedCanvas": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_calculateCachedBounds": function () {},
  "_getCachedLocalBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "name": function () {},
  "getGlobalPosition": function () {},
  "generateTexture": function () {},
  "accessible": function () {},
  "accessibleTitle": function () {},
  "accessibleHint": function () {},
  "tabIndex": function () {},
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "hitArea": function () {},
  "buttonMode": function () {},
  "defaultCursor": function () {},
  "_over": function () {},
  "_isLeftDown": function () {},
  "_isRightDown": function () {},
  "_pointerOver": function () {},
  "_pointerDown": function () {},
  "_touchDown": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.Strip.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.Rope.prototype = {
  "refresh": function () {},
  "_onTextureUpdate": function () {},
  "updateTransform": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "_calculateBounds": function () {},
  "containsPoint": function () {},
  "onChildrenChange": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "calculateBounds": function () {},
  "renderWebGL": function () {},
  "renderAdvancedWebGL": function () {},
  "renderCanvas": function () {},
  "destroy": function () {},
  "containerUpdateTransform": function () {},
  "getChildByName": function () {},
  "_recursivePostUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "displayObjectUpdateTransform": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheData": function () {},
  "_renderCachedWebGL": function () {},
  "_initCachedDisplayObject": function () {},
  "_renderCachedCanvas": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_calculateCachedBounds": function () {},
  "_getCachedLocalBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "name": function () {},
  "getGlobalPosition": function () {},
  "generateTexture": function () {},
  "accessible": function () {},
  "accessibleTitle": function () {},
  "accessibleHint": function () {},
  "tabIndex": function () {},
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "hitArea": function () {},
  "buttonMode": function () {},
  "defaultCursor": function () {},
  "_over": function () {},
  "_isLeftDown": function () {},
  "_isRightDown": function () {},
  "_pointerOver": function () {},
  "_pointerDown": function () {},
  "_touchDown": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.Rope.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.ParticleContainer.prototype = {
  "setProperties": function () {},
  "updateTransform": function () {},
  "renderWebGL": function () {},
  "onChildrenChange": function () {},
  "renderCanvas": function () {},
  "destroy": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "calculateBounds": function () {},
  "_calculateBounds": function () {},
  "renderAdvancedWebGL": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "containerUpdateTransform": function () {},
  "getChildByName": function () {},
  "_recursivePostUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "displayObjectUpdateTransform": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheData": function () {},
  "_renderCachedWebGL": function () {},
  "_initCachedDisplayObject": function () {},
  "_renderCachedCanvas": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_calculateCachedBounds": function () {},
  "_getCachedLocalBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "name": function () {},
  "getGlobalPosition": function () {},
  "generateTexture": function () {},
  "accessible": function () {},
  "accessibleTitle": function () {},
  "accessibleHint": function () {},
  "tabIndex": function () {},
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "hitArea": function () {},
  "buttonMode": function () {},
  "defaultCursor": function () {},
  "_over": function () {},
  "_isLeftDown": function () {},
  "_isRightDown": function () {},
  "_pointerOver": function () {},
  "_pointerDown": function () {},
  "_touchDown": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.ParticleContainer.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.MovieClip.prototype = {
  "stop": function () {},
  "play": function () {},
  "gotoAndStop": function () {},
  "gotoAndPlay": function () {},
  "update": function () {},
  "destroy": function () {},
  "_onTextureUpdate": function () {},
  "_onAnchorUpdate": function () {},
  "calculateVertices": function () {},
  "calculateTrimmedVertices": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "_calculateBounds": function () {},
  "getLocalBounds": function () {},
  "containsPoint": function () {},
  "setTexture": function () {},
  "onChildrenChange": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "calculateBounds": function () {},
  "renderWebGL": function () {},
  "renderAdvancedWebGL": function () {},
  "renderCanvas": function () {},
  "containerUpdateTransform": function () {},
  "getChildByName": function () {},
  "_recursivePostUpdateTransform": function () {},
  "getBounds": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "displayObjectUpdateTransform": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheData": function () {},
  "_renderCachedWebGL": function () {},
  "_initCachedDisplayObject": function () {},
  "_renderCachedCanvas": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_calculateCachedBounds": function () {},
  "_getCachedLocalBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "name": function () {},
  "getGlobalPosition": function () {},
  "generateTexture": function () {},
  "accessible": function () {},
  "accessibleTitle": function () {},
  "accessibleHint": function () {},
  "tabIndex": function () {},
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "hitArea": function () {},
  "buttonMode": function () {},
  "defaultCursor": function () {},
  "_over": function () {},
  "_isLeftDown": function () {},
  "_isRightDown": function () {},
  "_pointerOver": function () {},
  "_pointerDown": function () {},
  "_touchDown": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.MovieClip.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.TilingSprite.prototype = {
  "_onTextureUpdate": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "_calculateBounds": function () {},
  "getLocalBounds": function () {},
  "containsPoint": function () {},
  "destroy": function () {},
  "_onAnchorUpdate": function () {},
  "calculateVertices": function () {},
  "calculateTrimmedVertices": function () {},
  "setTexture": function () {},
  "onChildrenChange": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "calculateBounds": function () {},
  "renderWebGL": function () {},
  "renderAdvancedWebGL": function () {},
  "renderCanvas": function () {},
  "containerUpdateTransform": function () {},
  "getChildByName": function () {},
  "_recursivePostUpdateTransform": function () {},
  "getBounds": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "displayObjectUpdateTransform": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheData": function () {},
  "_renderCachedWebGL": function () {},
  "_initCachedDisplayObject": function () {},
  "_renderCachedCanvas": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_calculateCachedBounds": function () {},
  "_getCachedLocalBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "name": function () {},
  "getGlobalPosition": function () {},
  "generateTexture": function () {},
  "accessible": function () {},
  "accessibleTitle": function () {},
  "accessibleHint": function () {},
  "tabIndex": function () {},
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "hitArea": function () {},
  "buttonMode": function () {},
  "defaultCursor": function () {},
  "_over": function () {},
  "_isLeftDown": function () {},
  "_isRightDown": function () {},
  "_pointerOver": function () {},
  "_pointerDown": function () {},
  "_touchDown": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.TilingSprite.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.BitmapText.prototype = {
  "updateText": function () {},
  "updateTransform": function () {},
  "getLocalBounds": function () {},
  "validate": function () {},
  "setText": function () {},
  "onChildrenChange": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "calculateBounds": function () {},
  "_calculateBounds": function () {},
  "renderWebGL": function () {},
  "renderAdvancedWebGL": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "renderCanvas": function () {},
  "destroy": function () {},
  "containerUpdateTransform": function () {},
  "getChildByName": function () {},
  "_recursivePostUpdateTransform": function () {},
  "getBounds": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "displayObjectUpdateTransform": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheData": function () {},
  "_renderCachedWebGL": function () {},
  "_initCachedDisplayObject": function () {},
  "_renderCachedCanvas": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_calculateCachedBounds": function () {},
  "_getCachedLocalBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "name": function () {},
  "getGlobalPosition": function () {},
  "generateTexture": function () {},
  "accessible": function () {},
  "accessibleTitle": function () {},
  "accessibleHint": function () {},
  "tabIndex": function () {},
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "hitArea": function () {},
  "buttonMode": function () {},
  "defaultCursor": function () {},
  "_over": function () {},
  "_isLeftDown": function () {},
  "_isRightDown": function () {},
  "_pointerOver": function () {},
  "_pointerDown": function () {},
  "_touchDown": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.BitmapText.EventEmitter.prototype = {
  "eventNames": function () {},
  "listeners": function () {},
  "emit": function () {},
  "on": function () {},
  "once": function () {},
  "removeListener": function () {},
  "removeAllListeners": function () {},
  "off": function () {},
  "addListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.math.AbstractFilter.prototype = {
  "apply": function () {}
};
PIXI.math.TransformManual.prototype = {
  "updateLocalTransform": function () {},
  "updateTransform": function () {},
  "updateWorldTransform": function () {}
};
PIXI.AbstractFilter.prototype = {
  "apply": function () {}
};
PIXI.TransformManual.prototype = {
  "updateLocalTransform": function () {},
  "updateTransform": function () {},
  "updateWorldTransform": function () {}
};
/**********************************************************************
 * End Generated Extern for PIXI
/**********************************************************************/
