/**********************************************************************
 * Extern for PIXI
 * Generated by http://jmmk.github.io/javascript-externs-generator
 **********************************************************************/
var PIXI = {
  "AbstractBatchRenderer": function () { },
  "AbstractRenderer": {
    "EventEmitter": {
      "EventEmitter": function () { },
      "prefixed": {}
    },
    "prefixed": {}
  },
  "AnimatedSprite": {
    "EventEmitter": {
      "EventEmitter": function () { },
      "prefixed": {}
    },
    "from": function () { },
    "fromCanvas": function () { },
    "fromFrame": function () { },
    "fromFrames": function () { },
    "fromImage": function () { },
    "fromImages": function () { },
    "fromSVG": function () { },
    "fromVideo": function () { },
    "mixin": function () { },
    "prefixed": {}
  },
  "AppLoaderPlugin": {
    "destroy": function () { },
    "init": function () { }
  },
  "Application": {
    "_plugins": {},
    "registerPlugin": function () { }
  },
  "Attribute": {
    "from": function () { }
  },
  "BLEND_MODES": {
    "ADD": {},
    "ADD_NPM": {},
    "COLOR": {},
    "COLOR_BURN": {},
    "COLOR_DODGE": {},
    "DARKEN": {},
    "DIFFERENCE": {},
    "DST_ATOP": {},
    "DST_IN": {},
    "DST_OUT": {},
    "DST_OVER": {},
    "ERASE": {},
    "EXCLUSION": {},
    "HARD_LIGHT": {},
    "HUE": {},
    "LIGHTEN": {},
    "LUMINOSITY": {},
    "MULTIPLY": {},
    "NONE": {},
    "NORMAL": {},
    "NORMAL_NPM": {},
    "OVERLAY": {},
    "SATURATION": {},
    "SCREEN": {},
    "SCREEN_NPM": {},
    "SOFT_LIGHT": {},
    "SRC_ATOP": {},
    "SRC_IN": {},
    "SRC_OUT": {},
    "SRC_OVER": {},
    "SUBTRACT": {}
  },
  "BaseRenderTexture": {
    "EventEmitter": {
      "EventEmitter": function () { },
      "prefixed": {}
    },
    "_globalBatch": {},
    "addToCache": function () { },
    "from": function () { },
    "fromBuffer": function () { },
    "fromCanvas": function () { },
    "fromImage": function () { },
    "fromSVG": function () { },
    "prefixed": {},
    "removeFromCache": function () { }
  },
  "BaseTexture": {
    "EventEmitter": {
      "EventEmitter": function () { },
      "prefixed": {}
    },
    "_globalBatch": {},
    "addToCache": function () { },
    "from": function () { },
    "fromBuffer": function () { },
    "fromCanvas": function () { },
    "fromImage": function () { },
    "fromSVG": function () { },
    "prefixed": {},
    "removeFromCache": function () { }
  },
  "BatchDrawCall": function () { },
  "BatchGeometry": {
    "merge": function () { }
  },
  "BatchPluginFactory": {
    "create": function () { }
  },
  "BatchRenderer": function () { },
  "BatchShaderGenerator": function () { },
  "BitmapFontLoader": {
    "add": function () { },
    "dirname": function () { },
    "parse": function () { },
    "use": function () { }
  },
  "BitmapText": {
    "EventEmitter": {
      "EventEmitter": function () { },
      "prefixed": {}
    },
    "fonts": {},
    "mixin": function () { },
    "prefixed": {},
    "registerFont": function () { }
  },
  "Bounds": function () { },
  "Buffer": {
    "from": function () { }
  },
  "Circle": function () { },
  "Container": {
    "EventEmitter": {
      "EventEmitter": function () { },
      "prefixed": {}
    },
    "mixin": function () { },
    "prefixed": {}
  },
  "CubeTexture": {
    "EventEmitter": {
      "EventEmitter": function () { },
      "prefixed": {}
    },
    "_globalBatch": {},
    "addToCache": function () { },
    "from": function () { },
    "fromBuffer": function () { },
    "fromCanvas": function () { },
    "fromImage": function () { },
    "fromSVG": function () { },
    "prefixed": {},
    "removeFromCache": function () { }
  },
  "DEG_TO_RAD": {},
  "DRAW_MODES": {
    "LINES": {},
    "LINE_LOOP": {},
    "LINE_STRIP": {},
    "POINTS": {},
    "TRIANGLES": {},
    "TRIANGLE_FAN": {},
    "TRIANGLE_STRIP": {}
  },
  "DisplayObject": {
    "EventEmitter": {
      "EventEmitter": function () { },
      "prefixed": {}
    },
    "mixin": function () { },
    "prefixed": {}
  },
  "ENV": {
    "WEBGL": {},
    "WEBGL2": {},
    "WEBGL_LEGACY": {}
  },
  "Ellipse": function () { },
  "FORMATS": {
    "ALPHA": {},
    "DEPTH_COMPONENT": {},
    "DEPTH_STENCIL": {},
    "LUMINANCE": {},
    "LUMINANCE_ALPHA": {},
    "RGB": {},
    "RGBA": {}
  },
  "FillStyle": function () { },
  "Filter": {
    "SOURCE_KEY_MAP": {},
    "from": function () { }
  },
  "Framebuffer": function () { },
  "GC_MODES": {
    "AUTO": {},
    "MANUAL": {}
  },
  "GLProgram": function () { },
  "GLTexture": {
    "EventEmitter": {
      "EventEmitter": function () { },
      "prefixed": {}
    },
    "_globalBatch": {},
    "addToCache": function () { },
    "from": function () { },
    "fromBuffer": function () { },
    "fromCanvas": function () { },
    "fromImage": function () { },
    "fromSVG": function () { },
    "prefixed": {},
    "removeFromCache": function () { }
  },
  "GRAPHICS_CURVES": {
    "_segmentsCount": function () { },
    "adaptive": {},
    "maxLength": {},
    "maxSegments": {},
    "minSegments": {}
  },
  "Geometry": {
    "merge": function () { }
  },
  "Graphics": {
    "EventEmitter": {
      "EventEmitter": function () { },
      "prefixed": {}
    },
    "_TEMP_POINT": {
      "clone": function () { },
      "copy": function () { },
      "copyFrom": function () { },
      "copyTo": function () { },
      "equals": function () { },
      "set": function () { },
      "x": {},
      "y": {}
    },
    "mixin": function () { },
    "prefixed": {}
  },
  "GraphicsData": function () { },
  "GraphicsGeometry": {
    "BATCHABLE_SIZE": {},
    "merge": function () { }
  },
  "GroupD8": {
    "E": {},
    "MAIN_DIAGONAL": {},
    "MIRROR_HORIZONTAL": {},
    "MIRROR_VERTICAL": {},
    "N": {},
    "NE": {},
    "NW": {},
    "REVERSE_DIAGONAL": {},
    "S": {},
    "SE": {},
    "SW": {},
    "W": {},
    "add": function () { },
    "byDirection": function () { },
    "inv": function () { },
    "isVertical": function () { },
    "matrixAppendRotationInv": function () { },
    "rotate180": function () { },
    "sub": function () { },
    "uX": function () { },
    "uY": function () { },
    "vX": function () { },
    "vY": function () { }
  },
  "LineStyle": function () { },
  "Loader": {
    "_defaultAfterMiddleware": {},
    "_defaultBeforeMiddleware": {},
    "_plugins": {},
    "addPixiMiddleware": function () { },
    "pre": function () { },
    "registerPlugin": function () { },
    "use": function () { }
  },
  "LoaderResource": {
    "EMPTY_GIF": {},
    "LOAD_TYPE": {
      "AUDIO": {},
      "IMAGE": {},
      "VIDEO": {},
      "XHR": {}
    },
    "STATUS_FLAGS": {
      "COMPLETE": {},
      "DATA_URL": {},
      "LOADING": {},
      "NONE": {}
    },
    "TYPE": {
      "AUDIO": {},
      "IMAGE": {},
      "JSON": {},
      "TEXT": {},
      "UNKNOWN": {},
      "VIDEO": {},
      "XML": {}
    },
    "XHR_RESPONSE_TYPE": {
      "BLOB": {},
      "BUFFER": {},
      "DEFAULT": {},
      "DOCUMENT": {},
      "JSON": {},
      "TEXT": {}
    },
    "_loadTypeMap": {
      "bmp": {},
      "gif": {},
      "jpeg": {},
      "jpg": {},
      "mp3": {},
      "mp4": {},
      "ogg": {},
      "png": {},
      "svg": {},
      "svg+xml": {},
      "tga": {},
      "tif": {},
      "tiff": {},
      "wav": {},
      "webm": {},
      "webp": {}
    },
    "_xhrTypeMap": {
      "bmp": {},
      "fnt": {},
      "gif": {},
      "htm": {},
      "html": {},
      "jpeg": {},
      "jpg": {},
      "json": {},
      "otf": {},
      "png": {},
      "svg": {},
      "text": {},
      "tga": {},
      "tif": {},
      "tiff": {},
      "tmx": {},
      "tsx": {},
      "ttf": {},
      "txt": {},
      "webp": {},
      "xhtml": {},
      "xml": {}
    },
    "setExtensionLoadType": function () { },
    "setExtensionXhrType": function () { }
  },
  "MIPMAP_MODES": {
    "OFF": {},
    "ON": {},
    "POW2": {}
  },
  "Matrix": function () { },
  "Mesh": {
    "BATCHABLE_SIZE": {},
    "EventEmitter": {
      "EventEmitter": function () { },
      "prefixed": {}
    },
    "mixin": function () { },
    "prefixed": {}
  },
  "MeshBatchUvs": function () { },
  "MeshGeometry": {
    "merge": function () { }
  },
  "MeshMaterial": {
    "from": function () { }
  },
  "NineSlicePlane": {
    "BATCHABLE_SIZE": {},
    "EventEmitter": {
      "EventEmitter": function () { },
      "prefixed": {}
    },
    "mixin": function () { },
    "prefixed": {}
  },
  "ObjectRenderer": function () { },
  "ObservablePoint": function () { },
  "PI_2": {},
  "PRECISION": {
    "HIGH": {},
    "LOW": {},
    "MEDIUM": {}
  },
  "ParticleContainer": {
    "EventEmitter": {
      "EventEmitter": function () { },
      "prefixed": {}
    },
    "mixin": function () { },
    "prefixed": {}
  },
  "ParticleRenderer": function () { },
  "PlaneGeometry": {
    "merge": function () { }
  },
  "Point": function () { },
  "Polygon": function () { },
  "Program": {
    "from": function () { }
  },
  "Quad": {
    "merge": function () { }
  },
  "QuadUv": {
    "merge": function () { }
  },
  "RAD_TO_DEG": {},
  "RENDERER_TYPE": {
    "CANVAS": {},
    "UNKNOWN": {},
    "WEBGL": {}
  },
  "Rectangle": function () { },
  "RenderTexture": {
    "EMPTY": {
      "_events": {},
      "_eventsCount": {},
      "_frame": {
        "ceil": function () { },
        "clone": function () { },
        "contains": function () { },
        "copy": function () { },
        "copyFrom": function () { },
        "copyTo": function () { },
        "enlarge": function () { },
        "fit": function () { },
        "height": {},
        "pad": function () { },
        "type": {},
        "width": {},
        "x": {},
        "y": {}
      },
      "_rotate": {},
      "_updateID": {},
      "_uvs": {
        "set": function () { },
        "uvsFloat32": {
          "0": {},
          "1": {},
          "2": {},
          "3": {},
          "4": {},
          "5": {},
          "6": {},
          "7": {}
        },
        "x0": {},
        "x1": {},
        "x2": {},
        "x3": {},
        "y0": {},
        "y1": {},
        "y2": {},
        "y3": {}
      },
      "addListener": function () { },
      "baseTexture": {
        "_batchEnabled": {},
        "_events": {
          "loaded": {
            "context": {},
            "fn": function () { },
            "once": {}
          },
          "update": {
            "context": {},
            "fn": function () { },
            "once": {}
          }
        },
        "_eventsCount": {},
        "_glTextures": {},
        "_refreshPOT": function () { },
        "addListener": function () { },
        "anisotropicLevel": {},
        "cacheId": {},
        "constructor": {
          "EventEmitter": {
            "EventEmitter": function () { },
            "prefixed": {}
          },
          "_globalBatch": {},
          "addToCache": function () { },
          "from": function () { },
          "fromBuffer": function () { },
          "fromCanvas": function () { },
          "fromImage": function () { },
          "fromSVG": function () { },
          "prefixed": {},
          "removeFromCache": function () { }
        },
        "destroy": function () { },
        "destroyed": {},
        "dirtyId": {},
        "dirtyStyleId": {},
        "dispose": function () { },
        "emit": function () { },
        "eventNames": function () { },
        "format": {},
        "height": {},
        "isPowerOfTwo": {},
        "listenerCount": function () { },
        "listeners": function () { },
        "loadSource": function () { },
        "mipmap": {},
        "off": function () { },
        "on": function () { },
        "onError": function () { },
        "once": function () { },
        "premultiplyAlpha": {},
        "removeAllListeners": function () { },
        "removeListener": function () { },
        "resolution": {},
        "resource": {},
        "scaleMode": {},
        "setRealSize": function () { },
        "setResolution": function () { },
        "setResource": function () { },
        "setSize": function () { },
        "setStyle": function () { },
        "target": {},
        "textureCacheIds": {},
        "touched": {},
        "type": {},
        "uid": {},
        "update": function () { },
        "valid": {},
        "width": {},
        "wrapMode": {}
      },
      "clone": function () { },
      "constructor": {
        "EMPTY": {},
        "EventEmitter": {
          "EventEmitter": function () { },
          "prefixed": {}
        },
        "WHITE": {
          "_events": {},
          "_eventsCount": {},
          "_frame": {
            "ceil": function () { },
            "clone": function () { },
            "contains": function () { },
            "copy": function () { },
            "copyFrom": function () { },
            "copyTo": function () { },
            "enlarge": function () { },
            "fit": function () { },
            "height": {},
            "pad": function () { },
            "type": {},
            "width": {},
            "x": {},
            "y": {}
          },
          "_rotate": {},
          "_updateID": {},
          "_uvs": {
            "set": function () { },
            "uvsFloat32": {
              "0": {},
              "1": {},
              "2": {},
              "3": {},
              "4": {},
              "5": {},
              "6": {},
              "7": {}
            },
            "x0": {},
            "x1": {},
            "x2": {},
            "x3": {},
            "y0": {},
            "y1": {},
            "y2": {},
            "y3": {}
          },
          "addListener": function () { },
          "baseTexture": {
            "_batchEnabled": {},
            "_events": {
              "update": {
                "context": {},
                "fn": function () { },
                "once": {}
              }
            },
            "_eventsCount": {},
            "_glTextures": {},
            "_refreshPOT": function () { },
            "addListener": function () { },
            "anisotropicLevel": {},
            "cacheId": {},
            "constructor": {
              "EventEmitter": {
                "EventEmitter": function () { },
                "prefixed": {}
              },
              "_globalBatch": {},
              "addToCache": function () { },
              "from": function () { },
              "fromBuffer": function () { },
              "fromCanvas": function () { },
              "fromImage": function () { },
              "fromSVG": function () { },
              "prefixed": {},
              "removeFromCache": function () { }
            },
            "destroy": function () { },
            "destroyed": {},
            "dirtyId": {},
            "dirtyStyleId": {},
            "dispose": function () { },
            "emit": function () { },
            "eventNames": function () { },
            "format": {},
            "height": {},
            "isPowerOfTwo": {},
            "listenerCount": function () { },
            "listeners": function () { },
            "loadSource": function () { },
            "mipmap": {},
            "off": function () { },
            "on": function () { },
            "onError": function () { },
            "once": function () { },
            "premultiplyAlpha": {},
            "removeAllListeners": function () { },
            "removeListener": function () { },
            "resolution": {},
            "resource": {
              "_height": {},
              "_width": {},
              "bind": function () { },
              "constructor": {
                "crossOrigin": function () { },
                "test": function () { }
              },
              "destroy": function () { },
              "destroyed": {},
              "dispose": function () { },
              "internal": {},
              "load": function () { },
              "onError": {
                "_aliasCount": {},
                "_name": {},
                "add": function () { },
                "contains": function () { },
                "destroy": function () { },
                "dispatch": function () { },
                "emit": function () { },
                "ensureNonAliasedItems": function () { },
                "items": {},
                "remove": function () { },
                "removeAll": function () { },
                "run": function () { }
              },
              "onResize": {
                "_aliasCount": {},
                "_name": {},
                "add": function () { },
                "contains": function () { },
                "destroy": function () { },
                "dispatch": function () { },
                "emit": function () { },
                "ensureNonAliasedItems": function () { },
                "items": {},
                "remove": function () { },
                "removeAll": function () { },
                "run": function () { }
              },
              "onUpdate": {
                "_aliasCount": {},
                "_name": {},
                "add": function () { },
                "contains": function () { },
                "destroy": function () { },
                "dispatch": function () { },
                "emit": function () { },
                "ensureNonAliasedItems": function () { },
                "items": {},
                "remove": function () { },
                "removeAll": function () { },
                "run": function () { }
              },
              "resize": function () { },
              "source": {},
              "style": function () { },
              "unbind": function () { },
              "update": function () { },
              "upload": function () { }
            },
            "scaleMode": {},
            "setRealSize": function () { },
            "setResolution": function () { },
            "setResource": function () { },
            "setSize": function () { },
            "setStyle": function () { },
            "target": {},
            "textureCacheIds": {},
            "touched": {},
            "type": {},
            "uid": {},
            "update": function () { },
            "valid": {},
            "width": {},
            "wrapMode": {}
          },
          "clone": function () { },
          "constructor": function () { },
          "defaultAnchor": {
            "clone": function () { },
            "copy": function () { },
            "copyFrom": function () { },
            "copyTo": function () { },
            "equals": function () { },
            "set": function () { },
            "x": {},
            "y": {}
          },
          "destroy": function () { },
          "emit": function () { },
          "eventNames": function () { },
          "listenerCount": function () { },
          "listeners": function () { },
          "noFrame": {},
          "off": function () { },
          "on": function () { },
          "onBaseTextureUpdated": function () { },
          "once": function () { },
          "orig": {
            "ceil": function () { },
            "clone": function () { },
            "contains": function () { },
            "copy": function () { },
            "copyFrom": function () { },
            "copyTo": function () { },
            "enlarge": function () { },
            "fit": function () { },
            "height": {},
            "pad": function () { },
            "type": {},
            "width": {},
            "x": {},
            "y": {}
          },
          "removeAllListeners": function () { },
          "removeListener": function () { },
          "requiresUpdate": {},
          "textureCacheIds": {},
          "trim": {},
          "update": function () { },
          "updateUvs": function () { },
          "uvMatrix": {},
          "valid": {}
        },
        "addToCache": function () { },
        "from": function () { },
        "fromBuffer": function () { },
        "fromCanvas": function () { },
        "fromFrame": function () { },
        "fromImage": function () { },
        "fromLoader": function () { },
        "fromSVG": function () { },
        "fromVideo": function () { },
        "prefixed": {},
        "removeFromCache": function () { }
      },
      "defaultAnchor": {
        "clone": function () { },
        "copy": function () { },
        "copyFrom": function () { },
        "copyTo": function () { },
        "equals": function () { },
        "set": function () { },
        "x": {},
        "y": {}
      },
      "destroy": function () { },
      "emit": function () { },
      "eventNames": function () { },
      "listenerCount": function () { },
      "listeners": function () { },
      "noFrame": {},
      "off": function () { },
      "on": function () { },
      "onBaseTextureUpdated": function () { },
      "once": function () { },
      "orig": {
        "ceil": function () { },
        "clone": function () { },
        "contains": function () { },
        "copy": function () { },
        "copyFrom": function () { },
        "copyTo": function () { },
        "enlarge": function () { },
        "fit": function () { },
        "height": {},
        "pad": function () { },
        "type": {},
        "width": {},
        "x": {},
        "y": {}
      },
      "removeAllListeners": function () { },
      "removeListener": function () { },
      "requiresUpdate": {},
      "textureCacheIds": {},
      "trim": {},
      "update": function () { },
      "updateUvs": function () { },
      "uvMatrix": {},
      "valid": {}
    },
    "EventEmitter": {
      "EventEmitter": function () { },
      "prefixed": {}
    },
    "WHITE": {
      "_events": {},
      "_eventsCount": {},
      "_frame": {
        "ceil": function () { },
        "clone": function () { },
        "contains": function () { },
        "copy": function () { },
        "copyFrom": function () { },
        "copyTo": function () { },
        "enlarge": function () { },
        "fit": function () { },
        "height": {},
        "pad": function () { },
        "type": {},
        "width": {},
        "x": {},
        "y": {}
      },
      "_rotate": {},
      "_updateID": {},
      "_uvs": {
        "set": function () { },
        "uvsFloat32": {
          "0": {},
          "1": {},
          "2": {},
          "3": {},
          "4": {},
          "5": {},
          "6": {},
          "7": {}
        },
        "x0": {},
        "x1": {},
        "x2": {},
        "x3": {},
        "y0": {},
        "y1": {},
        "y2": {},
        "y3": {}
      },
      "addListener": function () { },
      "baseTexture": {
        "_batchEnabled": {},
        "_events": {
          "update": {
            "context": {},
            "fn": function () { },
            "once": {}
          }
        },
        "_eventsCount": {},
        "_glTextures": {},
        "_refreshPOT": function () { },
        "addListener": function () { },
        "anisotropicLevel": {},
        "cacheId": {},
        "constructor": {
          "EventEmitter": {
            "EventEmitter": function () { },
            "prefixed": {}
          },
          "_globalBatch": {},
          "addToCache": function () { },
          "from": function () { },
          "fromBuffer": function () { },
          "fromCanvas": function () { },
          "fromImage": function () { },
          "fromSVG": function () { },
          "prefixed": {},
          "removeFromCache": function () { }
        },
        "destroy": function () { },
        "destroyed": {},
        "dirtyId": {},
        "dirtyStyleId": {},
        "dispose": function () { },
        "emit": function () { },
        "eventNames": function () { },
        "format": {},
        "height": {},
        "isPowerOfTwo": {},
        "listenerCount": function () { },
        "listeners": function () { },
        "loadSource": function () { },
        "mipmap": {},
        "off": function () { },
        "on": function () { },
        "onError": function () { },
        "once": function () { },
        "premultiplyAlpha": {},
        "removeAllListeners": function () { },
        "removeListener": function () { },
        "resolution": {},
        "resource": {
          "_height": {},
          "_width": {},
          "bind": function () { },
          "constructor": {
            "crossOrigin": function () { },
            "test": function () { }
          },
          "destroy": function () { },
          "destroyed": {},
          "dispose": function () { },
          "internal": {},
          "load": function () { },
          "onError": {
            "_aliasCount": {},
            "_name": {},
            "add": function () { },
            "contains": function () { },
            "destroy": function () { },
            "dispatch": function () { },
            "emit": function () { },
            "ensureNonAliasedItems": function () { },
            "items": {},
            "remove": function () { },
            "removeAll": function () { },
            "run": function () { }
          },
          "onResize": {
            "_aliasCount": {},
            "_name": {},
            "add": function () { },
            "contains": function () { },
            "destroy": function () { },
            "dispatch": function () { },
            "emit": function () { },
            "ensureNonAliasedItems": function () { },
            "items": {},
            "remove": function () { },
            "removeAll": function () { },
            "run": function () { }
          },
          "onUpdate": {
            "_aliasCount": {},
            "_name": {},
            "add": function () { },
            "contains": function () { },
            "destroy": function () { },
            "dispatch": function () { },
            "emit": function () { },
            "ensureNonAliasedItems": function () { },
            "items": {},
            "remove": function () { },
            "removeAll": function () { },
            "run": function () { }
          },
          "resize": function () { },
          "source": {},
          "style": function () { },
          "unbind": function () { },
          "update": function () { },
          "upload": function () { }
        },
        "scaleMode": {},
        "setRealSize": function () { },
        "setResolution": function () { },
        "setResource": function () { },
        "setSize": function () { },
        "setStyle": function () { },
        "target": {},
        "textureCacheIds": {},
        "touched": {},
        "type": {},
        "uid": {},
        "update": function () { },
        "valid": {},
        "width": {},
        "wrapMode": {}
      },
      "clone": function () { },
      "constructor": {
        "EMPTY": {
          "_events": {},
          "_eventsCount": {},
          "_frame": {
            "ceil": function () { },
            "clone": function () { },
            "contains": function () { },
            "copy": function () { },
            "copyFrom": function () { },
            "copyTo": function () { },
            "enlarge": function () { },
            "fit": function () { },
            "height": {},
            "pad": function () { },
            "type": {},
            "width": {},
            "x": {},
            "y": {}
          },
          "_rotate": {},
          "_updateID": {},
          "_uvs": {
            "set": function () { },
            "uvsFloat32": {
              "0": {},
              "1": {},
              "2": {},
              "3": {},
              "4": {},
              "5": {},
              "6": {},
              "7": {}
            },
            "x0": {},
            "x1": {},
            "x2": {},
            "x3": {},
            "y0": {},
            "y1": {},
            "y2": {},
            "y3": {}
          },
          "addListener": function () { },
          "baseTexture": {
            "_batchEnabled": {},
            "_events": {
              "loaded": {
                "context": {},
                "fn": function () { },
                "once": {}
              },
              "update": {
                "context": {},
                "fn": function () { },
                "once": {}
              }
            },
            "_eventsCount": {},
            "_glTextures": {},
            "_refreshPOT": function () { },
            "addListener": function () { },
            "anisotropicLevel": {},
            "cacheId": {},
            "constructor": {
              "EventEmitter": {
                "EventEmitter": function () { },
                "prefixed": {}
              },
              "_globalBatch": {},
              "addToCache": function () { },
              "from": function () { },
              "fromBuffer": function () { },
              "fromCanvas": function () { },
              "fromImage": function () { },
              "fromSVG": function () { },
              "prefixed": {},
              "removeFromCache": function () { }
            },
            "destroy": function () { },
            "destroyed": {},
            "dirtyId": {},
            "dirtyStyleId": {},
            "dispose": function () { },
            "emit": function () { },
            "eventNames": function () { },
            "format": {},
            "height": {},
            "isPowerOfTwo": {},
            "listenerCount": function () { },
            "listeners": function () { },
            "loadSource": function () { },
            "mipmap": {},
            "off": function () { },
            "on": function () { },
            "onError": function () { },
            "once": function () { },
            "premultiplyAlpha": {},
            "removeAllListeners": function () { },
            "removeListener": function () { },
            "resolution": {},
            "resource": {},
            "scaleMode": {},
            "setRealSize": function () { },
            "setResolution": function () { },
            "setResource": function () { },
            "setSize": function () { },
            "setStyle": function () { },
            "target": {},
            "textureCacheIds": {},
            "touched": {},
            "type": {},
            "uid": {},
            "update": function () { },
            "valid": {},
            "width": {},
            "wrapMode": {}
          },
          "clone": function () { },
          "constructor": function () { },
          "defaultAnchor": {
            "clone": function () { },
            "copy": function () { },
            "copyFrom": function () { },
            "copyTo": function () { },
            "equals": function () { },
            "set": function () { },
            "x": {},
            "y": {}
          },
          "destroy": function () { },
          "emit": function () { },
          "eventNames": function () { },
          "listenerCount": function () { },
          "listeners": function () { },
          "noFrame": {},
          "off": function () { },
          "on": function () { },
          "onBaseTextureUpdated": function () { },
          "once": function () { },
          "orig": {
            "ceil": function () { },
            "clone": function () { },
            "contains": function () { },
            "copy": function () { },
            "copyFrom": function () { },
            "copyTo": function () { },
            "enlarge": function () { },
            "fit": function () { },
            "height": {},
            "pad": function () { },
            "type": {},
            "width": {},
            "x": {},
            "y": {}
          },
          "removeAllListeners": function () { },
          "removeListener": function () { },
          "requiresUpdate": {},
          "textureCacheIds": {},
          "trim": {},
          "update": function () { },
          "updateUvs": function () { },
          "uvMatrix": {},
          "valid": {}
        },
        "EventEmitter": {
          "EventEmitter": function () { },
          "prefixed": {}
        },
        "WHITE": {},
        "addToCache": function () { },
        "from": function () { },
        "fromBuffer": function () { },
        "fromCanvas": function () { },
        "fromFrame": function () { },
        "fromImage": function () { },
        "fromLoader": function () { },
        "fromSVG": function () { },
        "fromVideo": function () { },
        "prefixed": {},
        "removeFromCache": function () { }
      },
      "defaultAnchor": {
        "clone": function () { },
        "copy": function () { },
        "copyFrom": function () { },
        "copyTo": function () { },
        "equals": function () { },
        "set": function () { },
        "x": {},
        "y": {}
      },
      "destroy": function () { },
      "emit": function () { },
      "eventNames": function () { },
      "listenerCount": function () { },
      "listeners": function () { },
      "noFrame": {},
      "off": function () { },
      "on": function () { },
      "onBaseTextureUpdated": function () { },
      "once": function () { },
      "orig": {
        "ceil": function () { },
        "clone": function () { },
        "contains": function () { },
        "copy": function () { },
        "copyFrom": function () { },
        "copyTo": function () { },
        "enlarge": function () { },
        "fit": function () { },
        "height": {},
        "pad": function () { },
        "type": {},
        "width": {},
        "x": {},
        "y": {}
      },
      "removeAllListeners": function () { },
      "removeListener": function () { },
      "requiresUpdate": {},
      "textureCacheIds": {},
      "trim": {},
      "update": function () { },
      "updateUvs": function () { },
      "uvMatrix": {},
      "valid": {}
    },
    "addToCache": function () { },
    "create": function () { },
    "from": function () { },
    "fromBuffer": function () { },
    "fromCanvas": function () { },
    "fromFrame": function () { },
    "fromImage": function () { },
    "fromLoader": function () { },
    "fromSVG": function () { },
    "fromVideo": function () { },
    "prefixed": {},
    "removeFromCache": function () { }
  },
  "RenderTexturePool": {
    "SCREEN_KEY": {}
  },
  "Renderer": {
    "EventEmitter": {
      "EventEmitter": function () { },
      "prefixed": {}
    },
    "__plugins": {
      "accessibility": function () { },
      "batch": function () { },
      "extract": {
        "arrayPostDivide": function () { }
      },
      "interaction": {
        "EventEmitter": {
          "EventEmitter": function () { },
          "prefixed": {}
        },
        "prefixed": {}
      },
      "particle": function () { },
      "prepare": function () { },
      "tilingSprite": function () { }
    },
    "create": function () { },
    "prefixed": {},
    "registerPlugin": function () { }
  },
  "RopeGeometry": {
    "merge": function () { }
  },
  "RoundedRectangle": function () { },
  "Runner": function () { },
  "SCALE_MODES": {
    "LINEAR": {},
    "NEAREST": {}
  },
  "SHAPES": {
    "CIRC": {},
    "ELIP": {},
    "POLY": {},
    "RECT": {},
    "RREC": {}
  },
  "Shader": {
    "from": function () { }
  },
  "SimpleMesh": {
    "BATCHABLE_SIZE": {},
    "EventEmitter": {
      "EventEmitter": function () { },
      "prefixed": {}
    },
    "mixin": function () { },
    "prefixed": {}
  },
  "SimplePlane": {
    "BATCHABLE_SIZE": {},
    "EventEmitter": {
      "EventEmitter": function () { },
      "prefixed": {}
    },
    "mixin": function () { },
    "prefixed": {}
  },
  "SimpleRope": {
    "BATCHABLE_SIZE": {},
    "EventEmitter": {
      "EventEmitter": function () { },
      "prefixed": {}
    },
    "mixin": function () { },
    "prefixed": {}
  },
  "Sprite": {
    "EventEmitter": {
      "EventEmitter": function () { },
      "prefixed": {}
    },
    "from": function () { },
    "fromCanvas": function () { },
    "fromFrame": function () { },
    "fromImage": function () { },
    "fromSVG": function () { },
    "fromVideo": function () { },
    "mixin": function () { },
    "prefixed": {}
  },
  "SpriteMaskFilter": {
    "SOURCE_KEY_MAP": {},
    "from": function () { }
  },
  "Spritesheet": function () { },
  "SpritesheetLoader": {
    "getResourcePath": function () { },
    "use": function () { }
  },
  "State": {
    "for2d": function () { }
  },
  "System": function () { },
  "TARGETS": {
    "TEXTURE_2D": {},
    "TEXTURE_2D_ARRAY": {},
    "TEXTURE_CUBE_MAP": {},
    "TEXTURE_CUBE_MAP_NEGATIVE_X": {},
    "TEXTURE_CUBE_MAP_NEGATIVE_Y": {},
    "TEXTURE_CUBE_MAP_NEGATIVE_Z": {},
    "TEXTURE_CUBE_MAP_POSITIVE_X": {},
    "TEXTURE_CUBE_MAP_POSITIVE_Y": {},
    "TEXTURE_CUBE_MAP_POSITIVE_Z": {}
  },
  "TEXT_GRADIENT": {
    "LINEAR_HORIZONTAL": {},
    "LINEAR_VERTICAL": {}
  },
  "TYPES": {
    "FLOAT": {},
    "HALF_FLOAT": {},
    "UNSIGNED_BYTE": {},
    "UNSIGNED_SHORT": {},
    "UNSIGNED_SHORT_4_4_4_4": {},
    "UNSIGNED_SHORT_5_5_5_1": {},
    "UNSIGNED_SHORT_5_6_5": {}
  },
  "Text": {
    "EventEmitter": {
      "EventEmitter": function () { },
      "prefixed": {}
    },
    "from": function () { },
    "fromCanvas": function () { },
    "fromFrame": function () { },
    "fromImage": function () { },
    "fromSVG": function () { },
    "fromVideo": function () { },
    "mixin": function () { },
    "prefixed": {}
  },
  "TextMetrics": {
    "BASELINE_MULTIPLIER": {},
    "BASELINE_SYMBOL": {},
    "METRICS_STRING": {},
    "_breakingSpaces": {},
    "_canvas": {
      "addEventListener": function () { },
      "convertToBlob": function () { },
      "dispatchEvent": function () { },
      "getContext": function () { },
      "height": {},
      "removeEventListener": function () { },
      "transferToImageBitmap": function () { },
      "width": {}
    },
    "_context": {
      "arc": function () { },
      "arcTo": function () { },
      "beginPath": function () { },
      "bezierCurveTo": function () { },
      "canvas": {
        "addEventListener": function () { },
        "convertToBlob": function () { },
        "dispatchEvent": function () { },
        "getContext": function () { },
        "height": {},
        "removeEventListener": function () { },
        "transferToImageBitmap": function () { },
        "width": {}
      },
      "clearRect": function () { },
      "clip": function () { },
      "closePath": function () { },
      "createImageData": function () { },
      "createLinearGradient": function () { },
      "createPattern": function () { },
      "createRadialGradient": function () { },
      "direction": {},
      "drawImage": function () { },
      "ellipse": function () { },
      "fill": function () { },
      "fillRect": function () { },
      "fillStyle": {},
      "fillText": function () { },
      "filter": {},
      "font": {},
      "getImageData": function () { },
      "getLineDash": function () { },
      "globalAlpha": {},
      "globalCompositeOperation": {},
      "imageSmoothingEnabled": {},
      "imageSmoothingQuality": {},
      "isPointInPath": function () { },
      "isPointInStroke": function () { },
      "lineCap": {},
      "lineDashOffset": {},
      "lineJoin": {},
      "lineTo": function () { },
      "lineWidth": {},
      "measureText": function () { },
      "miterLimit": {},
      "moveTo": function () { },
      "putImageData": function () { },
      "quadraticCurveTo": function () { },
      "rect": function () { },
      "resetTransform": function () { },
      "restore": function () { },
      "rotate": function () { },
      "save": function () { },
      "scale": function () { },
      "setLineDash": function () { },
      "setTransform": function () { },
      "shadowBlur": {},
      "shadowColor": {},
      "shadowOffsetX": {},
      "shadowOffsetY": {},
      "stroke": function () { },
      "strokeRect": function () { },
      "strokeStyle": {},
      "strokeText": function () { },
      "textAlign": {},
      "textBaseline": {},
      "transform": function () { },
      "translate": function () { }
    },
    "_fonts": {},
    "_newlines": {},
    "addLine": function () { },
    "canBreakChars": function () { },
    "canBreakWords": function () { },
    "clearMetrics": function () { },
    "collapseNewlines": function () { },
    "collapseSpaces": function () { },
    "getFromCache": function () { },
    "isBreakingSpace": function () { },
    "isNewline": function () { },
    "measureFont": function () { },
    "measureText": function () { },
    "tokenize": function () { },
    "trimRight": function () { },
    "wordWrap": function () { }
  },
  "TextStyle": function () { },
  "Texture": {
    "EMPTY": {
      "_events": {},
      "_eventsCount": {},
      "_frame": {
        "ceil": function () { },
        "clone": function () { },
        "contains": function () { },
        "copy": function () { },
        "copyFrom": function () { },
        "copyTo": function () { },
        "enlarge": function () { },
        "fit": function () { },
        "height": {},
        "pad": function () { },
        "type": {},
        "width": {},
        "x": {},
        "y": {}
      },
      "_rotate": {},
      "_updateID": {},
      "_uvs": {
        "set": function () { },
        "uvsFloat32": {
          "0": {},
          "1": {},
          "2": {},
          "3": {},
          "4": {},
          "5": {},
          "6": {},
          "7": {}
        },
        "x0": {},
        "x1": {},
        "x2": {},
        "x3": {},
        "y0": {},
        "y1": {},
        "y2": {},
        "y3": {}
      },
      "addListener": function () { },
      "baseTexture": {
        "_batchEnabled": {},
        "_events": {
          "loaded": {
            "context": {},
            "fn": function () { },
            "once": {}
          },
          "update": {
            "context": {},
            "fn": function () { },
            "once": {}
          }
        },
        "_eventsCount": {},
        "_glTextures": {},
        "_refreshPOT": function () { },
        "addListener": function () { },
        "anisotropicLevel": {},
        "cacheId": {},
        "constructor": {
          "EventEmitter": {
            "EventEmitter": function () { },
            "prefixed": {}
          },
          "_globalBatch": {},
          "addToCache": function () { },
          "from": function () { },
          "fromBuffer": function () { },
          "fromCanvas": function () { },
          "fromImage": function () { },
          "fromSVG": function () { },
          "prefixed": {},
          "removeFromCache": function () { }
        },
        "destroy": function () { },
        "destroyed": {},
        "dirtyId": {},
        "dirtyStyleId": {},
        "dispose": function () { },
        "emit": function () { },
        "eventNames": function () { },
        "format": {},
        "height": {},
        "isPowerOfTwo": {},
        "listenerCount": function () { },
        "listeners": function () { },
        "loadSource": function () { },
        "mipmap": {},
        "off": function () { },
        "on": function () { },
        "onError": function () { },
        "once": function () { },
        "premultiplyAlpha": {},
        "removeAllListeners": function () { },
        "removeListener": function () { },
        "resolution": {},
        "resource": {},
        "scaleMode": {},
        "setRealSize": function () { },
        "setResolution": function () { },
        "setResource": function () { },
        "setSize": function () { },
        "setStyle": function () { },
        "target": {},
        "textureCacheIds": {},
        "touched": {},
        "type": {},
        "uid": {},
        "update": function () { },
        "valid": {},
        "width": {},
        "wrapMode": {}
      },
      "clone": function () { },
      "constructor": function () { },
      "defaultAnchor": {
        "clone": function () { },
        "copy": function () { },
        "copyFrom": function () { },
        "copyTo": function () { },
        "equals": function () { },
        "set": function () { },
        "x": {},
        "y": {}
      },
      "destroy": function () { },
      "emit": function () { },
      "eventNames": function () { },
      "listenerCount": function () { },
      "listeners": function () { },
      "noFrame": {},
      "off": function () { },
      "on": function () { },
      "onBaseTextureUpdated": function () { },
      "once": function () { },
      "orig": {
        "ceil": function () { },
        "clone": function () { },
        "contains": function () { },
        "copy": function () { },
        "copyFrom": function () { },
        "copyTo": function () { },
        "enlarge": function () { },
        "fit": function () { },
        "height": {},
        "pad": function () { },
        "type": {},
        "width": {},
        "x": {},
        "y": {}
      },
      "removeAllListeners": function () { },
      "removeListener": function () { },
      "requiresUpdate": {},
      "textureCacheIds": {},
      "trim": {},
      "update": function () { },
      "updateUvs": function () { },
      "uvMatrix": {},
      "valid": {}
    },
    "EventEmitter": {
      "EventEmitter": function () { },
      "prefixed": {}
    },
    "WHITE": {
      "_events": {},
      "_eventsCount": {},
      "_frame": {
        "ceil": function () { },
        "clone": function () { },
        "contains": function () { },
        "copy": function () { },
        "copyFrom": function () { },
        "copyTo": function () { },
        "enlarge": function () { },
        "fit": function () { },
        "height": {},
        "pad": function () { },
        "type": {},
        "width": {},
        "x": {},
        "y": {}
      },
      "_rotate": {},
      "_updateID": {},
      "_uvs": {
        "set": function () { },
        "uvsFloat32": {
          "0": {},
          "1": {},
          "2": {},
          "3": {},
          "4": {},
          "5": {},
          "6": {},
          "7": {}
        },
        "x0": {},
        "x1": {},
        "x2": {},
        "x3": {},
        "y0": {},
        "y1": {},
        "y2": {},
        "y3": {}
      },
      "addListener": function () { },
      "baseTexture": {
        "_batchEnabled": {},
        "_events": {
          "update": {
            "context": {},
            "fn": function () { },
            "once": {}
          }
        },
        "_eventsCount": {},
        "_glTextures": {},
        "_refreshPOT": function () { },
        "addListener": function () { },
        "anisotropicLevel": {},
        "cacheId": {},
        "constructor": {
          "EventEmitter": {
            "EventEmitter": function () { },
            "prefixed": {}
          },
          "_globalBatch": {},
          "addToCache": function () { },
          "from": function () { },
          "fromBuffer": function () { },
          "fromCanvas": function () { },
          "fromImage": function () { },
          "fromSVG": function () { },
          "prefixed": {},
          "removeFromCache": function () { }
        },
        "destroy": function () { },
        "destroyed": {},
        "dirtyId": {},
        "dirtyStyleId": {},
        "dispose": function () { },
        "emit": function () { },
        "eventNames": function () { },
        "format": {},
        "height": {},
        "isPowerOfTwo": {},
        "listenerCount": function () { },
        "listeners": function () { },
        "loadSource": function () { },
        "mipmap": {},
        "off": function () { },
        "on": function () { },
        "onError": function () { },
        "once": function () { },
        "premultiplyAlpha": {},
        "removeAllListeners": function () { },
        "removeListener": function () { },
        "resolution": {},
        "resource": {
          "_height": {},
          "_width": {},
          "bind": function () { },
          "constructor": {
            "crossOrigin": function () { },
            "test": function () { }
          },
          "destroy": function () { },
          "destroyed": {},
          "dispose": function () { },
          "internal": {},
          "load": function () { },
          "onError": {
            "_aliasCount": {},
            "_name": {},
            "add": function () { },
            "contains": function () { },
            "destroy": function () { },
            "dispatch": function () { },
            "emit": function () { },
            "ensureNonAliasedItems": function () { },
            "items": {},
            "remove": function () { },
            "removeAll": function () { },
            "run": function () { }
          },
          "onResize": {
            "_aliasCount": {},
            "_name": {},
            "add": function () { },
            "contains": function () { },
            "destroy": function () { },
            "dispatch": function () { },
            "emit": function () { },
            "ensureNonAliasedItems": function () { },
            "items": {},
            "remove": function () { },
            "removeAll": function () { },
            "run": function () { }
          },
          "onUpdate": {
            "_aliasCount": {},
            "_name": {},
            "add": function () { },
            "contains": function () { },
            "destroy": function () { },
            "dispatch": function () { },
            "emit": function () { },
            "ensureNonAliasedItems": function () { },
            "items": {},
            "remove": function () { },
            "removeAll": function () { },
            "run": function () { }
          },
          "resize": function () { },
          "source": {},
          "style": function () { },
          "unbind": function () { },
          "update": function () { },
          "upload": function () { }
        },
        "scaleMode": {},
        "setRealSize": function () { },
        "setResolution": function () { },
        "setResource": function () { },
        "setSize": function () { },
        "setStyle": function () { },
        "target": {},
        "textureCacheIds": {},
        "touched": {},
        "type": {},
        "uid": {},
        "update": function () { },
        "valid": {},
        "width": {},
        "wrapMode": {}
      },
      "clone": function () { },
      "constructor": function () { },
      "defaultAnchor": {
        "clone": function () { },
        "copy": function () { },
        "copyFrom": function () { },
        "copyTo": function () { },
        "equals": function () { },
        "set": function () { },
        "x": {},
        "y": {}
      },
      "destroy": function () { },
      "emit": function () { },
      "eventNames": function () { },
      "listenerCount": function () { },
      "listeners": function () { },
      "noFrame": {},
      "off": function () { },
      "on": function () { },
      "onBaseTextureUpdated": function () { },
      "once": function () { },
      "orig": {
        "ceil": function () { },
        "clone": function () { },
        "contains": function () { },
        "copy": function () { },
        "copyFrom": function () { },
        "copyTo": function () { },
        "enlarge": function () { },
        "fit": function () { },
        "height": {},
        "pad": function () { },
        "type": {},
        "width": {},
        "x": {},
        "y": {}
      },
      "removeAllListeners": function () { },
      "removeListener": function () { },
      "requiresUpdate": {},
      "textureCacheIds": {},
      "trim": {},
      "update": function () { },
      "updateUvs": function () { },
      "uvMatrix": {},
      "valid": {}
    },
    "addToCache": function () { },
    "from": function () { },
    "fromBuffer": function () { },
    "fromCanvas": function () { },
    "fromFrame": function () { },
    "fromImage": function () { },
    "fromLoader": function () { },
    "fromSVG": function () { },
    "fromVideo": function () { },
    "prefixed": {},
    "removeFromCache": function () { }
  },
  "TextureLoader": {
    "use": function () { }
  },
  "TextureMatrix": function () { },
  "TextureUvs": function () { },
  "Ticker": function () { },
  "TickerPlugin": {
    "destroy": function () { },
    "init": function () { }
  },
  "TilingSprite": {
    "EventEmitter": {
      "EventEmitter": function () { },
      "prefixed": {}
    },
    "from": function () { },
    "fromCanvas": function () { },
    "fromFrame": function () { },
    "fromImage": function () { },
    "fromSVG": function () { },
    "fromVideo": function () { },
    "mixin": function () { },
    "prefixed": {}
  },
  "TilingSpriteRenderer": function () { },
  "Transform": {
    "IDENTITY": {
      "_currentLocalID": {},
      "_cx": {},
      "_cy": {},
      "_localID": {},
      "_parentID": {},
      "_rotation": {},
      "_sx": {},
      "_sy": {},
      "_worldID": {},
      "localTransform": {
        "a": {},
        "append": function () { },
        "apply": function () { },
        "applyInverse": function () { },
        "array": {},
        "b": {},
        "c": {},
        "clone": function () { },
        "copy": function () { },
        "copyFrom": function () { },
        "copyTo": function () { },
        "d": {},
        "decompose": function () { },
        "fromArray": function () { },
        "identity": function () { },
        "invert": function () { },
        "prepend": function () { },
        "rotate": function () { },
        "scale": function () { },
        "set": function () { },
        "setTransform": function () { },
        "toArray": function () { },
        "translate": function () { },
        "tx": {},
        "ty": {}
      },
      "onChange": function () { },
      "pivot": {
        "_x": {},
        "_y": {},
        "cb": function () { },
        "clone": function () { },
        "copy": function () { },
        "copyFrom": function () { },
        "copyTo": function () { },
        "equals": function () { },
        "scope": {},
        "set": function () { }
      },
      "position": {
        "_x": {},
        "_y": {},
        "cb": function () { },
        "clone": function () { },
        "copy": function () { },
        "copyFrom": function () { },
        "copyTo": function () { },
        "equals": function () { },
        "scope": {},
        "set": function () { }
      },
      "scale": {
        "_x": {},
        "_y": {},
        "cb": function () { },
        "clone": function () { },
        "copy": function () { },
        "copyFrom": function () { },
        "copyTo": function () { },
        "equals": function () { },
        "scope": {},
        "set": function () { }
      },
      "setFromMatrix": function () { },
      "skew": {
        "_x": {},
        "_y": {},
        "cb": function () { },
        "clone": function () { },
        "copy": function () { },
        "copyFrom": function () { },
        "copyTo": function () { },
        "equals": function () { },
        "scope": {},
        "set": function () { }
      },
      "updateLocalTransform": function () { },
      "updateSkew": function () { },
      "updateTransform": function () { },
      "worldTransform": {
        "a": {},
        "append": function () { },
        "apply": function () { },
        "applyInverse": function () { },
        "array": {},
        "b": {},
        "c": {},
        "clone": function () { },
        "copy": function () { },
        "copyFrom": function () { },
        "copyTo": function () { },
        "d": {},
        "decompose": function () { },
        "fromArray": function () { },
        "identity": function () { },
        "invert": function () { },
        "prepend": function () { },
        "rotate": function () { },
        "scale": function () { },
        "set": function () { },
        "setTransform": function () { },
        "toArray": function () { },
        "translate": function () { },
        "tx": {},
        "ty": {}
      }
    }
  },
  "UPDATE_PRIORITY": {
    "HIGH": {},
    "INTERACTION": {},
    "LOW": {},
    "NORMAL": {},
    "UTILITY": {}
  },
  "UniformGroup": {
    "from": function () { }
  },
  "VERSION": {},
  "ViewableBuffer": {
    "sizeOf": function () { }
  },
  "WRAP_MODES": {
    "CLAMP": {},
    "MIRRORED_REPEAT": {},
    "REPEAT": {}
  },
  "accessibility": {
    "AccessibilityManager": function () { },
    "accessibleTarget": {
      "_accessibleActive": {},
      "_accessibleDiv": {},
      "accessible": {},
      "accessibleHint": {},
      "accessibleTitle": {},
      "tabIndex": {}
    }
  },
  "autoDetectRenderer": function () { },
  "checkMaxIfStatementsInShader": function () { },
  "defaultFilterVertex": {},
  "defaultVertex": {},
  "extract": {
    "Extract": {
      "arrayPostDivide": function () { }
    }
  },
  "extras": {},
  "filters": {
    "AlphaFilter": {
      "SOURCE_KEY_MAP": {},
      "from": function () { }
    },
    "BlurFilter": {
      "SOURCE_KEY_MAP": {},
      "from": function () { }
    },
    "BlurFilterPass": {
      "SOURCE_KEY_MAP": {},
      "from": function () { }
    },
    "BlurXFilter": {
      "SOURCE_KEY_MAP": {},
      "from": function () { }
    },
    "BlurYFilter": {
      "SOURCE_KEY_MAP": {},
      "from": function () { }
    },
    "ColorMatrixFilter": {
      "SOURCE_KEY_MAP": {},
      "from": function () { }
    },
    "DisplacementFilter": {
      "SOURCE_KEY_MAP": {},
      "from": function () { }
    },
    "FXAAFilter": {
      "SOURCE_KEY_MAP": {},
      "from": function () { }
    },
    "NoiseFilter": {
      "SOURCE_KEY_MAP": {},
      "from": function () { }
    }
  },
  "interaction": {
    "InteractionData": function () { },
    "InteractionEvent": function () { },
    "InteractionManager": {
      "EventEmitter": {
        "EventEmitter": function () { },
        "prefixed": {}
      },
      "prefixed": {}
    },
    "InteractionTrackingData": {
      "FLAGS": {
        "LEFT_DOWN": {},
        "NONE": {},
        "OVER": {},
        "RIGHT_DOWN": {}
      }
    },
    "interactiveTarget": {
      "_trackedPointers": {},
      "buttonMode": {},
      "cursor": {},
      "hitArea": {},
      "interactive": {},
      "interactiveChildren": {},
      "trackedPointers": {}
    }
  },
  "isMobile": {
    "amazon": {
      "device": {},
      "phone": {},
      "tablet": {}
    },
    "android": {
      "device": {},
      "phone": {},
      "tablet": {}
    },
    "any": {},
    "apple": {
      "device": {},
      "ipod": {},
      "phone": {},
      "tablet": {}
    },
    "isMobile": function () { },
    "other": {
      "blackberry": {},
      "blackberry10": {},
      "chrome": {},
      "device": {},
      "firefox": {},
      "opera": {}
    },
    "phone": {},
    "tablet": {},
    "windows": {
      "device": {},
      "phone": {},
      "tablet": {}
    }
  },
  "loaders": {},
  "mesh": {},
  "particles": {},
  "prepare": {
    "BasePrepare": function () { },
    "CountLimiter": function () { },
    "Prepare": function () { },
    "TimeLimiter": function () { }
  },
  "resources": {
    "ArrayResource": function () { },
    "BaseImageResource": {
      "crossOrigin": function () { }
    },
    "BufferResource": {
      "test": function () { }
    },
    "CanvasResource": {
      "crossOrigin": function () { },
      "test": function () { }
    },
    "CubeResource": {
      "SIDES": {}
    },
    "INSTALLED": {},
    "ImageBitmapResource": {
      "crossOrigin": function () { },
      "test": function () { }
    },
    "ImageResource": {
      "crossOrigin": function () { }
    },
    "Resource": function () { },
    "SVGResource": {
      "SVG_SIZE": {},
      "crossOrigin": function () { },
      "getSize": function () { },
      "test": function () { }
    },
    "VideoResource": {
      "TYPES": {},
      "crossOrigin": function () { },
      "test": function () { }
    },
    "autoDetectResource": function () { }
  },
  "settings": {
    "ANISOTROPIC_LEVEL": {},
    "CAN_UPLOAD_SAME_BUFFER": {},
    "CREATE_IMAGE_BITMAP": {},
    "FAIL_IF_MAJOR_PERFORMANCE_CAVEAT": {},
    "FILTER_RESOLUTION": {},
    "GC_MAX_CHECK_COUNT": {},
    "GC_MAX_IDLE": {},
    "GC_MODE": {},
    "MIPMAP_TEXTURES": {},
    "PRECISION_FRAGMENT": {},
    "PRECISION_VERTEX": {},
    "PREFER_ENV": {},
    "RENDER_OPTIONS": {
      "antialias": {},
      "autoDensity": {},
      "backgroundColor": {},
      "clearBeforeRender": {},
      "forceFXAA": {},
      "height": {},
      "legacy": {},
      "preserveDrawingBuffer": {},
      "transparent": {},
      "view": {},
      "width": {}
    },
    "RESOLUTION": {},
    "RETINA_PREFIX": {},
    "ROUND_PIXELS": {},
    "SCALE_MODE": {},
    "SORTABLE_CHILDREN": {},
    "SPRITE_BATCH_SIZE": {},
    "SPRITE_MAX_TEXTURES": {},
    "TARGET_FPMS": {},
    "UPLOADS_PER_FRAME": {},
    "WRAP_MODE": {}
  },
  "systems": {
    "BatchSystem": function () { },
    "ContextSystem": function () { },
    "FilterSystem": function () { },
    "FramebufferSystem": function () { },
    "GeometrySystem": function () { },
    "MaskSystem": function () { },
    "ProjectionSystem": function () { },
    "RenderTextureSystem": function () { },
    "ShaderSystem": function () { },
    "StateSystem": {
      "checkBlendMode": function () { },
      "checkPolygonOffset": function () { }
    },
    "StencilSystem": function () { },
    "TextureGCSystem": function () { },
    "TextureSystem": function () { }
  },
  "ticker": {},
  "useDeprecated": function () { },
  "utils": {
    "BaseTextureCache": {},
    "CanvasRenderTarget": function () { },
    "DATA_URI": {},
    "EventEmitter": {
      "EventEmitter": function () { },
      "prefixed": {}
    },
    "ProgramCache": {},
    "TextureCache": {},
    "clearTextureCache": function () { },
    "correctBlendMode": function () { },
    "createIndicesForQuads": function () { },
    "decomposeDataUri": function () { },
    "deprecation": function () { },
    "destroyTextureCache": function () { },
    "determineCrossOrigin": function () { },
    "earcut": {
      "default": function () { },
      "deviation": function () { },
      "flatten": function () { }
    },
    "getResolutionOfUrl": function () { },
    "hex2rgb": function () { },
    "hex2string": function () { },
    "isMobile": {
      "amazon": {
        "device": {},
        "phone": {},
        "tablet": {}
      },
      "android": {
        "device": {},
        "phone": {},
        "tablet": {}
      },
      "any": {},
      "apple": {
        "device": {},
        "ipod": {},
        "phone": {},
        "tablet": {}
      },
      "isMobile": function () { },
      "other": {
        "blackberry": {},
        "blackberry10": {},
        "chrome": {},
        "device": {},
        "firefox": {},
        "opera": {}
      },
      "phone": {},
      "tablet": {},
      "windows": {
        "device": {},
        "phone": {},
        "tablet": {}
      }
    },
    "isPow2": function () { },
    "isWebGLSupported": function () { },
    "log2": function () { },
    "mixins": {
      "delayMixin": function () { },
      "mixin": function () { },
      "performMixins": function () { }
    },
    "nextPow2": function () { },
    "premultiplyBlendMode": {},
    "premultiplyRgba": function () { },
    "premultiplyTint": function () { },
    "premultiplyTintToRgba": function () { },
    "removeItems": function () { },
    "rgb2hex": function () { },
    "sayHello": function () { },
    "sign": function () { },
    "skipHello": function () { },
    "string2hex": function () { },
    "trimCanvas": function () { },
    "uid": function () { },
    "url": {
      "Url": function () { },
      "format": function () { },
      "parse": function () { },
      "resolve": function () { },
      "resolveObject": function () { }
    }
  }
};
PIXI.AbstractBatchRenderer.prototype = {
  "constructor": function () { },
  "contextChange": function () { },
  "destroy": function () { },
  "flush": function () { },
  "getAttributeBuffer": function () { },
  "getIndexBuffer": function () { },
  "onPrerender": function () { },
  "packInterleavedGeometry": function () { },
  "render": function () { },
  "start": function () { },
  "stop": function () { }
};
PIXI.AbstractRenderer.prototype = {
  "addListener": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "generateTexture": function () { },
  "initPlugins": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { },
  "resize": function () { }
};
PIXI.AbstractRenderer.EventEmitter.prototype = {
  "addListener": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { }
};
PIXI.AnimatedSprite.prototype = {
  "_accessibleActive": function () { },
  "_accessibleDiv": function () { },
  "_cacheAsBitmap": function () { },
  "_cacheAsBitmapDestroy": function () { },
  "_cacheData": function () { },
  "_calculateBounds": function () { },
  "_calculateCachedBounds": function () { },
  "_destroyCachedDisplayObject": function () { },
  "_getCachedLocalBounds": function () { },
  "_initCachedDisplayObject": function () { },
  "_initCachedDisplayObjectCanvas": function () { },
  "_onAnchorUpdate": function () { },
  "_onTextureUpdate": function () { },
  "_recursivePostUpdateTransform": function () { },
  "_render": function () { },
  "_renderCached": function () { },
  "_renderCachedCanvas": function () { },
  "_renderWebGL": function () { },
  "_trackedPointers": function () { },
  "accessible": function () { },
  "accessibleHint": function () { },
  "accessibleTitle": function () { },
  "addChild": function () { },
  "addChildAt": function () { },
  "addListener": function () { },
  "buttonMode": function () { },
  "calculateBounds": function () { },
  "calculateTrimmedVertices": function () { },
  "calculateVertices": function () { },
  "constructor": function () { },
  "containerUpdateTransform": function () { },
  "containsPoint": function () { },
  "cursor": function () { },
  "destroy": function () { },
  "displayObjectUpdateTransform": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "getBounds": function () { },
  "getChildAt": function () { },
  "getChildByName": function () { },
  "getChildIndex": function () { },
  "getGlobalPosition": function () { },
  "getLocalBounds": function () { },
  "gotoAndPlay": function () { },
  "gotoAndStop": function () { },
  "hitArea": function () { },
  "interactive": function () { },
  "interactiveChildren": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "name": function () { },
  "off": function () { },
  "on": function () { },
  "onChildrenChange": function () { },
  "once": function () { },
  "play": function () { },
  "removeAllListeners": function () { },
  "removeChild": function () { },
  "removeChildAt": function () { },
  "removeChildren": function () { },
  "removeListener": function () { },
  "render": function () { },
  "renderAdvanced": function () { },
  "renderAdvancedWebGL": function () { },
  "renderWebGL": function () { },
  "setChildIndex": function () { },
  "setParent": function () { },
  "setTransform": function () { },
  "sortChildren": function () { },
  "stop": function () { },
  "swapChildren": function () { },
  "tabIndex": function () { },
  "toGlobal": function () { },
  "toLocal": function () { },
  "trackedPointers": function () { },
  "update": function () { },
  "updateTexture": function () { },
  "updateTransform": function () { }
};
PIXI.AnimatedSprite.EventEmitter.prototype = {
  "addListener": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { }
};
PIXI.Application.prototype = {
  "destroy": function () { },
  "render": function () { }
};
PIXI.Attribute.prototype = {
  "destroy": function () { }
};
PIXI.BaseRenderTexture.prototype = {
  "_refreshPOT": function () { },
  "addListener": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "dispose": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "loadSource": function () { },
  "off": function () { },
  "on": function () { },
  "onError": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { },
  "resize": function () { },
  "setRealSize": function () { },
  "setResolution": function () { },
  "setResource": function () { },
  "setSize": function () { },
  "setStyle": function () { },
  "update": function () { }
};
PIXI.BaseRenderTexture.EventEmitter.prototype = {
  "addListener": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { }
};
PIXI.BaseTexture.prototype = {
  "_refreshPOT": function () { },
  "addListener": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "dispose": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "loadSource": function () { },
  "off": function () { },
  "on": function () { },
  "onError": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { },
  "setRealSize": function () { },
  "setResolution": function () { },
  "setResource": function () { },
  "setSize": function () { },
  "setStyle": function () { },
  "update": function () { }
};
PIXI.BaseTexture.EventEmitter.prototype = {
  "addListener": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { }
};
PIXI.BatchGeometry.prototype = {
  "addAttribute": function () { },
  "addIndex": function () { },
  "clone": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "dispose": function () { },
  "getAttribute": function () { },
  "getBuffer": function () { },
  "getIndex": function () { },
  "getSize": function () { },
  "interleave": function () { }
};
PIXI.BatchRenderer.prototype = {
  "constructor": function () { },
  "contextChange": function () { },
  "destroy": function () { },
  "flush": function () { },
  "getAttributeBuffer": function () { },
  "getIndexBuffer": function () { },
  "onPrerender": function () { },
  "packInterleavedGeometry": function () { },
  "render": function () { },
  "start": function () { },
  "stop": function () { }
};
PIXI.BatchShaderGenerator.prototype = {
  "generateSampleSrc": function () { },
  "generateShader": function () { }
};
PIXI.BitmapText.prototype = {
  "_accessibleActive": function () { },
  "_accessibleDiv": function () { },
  "_cacheAsBitmap": function () { },
  "_cacheAsBitmapDestroy": function () { },
  "_cacheData": function () { },
  "_calculateBounds": function () { },
  "_calculateCachedBounds": function () { },
  "_destroyCachedDisplayObject": function () { },
  "_getCachedLocalBounds": function () { },
  "_initCachedDisplayObject": function () { },
  "_initCachedDisplayObjectCanvas": function () { },
  "_recursivePostUpdateTransform": function () { },
  "_render": function () { },
  "_renderCached": function () { },
  "_renderCachedCanvas": function () { },
  "_renderWebGL": function () { },
  "_trackedPointers": function () { },
  "accessible": function () { },
  "accessibleHint": function () { },
  "accessibleTitle": function () { },
  "addChild": function () { },
  "addChildAt": function () { },
  "addListener": function () { },
  "buttonMode": function () { },
  "calculateBounds": function () { },
  "constructor": function () { },
  "containerUpdateTransform": function () { },
  "cursor": function () { },
  "destroy": function () { },
  "displayObjectUpdateTransform": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "getBounds": function () { },
  "getChildAt": function () { },
  "getChildByName": function () { },
  "getChildIndex": function () { },
  "getGlobalPosition": function () { },
  "getLocalBounds": function () { },
  "hitArea": function () { },
  "interactive": function () { },
  "interactiveChildren": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "name": function () { },
  "off": function () { },
  "on": function () { },
  "onChildrenChange": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeChild": function () { },
  "removeChildAt": function () { },
  "removeChildren": function () { },
  "removeListener": function () { },
  "render": function () { },
  "renderAdvanced": function () { },
  "renderAdvancedWebGL": function () { },
  "renderWebGL": function () { },
  "setChildIndex": function () { },
  "setParent": function () { },
  "setTransform": function () { },
  "sortChildren": function () { },
  "swapChildren": function () { },
  "tabIndex": function () { },
  "toGlobal": function () { },
  "toLocal": function () { },
  "trackedPointers": function () { },
  "updateText": function () { },
  "updateTransform": function () { },
  "validate": function () { }
};
PIXI.BitmapText.EventEmitter.prototype = {
  "addListener": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { }
};
PIXI.Bounds.prototype = {
  "addBounds": function () { },
  "addBoundsArea": function () { },
  "addBoundsMask": function () { },
  "addFrame": function () { },
  "addPoint": function () { },
  "addQuad": function () { },
  "addVertexData": function () { },
  "addVertices": function () { },
  "clear": function () { },
  "getRectangle": function () { },
  "isEmpty": function () { }
};
PIXI.Buffer.prototype = {
  "destroy": function () { },
  "dispose": function () { },
  "update": function () { }
};
PIXI.Circle.prototype = {
  "clone": function () { },
  "contains": function () { },
  "getBounds": function () { }
};
PIXI.Container.prototype = {
  "_accessibleActive": function () { },
  "_accessibleDiv": function () { },
  "_cacheAsBitmap": function () { },
  "_cacheAsBitmapDestroy": function () { },
  "_cacheData": function () { },
  "_calculateBounds": function () { },
  "_calculateCachedBounds": function () { },
  "_destroyCachedDisplayObject": function () { },
  "_getCachedLocalBounds": function () { },
  "_initCachedDisplayObject": function () { },
  "_initCachedDisplayObjectCanvas": function () { },
  "_recursivePostUpdateTransform": function () { },
  "_render": function () { },
  "_renderCached": function () { },
  "_renderCachedCanvas": function () { },
  "_renderWebGL": function () { },
  "_trackedPointers": function () { },
  "accessible": function () { },
  "accessibleHint": function () { },
  "accessibleTitle": function () { },
  "addChild": function () { },
  "addChildAt": function () { },
  "addListener": function () { },
  "buttonMode": function () { },
  "calculateBounds": function () { },
  "constructor": function () { },
  "containerUpdateTransform": function () { },
  "cursor": function () { },
  "destroy": function () { },
  "displayObjectUpdateTransform": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "getBounds": function () { },
  "getChildAt": function () { },
  "getChildByName": function () { },
  "getChildIndex": function () { },
  "getGlobalPosition": function () { },
  "getLocalBounds": function () { },
  "hitArea": function () { },
  "interactive": function () { },
  "interactiveChildren": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "name": function () { },
  "off": function () { },
  "on": function () { },
  "onChildrenChange": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeChild": function () { },
  "removeChildAt": function () { },
  "removeChildren": function () { },
  "removeListener": function () { },
  "render": function () { },
  "renderAdvanced": function () { },
  "renderAdvancedWebGL": function () { },
  "renderWebGL": function () { },
  "setChildIndex": function () { },
  "setParent": function () { },
  "setTransform": function () { },
  "sortChildren": function () { },
  "swapChildren": function () { },
  "tabIndex": function () { },
  "toGlobal": function () { },
  "toLocal": function () { },
  "trackedPointers": function () { },
  "updateTransform": function () { }
};
PIXI.Container.EventEmitter.prototype = {
  "addListener": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { }
};
PIXI.CubeTexture.prototype = {
  "_refreshPOT": function () { },
  "addListener": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "dispose": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "loadSource": function () { },
  "off": function () { },
  "on": function () { },
  "onError": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { },
  "setRealSize": function () { },
  "setResolution": function () { },
  "setResource": function () { },
  "setSize": function () { },
  "setStyle": function () { },
  "update": function () { }
};
PIXI.CubeTexture.EventEmitter.prototype = {
  "addListener": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { }
};
PIXI.DisplayObject.prototype = {
  "_accessibleActive": function () { },
  "_accessibleDiv": function () { },
  "_cacheAsBitmap": function () { },
  "_cacheAsBitmapDestroy": function () { },
  "_cacheData": function () { },
  "_calculateCachedBounds": function () { },
  "_destroyCachedDisplayObject": function () { },
  "_getCachedLocalBounds": function () { },
  "_initCachedDisplayObject": function () { },
  "_initCachedDisplayObjectCanvas": function () { },
  "_recursivePostUpdateTransform": function () { },
  "_renderCached": function () { },
  "_renderCachedCanvas": function () { },
  "_trackedPointers": function () { },
  "accessible": function () { },
  "accessibleHint": function () { },
  "accessibleTitle": function () { },
  "addListener": function () { },
  "buttonMode": function () { },
  "constructor": function () { },
  "cursor": function () { },
  "destroy": function () { },
  "displayObjectUpdateTransform": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "getBounds": function () { },
  "getGlobalPosition": function () { },
  "getLocalBounds": function () { },
  "hitArea": function () { },
  "interactive": function () { },
  "interactiveChildren": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "name": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { },
  "render": function () { },
  "renderWebGL": function () { },
  "setParent": function () { },
  "setTransform": function () { },
  "tabIndex": function () { },
  "toGlobal": function () { },
  "toLocal": function () { },
  "trackedPointers": function () { },
  "updateTransform": function () { }
};
PIXI.DisplayObject.EventEmitter.prototype = {
  "addListener": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { }
};
PIXI.Ellipse.prototype = {
  "clone": function () { },
  "contains": function () { },
  "getBounds": function () { }
};
PIXI.FillStyle.prototype = {
  "clone": function () { },
  "destroy": function () { },
  "reset": function () { }
};
PIXI.Filter.prototype = {
  "apply": function () { },
  "checkUniformExists": function () { },
  "constructor": function () { },
  "destroy": function () { }
};
PIXI.Framebuffer.prototype = {
  "addColorTexture": function () { },
  "addDepthTexture": function () { },
  "dispose": function () { },
  "enableDepth": function () { },
  "enableStencil": function () { },
  "resize": function () { }
};
PIXI.GLProgram.prototype = {
  "destroy": function () { }
};
PIXI.GLTexture.prototype = {
  "_refreshPOT": function () { },
  "addListener": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "dispose": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "loadSource": function () { },
  "off": function () { },
  "on": function () { },
  "onError": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { },
  "setRealSize": function () { },
  "setResolution": function () { },
  "setResource": function () { },
  "setSize": function () { },
  "setStyle": function () { },
  "update": function () { }
};
PIXI.GLTexture.EventEmitter.prototype = {
  "addListener": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { }
};
PIXI.Geometry.prototype = {
  "addAttribute": function () { },
  "addIndex": function () { },
  "clone": function () { },
  "destroy": function () { },
  "dispose": function () { },
  "getAttribute": function () { },
  "getBuffer": function () { },
  "getIndex": function () { },
  "getSize": function () { },
  "interleave": function () { }
};
PIXI.Graphics.prototype = {
  "_accessibleActive": function () { },
  "_accessibleDiv": function () { },
  "_cacheAsBitmap": function () { },
  "_cacheAsBitmapDestroy": function () { },
  "_cacheData": function () { },
  "_calculateBounds": function () { },
  "_calculateCachedBounds": function () { },
  "_destroyCachedDisplayObject": function () { },
  "_getCachedLocalBounds": function () { },
  "_initCachedDisplayObject": function () { },
  "_initCachedDisplayObjectCanvas": function () { },
  "_initCurve": function () { },
  "_recursivePostUpdateTransform": function () { },
  "_render": function () { },
  "_renderCached": function () { },
  "_renderCachedCanvas": function () { },
  "_renderWebGL": function () { },
  "_trackedPointers": function () { },
  "accessible": function () { },
  "accessibleHint": function () { },
  "accessibleTitle": function () { },
  "addChild": function () { },
  "addChildAt": function () { },
  "addListener": function () { },
  "arc": function () { },
  "arcTo": function () { },
  "beginFill": function () { },
  "beginHole": function () { },
  "beginTextureFill": function () { },
  "bezierCurveTo": function () { },
  "buttonMode": function () { },
  "calculateBounds": function () { },
  "calculateTints": function () { },
  "calculateVertices": function () { },
  "clear": function () { },
  "clone": function () { },
  "closePath": function () { },
  "constructor": function () { },
  "containerUpdateTransform": function () { },
  "containsPoint": function () { },
  "cursor": function () { },
  "destroy": function () { },
  "displayObjectUpdateTransform": function () { },
  "drawCircle": function () { },
  "drawEllipse": function () { },
  "drawPolygon": function () { },
  "drawRect": function () { },
  "drawRoundedRect": function () { },
  "drawShape": function () { },
  "drawStar": function () { },
  "emit": function () { },
  "endFill": function () { },
  "endHole": function () { },
  "eventNames": function () { },
  "finishPoly": function () { },
  "generateCanvasTexture": function () { },
  "getBounds": function () { },
  "getChildAt": function () { },
  "getChildByName": function () { },
  "getChildIndex": function () { },
  "getGlobalPosition": function () { },
  "getLocalBounds": function () { },
  "hitArea": function () { },
  "interactive": function () { },
  "interactiveChildren": function () { },
  "isFastRect": function () { },
  "lineStyle": function () { },
  "lineTextureStyle": function () { },
  "lineTo": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "moveTo": function () { },
  "name": function () { },
  "off": function () { },
  "on": function () { },
  "onChildrenChange": function () { },
  "once": function () { },
  "quadraticCurveTo": function () { },
  "removeAllListeners": function () { },
  "removeChild": function () { },
  "removeChildAt": function () { },
  "removeChildren": function () { },
  "removeListener": function () { },
  "render": function () { },
  "renderAdvanced": function () { },
  "renderAdvancedWebGL": function () { },
  "renderWebGL": function () { },
  "setChildIndex": function () { },
  "setMatrix": function () { },
  "setParent": function () { },
  "setTransform": function () { },
  "sortChildren": function () { },
  "startPoly": function () { },
  "swapChildren": function () { },
  "tabIndex": function () { },
  "toGlobal": function () { },
  "toLocal": function () { },
  "trackedPointers": function () { },
  "updateTransform": function () { }
};
PIXI.Graphics.EventEmitter.prototype = {
  "addListener": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { }
};
PIXI.GraphicsData.prototype = {
  "clone": function () { },
  "destroy": function () { }
};
PIXI.GraphicsGeometry.prototype = {
  "addAttribute": function () { },
  "addColors": function () { },
  "addIndex": function () { },
  "addTextureIds": function () { },
  "addUvs": function () { },
  "adjustUvs": function () { },
  "buildDrawCalls": function () { },
  "calculateBounds": function () { },
  "clear": function () { },
  "clone": function () { },
  "constructor": function () { },
  "containsPoint": function () { },
  "destroy": function () { },
  "dispose": function () { },
  "drawHole": function () { },
  "drawShape": function () { },
  "getAttribute": function () { },
  "getBuffer": function () { },
  "getIndex": function () { },
  "getSize": function () { },
  "interleave": function () { },
  "invalidate": function () { },
  "isBatchable": function () { },
  "processHoles": function () { },
  "transformPoints": function () { },
  "updateBatches": function () { }
};
PIXI.LineStyle.prototype = {
  "clone": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "reset": function () { }
};
PIXI.Loader.prototype = {
  "_loadResource": function () { },
  "_onComplete": function () { },
  "_onLoad": function () { },
  "_onStart": function () { },
  "_prepareUrl": function () { },
  "add": function () { },
  "addListener": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "load": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "pre": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { },
  "reset": function () { },
  "use": function () { }
};
PIXI.LoaderResource.prototype = {
  "_clearEvents": function () { },
  "_createSource": function () { },
  "_determineCrossOrigin": function () { },
  "_determineLoadType": function () { },
  "_determineXhrType": function () { },
  "_finish": function () { },
  "_getExtension": function () { },
  "_getMimeFromXhrType": function () { },
  "_hasFlag": function () { },
  "_loadElement": function () { },
  "_loadSourceElement": function () { },
  "_loadXdr": function () { },
  "_loadXhr": function () { },
  "_onError": function () { },
  "_onProgress": function () { },
  "_onTimeout": function () { },
  "_setFlag": function () { },
  "_xhrOnAbort": function () { },
  "_xhrOnError": function () { },
  "_xhrOnLoad": function () { },
  "_xhrOnTimeout": function () { },
  "abort": function () { },
  "complete": function () { },
  "load": function () { }
};
PIXI.Matrix.prototype = {
  "append": function () { },
  "apply": function () { },
  "applyInverse": function () { },
  "clone": function () { },
  "copy": function () { },
  "copyFrom": function () { },
  "copyTo": function () { },
  "decompose": function () { },
  "fromArray": function () { },
  "identity": function () { },
  "invert": function () { },
  "prepend": function () { },
  "rotate": function () { },
  "scale": function () { },
  "set": function () { },
  "setTransform": function () { },
  "toArray": function () { },
  "translate": function () { }
};
PIXI.Mesh.prototype = {
  "_accessibleActive": function () { },
  "_accessibleDiv": function () { },
  "_cacheAsBitmap": function () { },
  "_cacheAsBitmapDestroy": function () { },
  "_cacheData": function () { },
  "_calculateBounds": function () { },
  "_calculateCachedBounds": function () { },
  "_destroyCachedDisplayObject": function () { },
  "_getCachedLocalBounds": function () { },
  "_initCachedDisplayObject": function () { },
  "_initCachedDisplayObjectCanvas": function () { },
  "_recursivePostUpdateTransform": function () { },
  "_render": function () { },
  "_renderCached": function () { },
  "_renderCachedCanvas": function () { },
  "_renderDefault": function () { },
  "_renderToBatch": function () { },
  "_renderWebGL": function () { },
  "_trackedPointers": function () { },
  "accessible": function () { },
  "accessibleHint": function () { },
  "accessibleTitle": function () { },
  "addChild": function () { },
  "addChildAt": function () { },
  "addListener": function () { },
  "buttonMode": function () { },
  "calculateBounds": function () { },
  "calculateUvs": function () { },
  "calculateVertices": function () { },
  "constructor": function () { },
  "containerUpdateTransform": function () { },
  "containsPoint": function () { },
  "cursor": function () { },
  "destroy": function () { },
  "displayObjectUpdateTransform": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "getBounds": function () { },
  "getChildAt": function () { },
  "getChildByName": function () { },
  "getChildIndex": function () { },
  "getGlobalPosition": function () { },
  "getLocalBounds": function () { },
  "hitArea": function () { },
  "interactive": function () { },
  "interactiveChildren": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "name": function () { },
  "off": function () { },
  "on": function () { },
  "onChildrenChange": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeChild": function () { },
  "removeChildAt": function () { },
  "removeChildren": function () { },
  "removeListener": function () { },
  "render": function () { },
  "renderAdvanced": function () { },
  "renderAdvancedWebGL": function () { },
  "renderWebGL": function () { },
  "setChildIndex": function () { },
  "setParent": function () { },
  "setTransform": function () { },
  "sortChildren": function () { },
  "swapChildren": function () { },
  "tabIndex": function () { },
  "toGlobal": function () { },
  "toLocal": function () { },
  "trackedPointers": function () { },
  "updateTransform": function () { }
};
PIXI.Mesh.EventEmitter.prototype = {
  "addListener": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { }
};
PIXI.MeshBatchUvs.prototype = {
  "update": function () { }
};
PIXI.MeshGeometry.prototype = {
  "addAttribute": function () { },
  "addIndex": function () { },
  "clone": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "dispose": function () { },
  "getAttribute": function () { },
  "getBuffer": function () { },
  "getIndex": function () { },
  "getSize": function () { },
  "interleave": function () { }
};
PIXI.MeshMaterial.prototype = {
  "checkUniformExists": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "update": function () { }
};
PIXI.NineSlicePlane.prototype = {
  "_accessibleActive": function () { },
  "_accessibleDiv": function () { },
  "_cacheAsBitmap": function () { },
  "_cacheAsBitmapDestroy": function () { },
  "_cacheData": function () { },
  "_calculateBounds": function () { },
  "_calculateCachedBounds": function () { },
  "_destroyCachedDisplayObject": function () { },
  "_getCachedLocalBounds": function () { },
  "_initCachedDisplayObject": function () { },
  "_initCachedDisplayObjectCanvas": function () { },
  "_recursivePostUpdateTransform": function () { },
  "_refresh": function () { },
  "_render": function () { },
  "_renderCached": function () { },
  "_renderCachedCanvas": function () { },
  "_renderDefault": function () { },
  "_renderToBatch": function () { },
  "_renderWebGL": function () { },
  "_trackedPointers": function () { },
  "accessible": function () { },
  "accessibleHint": function () { },
  "accessibleTitle": function () { },
  "addChild": function () { },
  "addChildAt": function () { },
  "addListener": function () { },
  "buttonMode": function () { },
  "calculateBounds": function () { },
  "calculateUvs": function () { },
  "calculateVertices": function () { },
  "constructor": function () { },
  "containerUpdateTransform": function () { },
  "containsPoint": function () { },
  "cursor": function () { },
  "destroy": function () { },
  "displayObjectUpdateTransform": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "getBounds": function () { },
  "getChildAt": function () { },
  "getChildByName": function () { },
  "getChildIndex": function () { },
  "getGlobalPosition": function () { },
  "getLocalBounds": function () { },
  "hitArea": function () { },
  "interactive": function () { },
  "interactiveChildren": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "name": function () { },
  "off": function () { },
  "on": function () { },
  "onChildrenChange": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeChild": function () { },
  "removeChildAt": function () { },
  "removeChildren": function () { },
  "removeListener": function () { },
  "render": function () { },
  "renderAdvanced": function () { },
  "renderAdvancedWebGL": function () { },
  "renderWebGL": function () { },
  "setChildIndex": function () { },
  "setParent": function () { },
  "setTransform": function () { },
  "sortChildren": function () { },
  "swapChildren": function () { },
  "tabIndex": function () { },
  "textureUpdated": function () { },
  "toGlobal": function () { },
  "toLocal": function () { },
  "trackedPointers": function () { },
  "updateHorizontalVertices": function () { },
  "updateTransform": function () { },
  "updateVerticalVertices": function () { }
};
PIXI.NineSlicePlane.EventEmitter.prototype = {
  "addListener": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { }
};
PIXI.ObjectRenderer.prototype = {
  "destroy": function () { },
  "flush": function () { },
  "render": function () { },
  "start": function () { },
  "stop": function () { }
};
PIXI.ObservablePoint.prototype = {
  "clone": function () { },
  "copy": function () { },
  "copyFrom": function () { },
  "copyTo": function () { },
  "equals": function () { },
  "set": function () { }
};
PIXI.ParticleContainer.prototype = {
  "_accessibleActive": function () { },
  "_accessibleDiv": function () { },
  "_cacheAsBitmap": function () { },
  "_cacheAsBitmapDestroy": function () { },
  "_cacheData": function () { },
  "_calculateBounds": function () { },
  "_calculateCachedBounds": function () { },
  "_destroyCachedDisplayObject": function () { },
  "_getCachedLocalBounds": function () { },
  "_initCachedDisplayObject": function () { },
  "_initCachedDisplayObjectCanvas": function () { },
  "_recursivePostUpdateTransform": function () { },
  "_render": function () { },
  "_renderCached": function () { },
  "_renderCachedCanvas": function () { },
  "_renderWebGL": function () { },
  "_trackedPointers": function () { },
  "accessible": function () { },
  "accessibleHint": function () { },
  "accessibleTitle": function () { },
  "addChild": function () { },
  "addChildAt": function () { },
  "addListener": function () { },
  "buttonMode": function () { },
  "calculateBounds": function () { },
  "constructor": function () { },
  "containerUpdateTransform": function () { },
  "cursor": function () { },
  "destroy": function () { },
  "displayObjectUpdateTransform": function () { },
  "dispose": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "getBounds": function () { },
  "getChildAt": function () { },
  "getChildByName": function () { },
  "getChildIndex": function () { },
  "getGlobalPosition": function () { },
  "getLocalBounds": function () { },
  "hitArea": function () { },
  "interactive": function () { },
  "interactiveChildren": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "name": function () { },
  "off": function () { },
  "on": function () { },
  "onChildrenChange": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeChild": function () { },
  "removeChildAt": function () { },
  "removeChildren": function () { },
  "removeListener": function () { },
  "render": function () { },
  "renderAdvanced": function () { },
  "renderAdvancedWebGL": function () { },
  "renderWebGL": function () { },
  "setChildIndex": function () { },
  "setParent": function () { },
  "setProperties": function () { },
  "setTransform": function () { },
  "sortChildren": function () { },
  "swapChildren": function () { },
  "tabIndex": function () { },
  "toGlobal": function () { },
  "toLocal": function () { },
  "trackedPointers": function () { },
  "updateTransform": function () { }
};
PIXI.ParticleContainer.EventEmitter.prototype = {
  "addListener": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { }
};
PIXI.ParticleRenderer.prototype = {
  "_generateOneMoreBuffer": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "flush": function () { },
  "generateBuffers": function () { },
  "render": function () { },
  "start": function () { },
  "stop": function () { },
  "uploadPosition": function () { },
  "uploadRotation": function () { },
  "uploadTint": function () { },
  "uploadUvs": function () { },
  "uploadVertices": function () { }
};
PIXI.PlaneGeometry.prototype = {
  "addAttribute": function () { },
  "addIndex": function () { },
  "build": function () { },
  "clone": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "dispose": function () { },
  "getAttribute": function () { },
  "getBuffer": function () { },
  "getIndex": function () { },
  "getSize": function () { },
  "interleave": function () { }
};
PIXI.Point.prototype = {
  "clone": function () { },
  "copy": function () { },
  "copyFrom": function () { },
  "copyTo": function () { },
  "equals": function () { },
  "set": function () { }
};
PIXI.Polygon.prototype = {
  "clone": function () { },
  "contains": function () { }
};
PIXI.Program.prototype = {
  "extractData": function () { },
  "getAttributeData": function () { },
  "getUniformData": function () { }
};
PIXI.Quad.prototype = {
  "addAttribute": function () { },
  "addIndex": function () { },
  "clone": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "dispose": function () { },
  "getAttribute": function () { },
  "getBuffer": function () { },
  "getIndex": function () { },
  "getSize": function () { },
  "interleave": function () { }
};
PIXI.QuadUv.prototype = {
  "addAttribute": function () { },
  "addIndex": function () { },
  "clone": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "dispose": function () { },
  "getAttribute": function () { },
  "getBuffer": function () { },
  "getIndex": function () { },
  "getSize": function () { },
  "interleave": function () { },
  "invalidate": function () { },
  "map": function () { }
};
PIXI.Rectangle.prototype = {
  "ceil": function () { },
  "clone": function () { },
  "contains": function () { },
  "copy": function () { },
  "copyFrom": function () { },
  "copyTo": function () { },
  "enlarge": function () { },
  "fit": function () { },
  "pad": function () { }
};
PIXI.RenderTexture.prototype = {
  "addListener": function () { },
  "clone": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "onBaseTextureUpdated": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { },
  "resize": function () { },
  "setResolution": function () { },
  "update": function () { },
  "updateUvs": function () { }
};
PIXI.RenderTexture.EMPTY.baseTexture.constructor.prototype = {
  "_refreshPOT": function () { },
  "addListener": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "dispose": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "loadSource": function () { },
  "off": function () { },
  "on": function () { },
  "onError": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { },
  "setRealSize": function () { },
  "setResolution": function () { },
  "setResource": function () { },
  "setSize": function () { },
  "setStyle": function () { },
  "update": function () { }
};
PIXI.RenderTexture.EMPTY.baseTexture.constructor.EventEmitter.prototype = {
  "addListener": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { }
};
PIXI.RenderTexture.EMPTY.constructor.prototype = {
  "addListener": function () { },
  "clone": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "onBaseTextureUpdated": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { },
  "update": function () { },
  "updateUvs": function () { }
};
PIXI.RenderTexture.EMPTY.constructor.EventEmitter.prototype = {
  "addListener": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { }
};
PIXI.RenderTexture.EMPTY.constructor.WHITE.baseTexture.constructor.prototype = {
  "_refreshPOT": function () { },
  "addListener": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "dispose": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "loadSource": function () { },
  "off": function () { },
  "on": function () { },
  "onError": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { },
  "setRealSize": function () { },
  "setResolution": function () { },
  "setResource": function () { },
  "setSize": function () { },
  "setStyle": function () { },
  "update": function () { }
};
PIXI.RenderTexture.EMPTY.constructor.WHITE.baseTexture.constructor.EventEmitter.prototype = {
  "addListener": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { }
};
PIXI.RenderTexture.EMPTY.constructor.WHITE.baseTexture.resource.constructor.prototype = {
  "bind": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "dispose": function () { },
  "load": function () { },
  "resize": function () { },
  "style": function () { },
  "unbind": function () { },
  "update": function () { },
  "upload": function () { }
};
PIXI.RenderTexture.EventEmitter.prototype = {
  "addListener": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { }
};
PIXI.RenderTexture.WHITE.baseTexture.constructor.prototype = {
  "_refreshPOT": function () { },
  "addListener": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "dispose": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "loadSource": function () { },
  "off": function () { },
  "on": function () { },
  "onError": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { },
  "setRealSize": function () { },
  "setResolution": function () { },
  "setResource": function () { },
  "setSize": function () { },
  "setStyle": function () { },
  "update": function () { }
};
PIXI.RenderTexture.WHITE.baseTexture.constructor.EventEmitter.prototype = {
  "addListener": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { }
};
PIXI.RenderTexture.WHITE.baseTexture.resource.constructor.prototype = {
  "bind": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "dispose": function () { },
  "load": function () { },
  "resize": function () { },
  "style": function () { },
  "unbind": function () { },
  "update": function () { },
  "upload": function () { }
};
PIXI.RenderTexture.WHITE.constructor.prototype = {
  "addListener": function () { },
  "clone": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "onBaseTextureUpdated": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { },
  "update": function () { },
  "updateUvs": function () { }
};
PIXI.RenderTexture.WHITE.constructor.EMPTY.baseTexture.constructor.prototype = {
  "_refreshPOT": function () { },
  "addListener": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "dispose": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "loadSource": function () { },
  "off": function () { },
  "on": function () { },
  "onError": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { },
  "setRealSize": function () { },
  "setResolution": function () { },
  "setResource": function () { },
  "setSize": function () { },
  "setStyle": function () { },
  "update": function () { }
};
PIXI.RenderTexture.WHITE.constructor.EMPTY.baseTexture.constructor.EventEmitter.prototype = {
  "addListener": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { }
};
PIXI.RenderTexture.WHITE.constructor.EventEmitter.prototype = {
  "addListener": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { }
};
PIXI.RenderTexturePool.prototype = {
  "clear": function () { },
  "createTexture": function () { },
  "getFilterTexture": function () { },
  "getOptimalTexture": function () { },
  "returnFilterTexture": function () { },
  "returnTexture": function () { },
  "setScreenSize": function () { }
};
PIXI.Renderer.prototype = {
  "addListener": function () { },
  "addSystem": function () { },
  "clear": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "generateTexture": function () { },
  "initPlugins": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { },
  "render": function () { },
  "reset": function () { },
  "resize": function () { }
};
PIXI.Renderer.EventEmitter.prototype = {
  "addListener": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { }
};
PIXI.Renderer.__plugins.accessibility.prototype = {
  "_onClick": function () { },
  "_onFocus": function () { },
  "_onFocusOut": function () { },
  "_onKeyDown": function () { },
  "_onMouseMove": function () { },
  "activate": function () { },
  "addChild": function () { },
  "capHitArea": function () { },
  "createTouchHook": function () { },
  "deactivate": function () { },
  "destroy": function () { },
  "destroyTouchHook": function () { },
  "update": function () { },
  "updateAccessibleObjects": function () { }
};
PIXI.Renderer.__plugins.batch.prototype = {
  "constructor": function () { },
  "contextChange": function () { },
  "destroy": function () { },
  "flush": function () { },
  "getAttributeBuffer": function () { },
  "getIndexBuffer": function () { },
  "onPrerender": function () { },
  "packInterleavedGeometry": function () { },
  "render": function () { },
  "start": function () { },
  "stop": function () { }
};
PIXI.Renderer.__plugins.extract.prototype = {
  "base64": function () { },
  "canvas": function () { },
  "destroy": function () { },
  "image": function () { },
  "pixels": function () { }
};
PIXI.Renderer.__plugins.interaction.prototype = {
  "addEvents": function () { },
  "addListener": function () { },
  "configureInteractionEventForDOMEvent": function () { },
  "constructor": function () { },
  "delayDispatchEvent": function () { },
  "destroy": function () { },
  "dispatchEvent": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "getInteractionDataForPointerId": function () { },
  "hitTest": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "mapPositionToPoint": function () { },
  "normalizeToPointerData": function () { },
  "off": function () { },
  "on": function () { },
  "onPointerCancel": function () { },
  "onPointerComplete": function () { },
  "onPointerDown": function () { },
  "onPointerMove": function () { },
  "onPointerOut": function () { },
  "onPointerOver": function () { },
  "onPointerUp": function () { },
  "once": function () { },
  "processInteractive": function () { },
  "processPointerCancel": function () { },
  "processPointerDown": function () { },
  "processPointerMove": function () { },
  "processPointerOverOut": function () { },
  "processPointerUp": function () { },
  "releaseInteractionDataForPointerId": function () { },
  "removeAllListeners": function () { },
  "removeEvents": function () { },
  "removeListener": function () { },
  "setCursorMode": function () { },
  "setTargetElement": function () { },
  "update": function () { }
};
PIXI.Renderer.__plugins.interaction.EventEmitter.prototype = {
  "addListener": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { }
};
PIXI.Renderer.__plugins.particle.prototype = {
  "_generateOneMoreBuffer": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "flush": function () { },
  "generateBuffers": function () { },
  "render": function () { },
  "start": function () { },
  "stop": function () { },
  "uploadPosition": function () { },
  "uploadRotation": function () { },
  "uploadTint": function () { },
  "uploadUvs": function () { },
  "uploadVertices": function () { }
};
PIXI.Renderer.__plugins.prepare.prototype = {
  "add": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "prepareItems": function () { },
  "registerFindHook": function () { },
  "registerUploadHook": function () { },
  "tick": function () { },
  "upload": function () { }
};
PIXI.Renderer.__plugins.tilingSprite.prototype = {
  "constructor": function () { },
  "destroy": function () { },
  "flush": function () { },
  "render": function () { },
  "start": function () { },
  "stop": function () { }
};
PIXI.RopeGeometry.prototype = {
  "addAttribute": function () { },
  "addIndex": function () { },
  "build": function () { },
  "clone": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "dispose": function () { },
  "getAttribute": function () { },
  "getBuffer": function () { },
  "getIndex": function () { },
  "getSize": function () { },
  "interleave": function () { },
  "update": function () { },
  "updateVertices": function () { }
};
PIXI.RoundedRectangle.prototype = {
  "clone": function () { },
  "contains": function () { }
};
PIXI.Runner.prototype = {
  "add": function () { },
  "contains": function () { },
  "destroy": function () { },
  "dispatch": function () { },
  "emit": function () { },
  "ensureNonAliasedItems": function () { },
  "remove": function () { },
  "removeAll": function () { },
  "run": function () { }
};
PIXI.Shader.prototype = {
  "checkUniformExists": function () { },
  "destroy": function () { }
};
PIXI.SimpleMesh.prototype = {
  "_accessibleActive": function () { },
  "_accessibleDiv": function () { },
  "_cacheAsBitmap": function () { },
  "_cacheAsBitmapDestroy": function () { },
  "_cacheData": function () { },
  "_calculateBounds": function () { },
  "_calculateCachedBounds": function () { },
  "_destroyCachedDisplayObject": function () { },
  "_getCachedLocalBounds": function () { },
  "_initCachedDisplayObject": function () { },
  "_initCachedDisplayObjectCanvas": function () { },
  "_recursivePostUpdateTransform": function () { },
  "_render": function () { },
  "_renderCached": function () { },
  "_renderCachedCanvas": function () { },
  "_renderDefault": function () { },
  "_renderToBatch": function () { },
  "_renderWebGL": function () { },
  "_trackedPointers": function () { },
  "accessible": function () { },
  "accessibleHint": function () { },
  "accessibleTitle": function () { },
  "addChild": function () { },
  "addChildAt": function () { },
  "addListener": function () { },
  "buttonMode": function () { },
  "calculateBounds": function () { },
  "calculateUvs": function () { },
  "calculateVertices": function () { },
  "constructor": function () { },
  "containerUpdateTransform": function () { },
  "containsPoint": function () { },
  "cursor": function () { },
  "destroy": function () { },
  "displayObjectUpdateTransform": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "getBounds": function () { },
  "getChildAt": function () { },
  "getChildByName": function () { },
  "getChildIndex": function () { },
  "getGlobalPosition": function () { },
  "getLocalBounds": function () { },
  "hitArea": function () { },
  "interactive": function () { },
  "interactiveChildren": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "name": function () { },
  "off": function () { },
  "on": function () { },
  "onChildrenChange": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeChild": function () { },
  "removeChildAt": function () { },
  "removeChildren": function () { },
  "removeListener": function () { },
  "render": function () { },
  "renderAdvanced": function () { },
  "renderAdvancedWebGL": function () { },
  "renderWebGL": function () { },
  "setChildIndex": function () { },
  "setParent": function () { },
  "setTransform": function () { },
  "sortChildren": function () { },
  "swapChildren": function () { },
  "tabIndex": function () { },
  "toGlobal": function () { },
  "toLocal": function () { },
  "trackedPointers": function () { },
  "updateTransform": function () { }
};
PIXI.SimpleMesh.EventEmitter.prototype = {
  "addListener": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { }
};
PIXI.SimplePlane.prototype = {
  "_accessibleActive": function () { },
  "_accessibleDiv": function () { },
  "_cacheAsBitmap": function () { },
  "_cacheAsBitmapDestroy": function () { },
  "_cacheData": function () { },
  "_calculateBounds": function () { },
  "_calculateCachedBounds": function () { },
  "_destroyCachedDisplayObject": function () { },
  "_getCachedLocalBounds": function () { },
  "_initCachedDisplayObject": function () { },
  "_initCachedDisplayObjectCanvas": function () { },
  "_recursivePostUpdateTransform": function () { },
  "_render": function () { },
  "_renderCached": function () { },
  "_renderCachedCanvas": function () { },
  "_renderDefault": function () { },
  "_renderToBatch": function () { },
  "_renderWebGL": function () { },
  "_trackedPointers": function () { },
  "accessible": function () { },
  "accessibleHint": function () { },
  "accessibleTitle": function () { },
  "addChild": function () { },
  "addChildAt": function () { },
  "addListener": function () { },
  "buttonMode": function () { },
  "calculateBounds": function () { },
  "calculateUvs": function () { },
  "calculateVertices": function () { },
  "constructor": function () { },
  "containerUpdateTransform": function () { },
  "containsPoint": function () { },
  "cursor": function () { },
  "destroy": function () { },
  "displayObjectUpdateTransform": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "getBounds": function () { },
  "getChildAt": function () { },
  "getChildByName": function () { },
  "getChildIndex": function () { },
  "getGlobalPosition": function () { },
  "getLocalBounds": function () { },
  "hitArea": function () { },
  "interactive": function () { },
  "interactiveChildren": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "name": function () { },
  "off": function () { },
  "on": function () { },
  "onChildrenChange": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeChild": function () { },
  "removeChildAt": function () { },
  "removeChildren": function () { },
  "removeListener": function () { },
  "render": function () { },
  "renderAdvanced": function () { },
  "renderAdvancedWebGL": function () { },
  "renderWebGL": function () { },
  "setChildIndex": function () { },
  "setParent": function () { },
  "setTransform": function () { },
  "sortChildren": function () { },
  "swapChildren": function () { },
  "tabIndex": function () { },
  "textureUpdated": function () { },
  "toGlobal": function () { },
  "toLocal": function () { },
  "trackedPointers": function () { },
  "updateTransform": function () { }
};
PIXI.SimplePlane.EventEmitter.prototype = {
  "addListener": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { }
};
PIXI.SimpleRope.prototype = {
  "_accessibleActive": function () { },
  "_accessibleDiv": function () { },
  "_cacheAsBitmap": function () { },
  "_cacheAsBitmapDestroy": function () { },
  "_cacheData": function () { },
  "_calculateBounds": function () { },
  "_calculateCachedBounds": function () { },
  "_destroyCachedDisplayObject": function () { },
  "_getCachedLocalBounds": function () { },
  "_initCachedDisplayObject": function () { },
  "_initCachedDisplayObjectCanvas": function () { },
  "_recursivePostUpdateTransform": function () { },
  "_render": function () { },
  "_renderCached": function () { },
  "_renderCachedCanvas": function () { },
  "_renderDefault": function () { },
  "_renderToBatch": function () { },
  "_renderWebGL": function () { },
  "_trackedPointers": function () { },
  "accessible": function () { },
  "accessibleHint": function () { },
  "accessibleTitle": function () { },
  "addChild": function () { },
  "addChildAt": function () { },
  "addListener": function () { },
  "buttonMode": function () { },
  "calculateBounds": function () { },
  "calculateUvs": function () { },
  "calculateVertices": function () { },
  "constructor": function () { },
  "containerUpdateTransform": function () { },
  "containsPoint": function () { },
  "cursor": function () { },
  "destroy": function () { },
  "displayObjectUpdateTransform": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "getBounds": function () { },
  "getChildAt": function () { },
  "getChildByName": function () { },
  "getChildIndex": function () { },
  "getGlobalPosition": function () { },
  "getLocalBounds": function () { },
  "hitArea": function () { },
  "interactive": function () { },
  "interactiveChildren": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "name": function () { },
  "off": function () { },
  "on": function () { },
  "onChildrenChange": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeChild": function () { },
  "removeChildAt": function () { },
  "removeChildren": function () { },
  "removeListener": function () { },
  "render": function () { },
  "renderAdvanced": function () { },
  "renderAdvancedWebGL": function () { },
  "renderWebGL": function () { },
  "setChildIndex": function () { },
  "setParent": function () { },
  "setTransform": function () { },
  "sortChildren": function () { },
  "swapChildren": function () { },
  "tabIndex": function () { },
  "toGlobal": function () { },
  "toLocal": function () { },
  "trackedPointers": function () { },
  "updateTransform": function () { }
};
PIXI.SimpleRope.EventEmitter.prototype = {
  "addListener": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { }
};
PIXI.Sprite.prototype = {
  "_accessibleActive": function () { },
  "_accessibleDiv": function () { },
  "_cacheAsBitmap": function () { },
  "_cacheAsBitmapDestroy": function () { },
  "_cacheData": function () { },
  "_calculateBounds": function () { },
  "_calculateCachedBounds": function () { },
  "_destroyCachedDisplayObject": function () { },
  "_getCachedLocalBounds": function () { },
  "_initCachedDisplayObject": function () { },
  "_initCachedDisplayObjectCanvas": function () { },
  "_onAnchorUpdate": function () { },
  "_onTextureUpdate": function () { },
  "_recursivePostUpdateTransform": function () { },
  "_render": function () { },
  "_renderCached": function () { },
  "_renderCachedCanvas": function () { },
  "_renderWebGL": function () { },
  "_trackedPointers": function () { },
  "accessible": function () { },
  "accessibleHint": function () { },
  "accessibleTitle": function () { },
  "addChild": function () { },
  "addChildAt": function () { },
  "addListener": function () { },
  "buttonMode": function () { },
  "calculateBounds": function () { },
  "calculateTrimmedVertices": function () { },
  "calculateVertices": function () { },
  "constructor": function () { },
  "containerUpdateTransform": function () { },
  "containsPoint": function () { },
  "cursor": function () { },
  "destroy": function () { },
  "displayObjectUpdateTransform": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "getBounds": function () { },
  "getChildAt": function () { },
  "getChildByName": function () { },
  "getChildIndex": function () { },
  "getGlobalPosition": function () { },
  "getLocalBounds": function () { },
  "hitArea": function () { },
  "interactive": function () { },
  "interactiveChildren": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "name": function () { },
  "off": function () { },
  "on": function () { },
  "onChildrenChange": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeChild": function () { },
  "removeChildAt": function () { },
  "removeChildren": function () { },
  "removeListener": function () { },
  "render": function () { },
  "renderAdvanced": function () { },
  "renderAdvancedWebGL": function () { },
  "renderWebGL": function () { },
  "setChildIndex": function () { },
  "setParent": function () { },
  "setTransform": function () { },
  "sortChildren": function () { },
  "swapChildren": function () { },
  "tabIndex": function () { },
  "toGlobal": function () { },
  "toLocal": function () { },
  "trackedPointers": function () { },
  "updateTransform": function () { }
};
PIXI.Sprite.EventEmitter.prototype = {
  "addListener": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { }
};
PIXI.SpriteMaskFilter.prototype = {
  "apply": function () { },
  "checkUniformExists": function () { },
  "constructor": function () { },
  "destroy": function () { }
};
PIXI.Spritesheet.prototype = {
  "_nextBatch": function () { },
  "_parseComplete": function () { },
  "_processAnimations": function () { },
  "_processFrames": function () { },
  "_updateResolution": function () { },
  "destroy": function () { },
  "parse": function () { }
};
PIXI.System.prototype = {
  "destroy": function () { }
};
PIXI.Text.prototype = {
  "_accessibleActive": function () { },
  "_accessibleDiv": function () { },
  "_cacheAsBitmap": function () { },
  "_cacheAsBitmapDestroy": function () { },
  "_cacheData": function () { },
  "_calculateBounds": function () { },
  "_calculateCachedBounds": function () { },
  "_destroyCachedDisplayObject": function () { },
  "_generateFillStyle": function () { },
  "_getCachedLocalBounds": function () { },
  "_initCachedDisplayObject": function () { },
  "_initCachedDisplayObjectCanvas": function () { },
  "_onAnchorUpdate": function () { },
  "_onStyleChange": function () { },
  "_onTextureUpdate": function () { },
  "_recursivePostUpdateTransform": function () { },
  "_render": function () { },
  "_renderCached": function () { },
  "_renderCachedCanvas": function () { },
  "_renderWebGL": function () { },
  "_trackedPointers": function () { },
  "accessible": function () { },
  "accessibleHint": function () { },
  "accessibleTitle": function () { },
  "addChild": function () { },
  "addChildAt": function () { },
  "addListener": function () { },
  "buttonMode": function () { },
  "calculateBounds": function () { },
  "calculateTrimmedVertices": function () { },
  "calculateVertices": function () { },
  "constructor": function () { },
  "containerUpdateTransform": function () { },
  "containsPoint": function () { },
  "cursor": function () { },
  "destroy": function () { },
  "displayObjectUpdateTransform": function () { },
  "drawLetterSpacing": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "getBounds": function () { },
  "getChildAt": function () { },
  "getChildByName": function () { },
  "getChildIndex": function () { },
  "getGlobalPosition": function () { },
  "getLocalBounds": function () { },
  "hitArea": function () { },
  "interactive": function () { },
  "interactiveChildren": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "name": function () { },
  "off": function () { },
  "on": function () { },
  "onChildrenChange": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeChild": function () { },
  "removeChildAt": function () { },
  "removeChildren": function () { },
  "removeListener": function () { },
  "render": function () { },
  "renderAdvanced": function () { },
  "renderAdvancedWebGL": function () { },
  "renderWebGL": function () { },
  "setChildIndex": function () { },
  "setParent": function () { },
  "setTransform": function () { },
  "sortChildren": function () { },
  "swapChildren": function () { },
  "tabIndex": function () { },
  "toGlobal": function () { },
  "toLocal": function () { },
  "trackedPointers": function () { },
  "updateText": function () { },
  "updateTexture": function () { },
  "updateTransform": function () { }
};
PIXI.Text.EventEmitter.prototype = {
  "addListener": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { }
};
PIXI.TextStyle.prototype = {
  "clone": function () { },
  "reset": function () { },
  "toFontString": function () { }
};
PIXI.Texture.prototype = {
  "addListener": function () { },
  "clone": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "onBaseTextureUpdated": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { },
  "update": function () { },
  "updateUvs": function () { }
};
PIXI.Texture.EMPTY.baseTexture.constructor.prototype = {
  "_refreshPOT": function () { },
  "addListener": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "dispose": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "loadSource": function () { },
  "off": function () { },
  "on": function () { },
  "onError": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { },
  "setRealSize": function () { },
  "setResolution": function () { },
  "setResource": function () { },
  "setSize": function () { },
  "setStyle": function () { },
  "update": function () { }
};
PIXI.Texture.EMPTY.baseTexture.constructor.EventEmitter.prototype = {
  "addListener": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { }
};
PIXI.Texture.EventEmitter.prototype = {
  "addListener": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { }
};
PIXI.Texture.WHITE.baseTexture.constructor.prototype = {
  "_refreshPOT": function () { },
  "addListener": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "dispose": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "loadSource": function () { },
  "off": function () { },
  "on": function () { },
  "onError": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { },
  "setRealSize": function () { },
  "setResolution": function () { },
  "setResource": function () { },
  "setSize": function () { },
  "setStyle": function () { },
  "update": function () { }
};
PIXI.Texture.WHITE.baseTexture.constructor.EventEmitter.prototype = {
  "addListener": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { }
};
PIXI.Texture.WHITE.baseTexture.resource.constructor.prototype = {
  "bind": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "dispose": function () { },
  "load": function () { },
  "resize": function () { },
  "style": function () { },
  "unbind": function () { },
  "update": function () { },
  "upload": function () { }
};
PIXI.TextureMatrix.prototype = {
  "multiplyUvs": function () { },
  "update": function () { }
};
PIXI.TextureUvs.prototype = {
  "set": function () { }
};
PIXI.Ticker.prototype = {
  "_addListener": function () { },
  "_cancelIfNeeded": function () { },
  "_requestIfNeeded": function () { },
  "_startIfPossible": function () { },
  "add": function () { },
  "addOnce": function () { },
  "destroy": function () { },
  "remove": function () { },
  "start": function () { },
  "stop": function () { },
  "update": function () { }
};
PIXI.TilingSprite.prototype = {
  "_accessibleActive": function () { },
  "_accessibleDiv": function () { },
  "_cacheAsBitmap": function () { },
  "_cacheAsBitmapDestroy": function () { },
  "_cacheData": function () { },
  "_calculateBounds": function () { },
  "_calculateCachedBounds": function () { },
  "_destroyCachedDisplayObject": function () { },
  "_getCachedLocalBounds": function () { },
  "_initCachedDisplayObject": function () { },
  "_initCachedDisplayObjectCanvas": function () { },
  "_onAnchorUpdate": function () { },
  "_onTextureUpdate": function () { },
  "_recursivePostUpdateTransform": function () { },
  "_render": function () { },
  "_renderCached": function () { },
  "_renderCachedCanvas": function () { },
  "_renderWebGL": function () { },
  "_trackedPointers": function () { },
  "accessible": function () { },
  "accessibleHint": function () { },
  "accessibleTitle": function () { },
  "addChild": function () { },
  "addChildAt": function () { },
  "addListener": function () { },
  "buttonMode": function () { },
  "calculateBounds": function () { },
  "calculateTrimmedVertices": function () { },
  "calculateVertices": function () { },
  "constructor": function () { },
  "containerUpdateTransform": function () { },
  "containsPoint": function () { },
  "cursor": function () { },
  "destroy": function () { },
  "displayObjectUpdateTransform": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "getBounds": function () { },
  "getChildAt": function () { },
  "getChildByName": function () { },
  "getChildIndex": function () { },
  "getGlobalPosition": function () { },
  "getLocalBounds": function () { },
  "hitArea": function () { },
  "interactive": function () { },
  "interactiveChildren": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "name": function () { },
  "off": function () { },
  "on": function () { },
  "onChildrenChange": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeChild": function () { },
  "removeChildAt": function () { },
  "removeChildren": function () { },
  "removeListener": function () { },
  "render": function () { },
  "renderAdvanced": function () { },
  "renderAdvancedWebGL": function () { },
  "renderWebGL": function () { },
  "setChildIndex": function () { },
  "setParent": function () { },
  "setTransform": function () { },
  "sortChildren": function () { },
  "swapChildren": function () { },
  "tabIndex": function () { },
  "toGlobal": function () { },
  "toLocal": function () { },
  "trackedPointers": function () { },
  "updateTransform": function () { }
};
PIXI.TilingSprite.EventEmitter.prototype = {
  "addListener": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { }
};
PIXI.TilingSpriteRenderer.prototype = {
  "constructor": function () { },
  "destroy": function () { },
  "flush": function () { },
  "render": function () { },
  "start": function () { },
  "stop": function () { }
};
PIXI.Transform.prototype = {
  "onChange": function () { },
  "setFromMatrix": function () { },
  "updateLocalTransform": function () { },
  "updateSkew": function () { },
  "updateTransform": function () { }
};
PIXI.UniformGroup.prototype = {
  "add": function () { },
  "update": function () { }
};
PIXI.ViewableBuffer.prototype = {
  "destroy": function () { },
  "view": function () { }
};
PIXI.accessibility.AccessibilityManager.prototype = {
  "_onClick": function () { },
  "_onFocus": function () { },
  "_onFocusOut": function () { },
  "_onKeyDown": function () { },
  "_onMouseMove": function () { },
  "activate": function () { },
  "addChild": function () { },
  "capHitArea": function () { },
  "createTouchHook": function () { },
  "deactivate": function () { },
  "destroy": function () { },
  "destroyTouchHook": function () { },
  "update": function () { },
  "updateAccessibleObjects": function () { }
};
PIXI.extract.Extract.prototype = {
  "base64": function () { },
  "canvas": function () { },
  "destroy": function () { },
  "image": function () { },
  "pixels": function () { }
};
PIXI.filters.AlphaFilter.prototype = {
  "apply": function () { },
  "checkUniformExists": function () { },
  "constructor": function () { },
  "destroy": function () { }
};
PIXI.filters.BlurFilter.prototype = {
  "apply": function () { },
  "checkUniformExists": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "updatePadding": function () { }
};
PIXI.filters.BlurFilterPass.prototype = {
  "apply": function () { },
  "checkUniformExists": function () { },
  "constructor": function () { },
  "destroy": function () { }
};
PIXI.filters.BlurXFilter.prototype = {
  "apply": function () { },
  "checkUniformExists": function () { },
  "constructor": function () { },
  "destroy": function () { }
};
PIXI.filters.BlurYFilter.prototype = {
  "apply": function () { },
  "checkUniformExists": function () { },
  "constructor": function () { },
  "destroy": function () { }
};
PIXI.filters.ColorMatrixFilter.prototype = {
  "_colorMatrix": function () { },
  "_loadMatrix": function () { },
  "_multiply": function () { },
  "apply": function () { },
  "blackAndWhite": function () { },
  "brightness": function () { },
  "browni": function () { },
  "checkUniformExists": function () { },
  "colorTone": function () { },
  "constructor": function () { },
  "contrast": function () { },
  "desaturate": function () { },
  "destroy": function () { },
  "grayscale": function () { },
  "greyscale": function () { },
  "hue": function () { },
  "kodachrome": function () { },
  "lsd": function () { },
  "negative": function () { },
  "night": function () { },
  "polaroid": function () { },
  "predator": function () { },
  "reset": function () { },
  "saturate": function () { },
  "sepia": function () { },
  "technicolor": function () { },
  "toBGR": function () { },
  "vintage": function () { }
};
PIXI.filters.DisplacementFilter.prototype = {
  "apply": function () { },
  "checkUniformExists": function () { },
  "constructor": function () { },
  "destroy": function () { }
};
PIXI.filters.FXAAFilter.prototype = {
  "apply": function () { },
  "checkUniformExists": function () { },
  "constructor": function () { },
  "destroy": function () { }
};
PIXI.filters.NoiseFilter.prototype = {
  "apply": function () { },
  "checkUniformExists": function () { },
  "constructor": function () { },
  "destroy": function () { }
};
PIXI.interaction.InteractionData.prototype = {
  "copyEvent": function () { },
  "getLocalPosition": function () { },
  "reset": function () { }
};
PIXI.interaction.InteractionEvent.prototype = {
  "reset": function () { },
  "stopPropagation": function () { }
};
PIXI.interaction.InteractionManager.prototype = {
  "addEvents": function () { },
  "addListener": function () { },
  "configureInteractionEventForDOMEvent": function () { },
  "constructor": function () { },
  "delayDispatchEvent": function () { },
  "destroy": function () { },
  "dispatchEvent": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "getInteractionDataForPointerId": function () { },
  "hitTest": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "mapPositionToPoint": function () { },
  "normalizeToPointerData": function () { },
  "off": function () { },
  "on": function () { },
  "onPointerCancel": function () { },
  "onPointerComplete": function () { },
  "onPointerDown": function () { },
  "onPointerMove": function () { },
  "onPointerOut": function () { },
  "onPointerOver": function () { },
  "onPointerUp": function () { },
  "once": function () { },
  "processInteractive": function () { },
  "processPointerCancel": function () { },
  "processPointerDown": function () { },
  "processPointerMove": function () { },
  "processPointerOverOut": function () { },
  "processPointerUp": function () { },
  "releaseInteractionDataForPointerId": function () { },
  "removeAllListeners": function () { },
  "removeEvents": function () { },
  "removeListener": function () { },
  "setCursorMode": function () { },
  "setTargetElement": function () { },
  "update": function () { }
};
PIXI.interaction.InteractionManager.EventEmitter.prototype = {
  "addListener": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { }
};
PIXI.interaction.InteractionTrackingData.prototype = {
  "_doSet": function () { }
};
PIXI.prepare.BasePrepare.prototype = {
  "add": function () { },
  "destroy": function () { },
  "prepareItems": function () { },
  "registerFindHook": function () { },
  "registerUploadHook": function () { },
  "tick": function () { },
  "upload": function () { }
};
PIXI.prepare.CountLimiter.prototype = {
  "allowedToUpload": function () { },
  "beginFrame": function () { }
};
PIXI.prepare.Prepare.prototype = {
  "add": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "prepareItems": function () { },
  "registerFindHook": function () { },
  "registerUploadHook": function () { },
  "tick": function () { },
  "upload": function () { }
};
PIXI.prepare.TimeLimiter.prototype = {
  "allowedToUpload": function () { },
  "beginFrame": function () { }
};
PIXI.resources.ArrayResource.prototype = {
  "addResourceAt": function () { },
  "bind": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "dispose": function () { },
  "load": function () { },
  "resize": function () { },
  "style": function () { },
  "unbind": function () { },
  "update": function () { },
  "upload": function () { }
};
PIXI.resources.BaseImageResource.prototype = {
  "bind": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "dispose": function () { },
  "load": function () { },
  "resize": function () { },
  "style": function () { },
  "unbind": function () { },
  "update": function () { },
  "upload": function () { }
};
PIXI.resources.BufferResource.prototype = {
  "bind": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "dispose": function () { },
  "load": function () { },
  "resize": function () { },
  "style": function () { },
  "unbind": function () { },
  "update": function () { },
  "upload": function () { }
};
PIXI.resources.CanvasResource.prototype = {
  "bind": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "dispose": function () { },
  "load": function () { },
  "resize": function () { },
  "style": function () { },
  "unbind": function () { },
  "update": function () { },
  "upload": function () { }
};
PIXI.resources.CubeResource.prototype = {
  "addResourceAt": function () { },
  "bind": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "dispose": function () { },
  "load": function () { },
  "resize": function () { },
  "style": function () { },
  "unbind": function () { },
  "update": function () { },
  "upload": function () { }
};
PIXI.resources.ImageBitmapResource.prototype = {
  "bind": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "dispose": function () { },
  "load": function () { },
  "resize": function () { },
  "style": function () { },
  "unbind": function () { },
  "update": function () { },
  "upload": function () { }
};
PIXI.resources.ImageResource.prototype = {
  "bind": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "dispose": function () { },
  "load": function () { },
  "process": function () { },
  "resize": function () { },
  "style": function () { },
  "unbind": function () { },
  "update": function () { },
  "upload": function () { }
};
PIXI.resources.Resource.prototype = {
  "bind": function () { },
  "destroy": function () { },
  "dispose": function () { },
  "load": function () { },
  "resize": function () { },
  "style": function () { },
  "unbind": function () { },
  "update": function () { },
  "upload": function () { }
};
PIXI.resources.SVGResource.prototype = {
  "_loadSvg": function () { },
  "bind": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "dispose": function () { },
  "load": function () { },
  "resize": function () { },
  "style": function () { },
  "unbind": function () { },
  "update": function () { },
  "upload": function () { }
};
PIXI.resources.VideoResource.prototype = {
  "_isSourcePlaying": function () { },
  "_isSourceReady": function () { },
  "_onCanPlay": function () { },
  "_onError": function () { },
  "_onPlayStart": function () { },
  "_onPlayStop": function () { },
  "bind": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "dispose": function () { },
  "load": function () { },
  "resize": function () { },
  "style": function () { },
  "unbind": function () { },
  "update": function () { },
  "upload": function () { }
};
PIXI.systems.BatchSystem.prototype = {
  "constructor": function () { },
  "destroy": function () { },
  "flush": function () { },
  "reset": function () { },
  "setObjectRenderer": function () { }
};
PIXI.systems.ContextSystem.prototype = {
  "constructor": function () { },
  "contextChange": function () { },
  "createContext": function () { },
  "destroy": function () { },
  "getExtensions": function () { },
  "handleContextLost": function () { },
  "handleContextRestored": function () { },
  "initFromContext": function () { },
  "initFromOptions": function () { },
  "postrender": function () { },
  "validateContext": function () { }
};
PIXI.systems.FilterSystem.prototype = {
  "applyFilter": function () { },
  "calculateNormalizedScreenSpaceMatrix": function () { },
  "calculateScreenSpaceMatrix": function () { },
  "calculateSpriteMatrix": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "emptyPool": function () { },
  "getFilterTexture": function () { },
  "getOptimalFilterTexture": function () { },
  "getRenderTarget": function () { },
  "pop": function () { },
  "push": function () { },
  "resize": function () { },
  "returnFilterTexture": function () { },
  "returnRenderTarget": function () { }
};
PIXI.systems.FramebufferSystem.prototype = {
  "bind": function () { },
  "clear": function () { },
  "constructor": function () { },
  "contextChange": function () { },
  "destroy": function () { },
  "disposeAll": function () { },
  "disposeFramebuffer": function () { },
  "initFramebuffer": function () { },
  "reset": function () { },
  "resizeFramebuffer": function () { },
  "setViewport": function () { },
  "updateFramebuffer": function () { }
};
PIXI.systems.GeometrySystem.prototype = {
  "activateVao": function () { },
  "bind": function () { },
  "checkCompatibility": function () { },
  "constructor": function () { },
  "contextChange": function () { },
  "destroy": function () { },
  "disposeAll": function () { },
  "disposeBuffer": function () { },
  "disposeGeometry": function () { },
  "draw": function () { },
  "getSignature": function () { },
  "initGeometryVao": function () { },
  "reset": function () { },
  "unbind": function () { },
  "updateBuffers": function () { }
};
PIXI.systems.MaskSystem.prototype = {
  "constructor": function () { },
  "destroy": function () { },
  "pop": function () { },
  "popScissorMask": function () { },
  "popSpriteMask": function () { },
  "popStencilMask": function () { },
  "push": function () { },
  "pushScissorMask": function () { },
  "pushSpriteMask": function () { },
  "pushStencilMask": function () { }
};
PIXI.systems.ProjectionSystem.prototype = {
  "calculateProjection": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "setTransform": function () { },
  "update": function () { }
};
PIXI.systems.RenderTextureSystem.prototype = {
  "bind": function () { },
  "clear": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "reset": function () { },
  "resize": function () { }
};
PIXI.systems.ShaderSystem.prototype = {
  "bind": function () { },
  "constructor": function () { },
  "contextChange": function () { },
  "createSyncGroups": function () { },
  "destroy": function () { },
  "generateShader": function () { },
  "getSignature": function () { },
  "getglProgram": function () { },
  "reset": function () { },
  "setUniforms": function () { },
  "syncUniformGroup": function () { },
  "syncUniforms": function () { },
  "systemCheck": function () { }
};
PIXI.systems.StateSystem.prototype = {
  "constructor": function () { },
  "contextChange": function () { },
  "destroy": function () { },
  "forceState": function () { },
  "reset": function () { },
  "set": function () { },
  "setBlend": function () { },
  "setBlendMode": function () { },
  "setCullFace": function () { },
  "setDepthTest": function () { },
  "setFrontFace": function () { },
  "setOffset": function () { },
  "setPolygonOffset": function () { },
  "setState": function () { },
  "updateCheck": function () { }
};
PIXI.systems.StencilSystem.prototype = {
  "_getBitwiseMask": function () { },
  "_useCurrent": function () { },
  "constructor": function () { },
  "destroy": function () { },
  "popStencil": function () { },
  "pushStencil": function () { },
  "setMaskStack": function () { }
};
PIXI.systems.TextureGCSystem.prototype = {
  "constructor": function () { },
  "destroy": function () { },
  "postrender": function () { },
  "run": function () { },
  "unload": function () { }
};
PIXI.systems.TextureSystem.prototype = {
  "bind": function () { },
  "constructor": function () { },
  "contextChange": function () { },
  "destroy": function () { },
  "destroyTexture": function () { },
  "initTexture": function () { },
  "initTextureType": function () { },
  "reset": function () { },
  "setStyle": function () { },
  "unbind": function () { },
  "updateTexture": function () { },
  "updateTextureStyle": function () { }
};
PIXI.utils.CanvasRenderTarget.prototype = {
  "clear": function () { },
  "destroy": function () { },
  "resize": function () { }
};
PIXI.utils.EventEmitter.prototype = {
  "addListener": function () { },
  "emit": function () { },
  "eventNames": function () { },
  "listenerCount": function () { },
  "listeners": function () { },
  "off": function () { },
  "on": function () { },
  "once": function () { },
  "removeAllListeners": function () { },
  "removeListener": function () { }
};
PIXI.utils.url.Url.prototype = {
  "format": function () { },
  "parse": function () { },
  "parseHost": function () { },
  "resolve": function () { },
  "resolveObject": function () { }
};
/**********************************************************************
 * End Generated Extern for PIXI
/**********************************************************************/