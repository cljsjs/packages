/**********************************************************************
 * Extern for BigInteger
 * Generated by http://jmmk.github.io/javascript-externs-generator
 *
 * NOTE: this was first generated using jsbn.js, then hand edited to add
 *  extra functions found inside jsbn2.js
 **********************************************************************/
var BigInteger = {
  "ZERO": {
    "t": {},
    "s": {},
    "am": function () {},
    "DB": {},
    "DM": {},
    "DV": {},
    "FV": {},
    "F1": {},
    "F2": {},
    "copyTo": function () {},
    "fromInt": function () {},
    "fromString": function () {},
    "clamp": function () {},
    "dlShiftTo": function () {},
    "drShiftTo": function () {},
    "lShiftTo": function () {},
    "rShiftTo": function () {},
    "subTo": function () {},
    "multiplyTo": function () {},
    "squareTo": function () {},
    "divRemTo": function () {},
    "invDigit": function () {},
    "isEven": function () {},
    "exp": function () {},
    "toString": function () {},
    "negate": function () {},
    "abs": function () {},
    "compareTo": function () {},
    "bitLength": function () {},
    "mod": function () {},
    "modPowInt": function () {}
  },
  "ONE": {
    "0": {},
    "t": {},
    "s": {},
    "am": function () {},
    "DB": {},
    "DM": {},
    "DV": {},
    "FV": {},
    "F1": {},
    "F2": {},
    "copyTo": function () {},
    "fromInt": function () {},
    "fromString": function () {},
    "clamp": function () {},
    "dlShiftTo": function () {},
    "drShiftTo": function () {},
    "lShiftTo": function () {},
    "rShiftTo": function () {},
    "subTo": function () {},
    "multiplyTo": function () {},
    "squareTo": function () {},
    "divRemTo": function () {},
    "invDigit": function () {},
    "isEven": function () {},
    "exp": function () {},
    "toString": function () {},
    "negate": function () {},
    "abs": function () {},
    "compareTo": function () {},
    "bitLength": function () {},
    "mod": function () {},
    "modPowInt": function () {}
  }
};
BigInteger.prototype = {
  "am": function () {},
  "DB": function () {},
  "DM": function () {},
  "DV": function () {},
  "FV": function () {},
  "F1": function () {},
  "F2": function () {},
  "copyTo": function () {},
  "fromInt": function () {},
  "fromString": function () {},
  "clamp": function () {},
  "dlShiftTo": function () {},
  "drShiftTo": function () {},
  "lShiftTo": function () {},
  "rShiftTo": function () {},
  "subTo": function () {},
  "multiplyTo": function () {},
  "squareTo": function () {},
  "divRemTo": function () {},
  "invDigit": function () {},
  "isEven": function () {},
  "exp": function () {},
  "toString": function () {},
  "negate": function () {},
  "abs": function () {},
  "compareTo": function () {},
  "bitLength": function () {},
  "mod": function () {},
  "modPowInt": function () {},

  // The following lines were added manually for jsbn2.js: 
  "clone": function () {},
  "intValue": function () {},
  "byteValue": function () {},
  "shortValue": function () {},
  "signum": function () {},
  "toByteArray": function () {},
  "equals": function () {},
  "min": function () {},
  "max": function () {},
  "and": function () {},
  "or": function () {},
  "xor": function () {},
  "andNot": function () {},
  "not": function () {},
  "shiftLeft": function () {},
  "shiftRight": function () {},
  "getLowestSetBit": function () {},
  "bitCount": function () {},
  "testBit": function () {},
  "setBit": function () {},
  "clearBit": function () {},
  "flipBit": function () {},
  "add": function () {},
  "subtract": function () {},
  "multiply": function () {},
  "divide": function () {},
  "remainder": function () {},
  "divideAndRemainder": function () {},
  "modPow": function () {},
  "modInverse": function () {},
  "pow": function () {},
  "gcd": function () {},
  "isProbablePrime": function () {}
};
