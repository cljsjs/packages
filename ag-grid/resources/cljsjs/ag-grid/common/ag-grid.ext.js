/**********************************************************************
 * Extern for agGrid
 * Generated by http://jmmk.github.io/javascript-externs-generator
 **********************************************************************/
var agGrid = {
    "BalancedColumnTreeBuilder": function () {},
    "ColumnController": {
        "GROUP_AUTO_COLUMN_ID": {}
    },
    "ColumnKeyCreator": function () {},
    "ColumnUtils": function () {},
    "DisplayedGroupCreator": function () {},
    "GroupInstanceIdCreator": function () {},
    "ComponentUtil": {
        "getEventCallbacks": function () {},
        "copyAttributesToGridOptions": function () {},
        "getCallbackForEvent": function () {},
        "processOnChange": function () {},
        "toBoolean": function () {},
        "toNumber": function () {},
        "EVENTS": {},
        "STRING_PROPERTIES": {},
        "OBJECT_PROPERTIES": {},
        "ARRAY_PROPERTIES": {},
        "NUMBER_PROPERTIES": {},
        "BOOLEAN_PROPERTIES": {},
        "FUNCTION_PROPERTIES": {},
        "ALL_PROPERTIES": {}
    },
    "initialiseAgGridWithAngular1": function () {},
    "initialiseAgGridWithWebComponents": function () {},
    "BeanStub": function () {},
    "Context": function () {},
    "Autowired": function () {},
    "PostConstruct": function () {},
    "PreDestroy": function () {},
    "Optional": function () {},
    "Bean": function () {},
    "Qualifier": function () {},
    "Listener": function () {},
    "QuerySelector": function () {},
    "HDirection": {
        "0": {},
        "1": {},
        "Left": {},
        "Right": {}
    },
    "VDirection": {
        "0": {},
        "1": {},
        "Up": {},
        "Down": {}
    },
    "DragAndDropService": {
        "ICON_PINNED": {},
        "ICON_ADD": {},
        "ICON_MOVE": {},
        "ICON_LEFT": {},
        "ICON_RIGHT": {},
        "ICON_GROUP": {},
        "ICON_AGGREGATE": {},
        "ICON_PIVOT": {},
        "ICON_NOT_ALLOWED": {},
        "GHOST_TEMPLATE": {}
    },
    "DragService": function () {},
    "DragSourceType": {
        "0": {},
        "1": {},
        "ToolPanel": {},
        "HeaderCell": {}
    },
    "Column": {
        "EVENT_MOVING_CHANGED": {},
        "EVENT_LEFT_CHANGED": {},
        "EVENT_WIDTH_CHANGED": {},
        "EVENT_LAST_LEFT_PINNED_CHANGED": {},
        "EVENT_FIRST_RIGHT_PINNED_CHANGED": {},
        "EVENT_VISIBLE_CHANGED": {},
        "EVENT_FILTER_CHANGED": {},
        "EVENT_SORT_CHANGED": {},
        "EVENT_ROW_GROUP_CHANGED": {},
        "EVENT_PIVOT_CHANGED": {},
        "EVENT_VALUE_CHANGED": {},
        "PINNED_RIGHT": {},
        "PINNED_LEFT": {},
        "SORT_ASC": {},
        "SORT_DESC": {}
    },
    "ColumnGroup": {
        "createUniqueId": function () {},
        "HEADER_GROUP_SHOW_OPEN": {},
        "HEADER_GROUP_SHOW_CLOSED": {},
        "EVENT_LEFT_CHANGED": {},
        "EVENT_DISPLAYED_CHILDREN_CHANGED": {}
    },
    "GridCell": function () {},
    "GridRow": function () {},
    "OriginalColumnGroup": {
        "EVENT_EXPANDED_CHANGED": {}
    },
    "RowNode": {
        "EVENT_ROW_SELECTED": {},
        "EVENT_DATA_CHANGED": {},
        "EVENT_CELL_CHANGED": {},
        "EVENT_MOUSE_ENTER": {},
        "EVENT_MOUSE_LEAVE": {},
        "EVENT_HEIGHT_CHANGED": {},
        "EVENT_TOP_CHANGED": {},
        "EVENT_ROW_INDEX_CHANGED": {},
        "EVENT_EXPANDED_CHANGED": {}
    },
    "FilterManager": function () {},
    "NumberFilter": {
        "EQUALS": {},
        "NOT_EQUAL": {},
        "LESS_THAN": {},
        "LESS_THAN_OR_EQUAL": {},
        "GREATER_THAN": {},
        "GREATER_THAN_OR_EQUAL": {}
    },
    "TextFilter": {
        "CONTAINS": {},
        "EQUALS": {},
        "NOT_EQUALS": {},
        "STARTS_WITH": {},
        "ENDS_WITH": {}
    },
    "GridPanel": function () {},
    "ScrollVisibleService": function () {},
    "MouseEventService": function () {},
    "BodyDropPivotTarget": function () {},
    "BodyDropTarget": function () {},
    "CssClassApplier": {
        "addHeaderClassesFromColDef": function () {},
        "addToolPanelClassesFromColDef": function () {},
        "addColumnClassesFromCollDef": function () {}
    },
    "HeaderContainer": function () {},
    "HeaderRenderer": function () {},
    "HeaderRowComp": {
        "EVENT_VISIBLE_CHANGED": {}
    },
    "HeaderTemplateLoader": {
        "HEADER_CELL_TEMPLATE": {}
    },
    "HorizontalDragService": function () {},
    "MoveColumnController": function () {},
    "RenderedHeaderCell": {
        "EVENT_VISIBLE_CHANGED": {}
    },
    "StandardMenuFactory": function () {},
    "BorderLayout": {
        "TEMPLATE_FULL_HEIGHT": {},
        "TEMPLATE_NORMAL": {},
        "TEMPLATE_DONT_FILL": {}
    },
    "TabbedLayout": {
        "TEMPLATE": {}
    },
    "VerticalStack": function () {},
    "FocusService": function () {},
    "MethodNotImplementedException": function () {},
    "LargeTextCellEditor": {
        "EVENT_VISIBLE_CHANGED": {},
        "TEMPLATE": {}
    },
    "PopupEditorWrapper": {
        "EVENT_VISIBLE_CHANGED": {}
    },
    "PopupSelectCellEditor": {
        "EVENT_VISIBLE_CHANGED": {}
    },
    "PopupTextCellEditor": {
        "EVENT_VISIBLE_CHANGED": {},
        "TEMPLATE": {}
    },
    "SelectCellEditor": {
        "EVENT_VISIBLE_CHANGED": {}
    },
    "TextCellEditor": {
        "EVENT_VISIBLE_CHANGED": {},
        "TEMPLATE": {}
    },
    "AnimateShowChangeCellRenderer": {
        "EVENT_VISIBLE_CHANGED": {},
        "TEMPLATE": {}
    },
    "AnimateSlideCellRenderer": {
        "EVENT_VISIBLE_CHANGED": {},
        "TEMPLATE": {}
    },
    "GroupCellRenderer": {
        "EVENT_VISIBLE_CHANGED": {},
        "TEMPLATE": {}
    },
    "SetLeftFeature": function () {},
    "AutoWidthCalculator": function () {},
    "CellEditorFactory": {
        "TEXT": {},
        "SELECT": {},
        "POPUP_TEXT": {},
        "POPUP_SELECT": {},
        "LARGE_TEXT": {}
    },
    "CellRendererFactory": {
        "ANIMATE_SLIDE": {},
        "ANIMATE_SHOW_CHANGE": {},
        "GROUP": {}
    },
    "CellRendererService": function () {},
    "CheckboxSelectionComponent": {
        "EVENT_VISIBLE_CHANGED": {}
    },
    "RenderedCell": {
        "EVENT_VISIBLE_CHANGED": {},
        "PRINTABLE_CHARACTERS": {}
    },
    "RenderedRow": {
        "EVENT_RENDERED_ROW_REMOVED": {}
    },
    "RowRenderer": function () {},
    "ValueFormatterService": function () {},
    "FilterStage": function () {},
    "FlattenStage": function () {},
    "InMemoryRowModel": function () {},
    "SortStage": function () {},
    "InMemoryNodeManager": {
        "TOP_LEVEL": {}
    },
    "FloatingRowModel": function () {},
    "PaginationController": function () {},
    "VirtualPageRowModel": function () {},
    "VirtualPageCache": function () {},
    "VirtualPage": {
        "EVENT_LOAD_COMPLETE": {},
        "STATE_DIRTY": {},
        "STATE_LOADING": {},
        "STATE_LOADED": {},
        "STATE_FAILED": {}
    },
    "StylingService": function () {},
    "AgCheckbox": {
        "EVENT_VISIBLE_CHANGED": {},
        "EVENT_CHANGED": {},
        "TEMPLATE": {}
    },
    "Component": {
        "EVENT_VISIBLE_CHANGED": {}
    },
    "PopupService": function () {},
    "TouchListener": {
        "EVENT_TAP": {},
        "EVENT_LONG_TAP": {}
    },
    "BaseFrameworkFactory": function () {},
    "CellNavigationService": function () {},
    "ColumnChangeEvent": function () {},
    "Constants": {
        "STEP_EVERYTHING": {},
        "STEP_FILTER": {},
        "STEP_SORT": {},
        "STEP_MAP": {},
        "STEP_AGGREGATE": {},
        "STEP_PIVOT": {},
        "ROW_BUFFER_SIZE": {},
        "LAYOUT_INTERVAL": {},
        "KEY_BACKSPACE": {},
        "KEY_TAB": {},
        "KEY_ENTER": {},
        "KEY_SHIFT": {},
        "KEY_ESCAPE": {},
        "KEY_SPACE": {},
        "KEY_LEFT": {},
        "KEY_UP": {},
        "KEY_RIGHT": {},
        "KEY_DOWN": {},
        "KEY_DELETE": {},
        "KEY_A": {},
        "KEY_C": {},
        "KEY_V": {},
        "KEY_D": {},
        "KEY_F2": {},
        "KEY_PAGE_UP": {},
        "KEY_PAGE_DOWN": {},
        "KEY_PAGE_HOME": {},
        "KEY_PAGE_END": {},
        "KEY_PAGE_UP_NAME": {},
        "KEY_PAGE_DOWN_NAME": {},
        "KEY_PAGE_HOME_NAME": {},
        "KEY_PAGE_END_NAME": {},
        "KEY_CTRL_UP_NAME": {},
        "KEY_CTRL_LEFT_NAME": {},
        "KEY_CTRL_RIGHT_NAME": {},
        "KEY_CTRL_DOWN_NAME": {},
        "ROW_MODEL_TYPE_PAGINATION": {},
        "ROW_MODEL_TYPE_VIRTUAL": {},
        "ROW_MODEL_TYPE_VIEWPORT": {},
        "ROW_MODEL_TYPE_NORMAL": {},
        "ALWAYS": {},
        "ONLY_WHEN_GROUPING": {},
        "FLOATING_TOP": {},
        "FLOATING_BOTTOM": {},
        "VERTICAL_SCROLL_KEYS_ID": {},
        "HORIZONTAL_SCROLL_KEYS_ID": {},
        "DIAGONAL_SCROLL_KEYS_ID": {},
        "VERTICAL_SCROLL_KEYS": {
            "id": {},
            "bindings": {}
        },
        "HORIZONTAL_SCROLL_KEYS": {
            "id": {},
            "bindings": {}
        },
        "DIAGONAL_SCROLL_KEYS": {
            "id": {},
            "bindings": {}
        }
    },
    "CsvCreator": function () {},
    "Downloader": function () {},
    "Events": {
        "EVENT_COLUMN_EVERYTHING_CHANGED": {},
        "EVENT_NEW_COLUMNS_LOADED": {},
        "EVENT_COLUMN_PIVOT_MODE_CHANGED": {},
        "EVENT_COLUMN_ROW_GROUP_CHANGED": {},
        "EVENT_COLUMN_PIVOT_CHANGED": {},
        "EVENT_GRID_COLUMNS_CHANGED": {},
        "EVENT_COLUMN_VALUE_CHANGED": {},
        "EVENT_COLUMN_MOVED": {},
        "EVENT_COLUMN_VISIBLE": {},
        "EVENT_COLUMN_PINNED": {},
        "EVENT_COLUMN_GROUP_OPENED": {},
        "EVENT_COLUMN_RESIZED": {},
        "EVENT_DISPLAYED_COLUMNS_CHANGED": {},
        "EVENT_VIRTUAL_COLUMNS_CHANGED": {},
        "EVENT_ROW_GROUP_OPENED": {},
        "EVENT_ROW_DATA_CHANGED": {},
        "EVENT_FLOATING_ROW_DATA_CHANGED": {},
        "EVENT_RANGE_SELECTION_CHANGED": {},
        "EVENT_MODEL_UPDATED": {},
        "EVENT_CELL_CLICKED": {},
        "EVENT_CELL_DOUBLE_CLICKED": {},
        "EVENT_CELL_CONTEXT_MENU": {},
        "EVENT_CELL_VALUE_CHANGED": {},
        "EVENT_ROW_VALUE_CHANGED": {},
        "EVENT_CELL_FOCUSED": {},
        "EVENT_ROW_SELECTED": {},
        "EVENT_SELECTION_CHANGED": {},
        "EVENT_CELL_MOUSE_OVER": {},
        "EVENT_CELL_MOUSE_OUT": {},
        "EVENT_COLUMN_HOVER_CHANGED": {},
        "EVENT_BEFORE_FILTER_CHANGED": {},
        "EVENT_FILTER_CHANGED": {},
        "EVENT_AFTER_FILTER_CHANGED": {},
        "EVENT_FILTER_MODIFIED": {},
        "EVENT_BEFORE_SORT_CHANGED": {},
        "EVENT_SORT_CHANGED": {},
        "EVENT_AFTER_SORT_CHANGED": {},
        "EVENT_VIRTUAL_ROW_REMOVED": {},
        "EVENT_ROW_CLICKED": {},
        "EVENT_ROW_DOUBLE_CLICKED": {},
        "EVENT_GRID_READY": {},
        "EVENT_GRID_SIZE_CHANGED": {},
        "EVENT_VIEWPORT_CHANGED": {},
        "EVENT_DRAG_STARTED": {},
        "EVENT_DRAG_STOPPED": {},
        "EVENT_ROW_EDITING_STARTED": {},
        "EVENT_ROW_EDITING_STOPPED": {},
        "EVENT_CELL_EDITING_STARTED": {},
        "EVENT_CELL_EDITING_STOPPED": {},
        "EVENT_ITEMS_ADDED": {},
        "EVENT_ITEMS_REMOVED": {},
        "EVENT_BODY_SCROLL": {},
        "EVENT_FLASH_CELLS": {},
        "EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED": {},
        "EVENT_SCROLL_VISIBILITY_CHANGED": {},
        "EVENT_COLUMN_ROW_GROUP_CHANGE_REQUEST": {},
        "EVENT_COLUMN_PIVOT_CHANGE_REQUEST": {},
        "EVENT_COLUMN_VALUE_CHANGE_REQUEST": {},
        "EVENT_COLUMN_AGG_FUNC_CHANGE_REQUEST": {}
    },
    "EventService": {
        "PRIORITY": {}
    },
    "ExpressionService": function () {},
    "FocusedCellController": function () {},
    "defaultGroupComparator": function () {},
    "Grid": {
        "setEnterpriseBeans": function () {},
        "setFrameworkBeans": function () {},
        "RowModelClasses": {
            "virtual": function () {},
            "pagination": function () {},
            "normal": function () {}
        }
    },
    "GridApi": function () {},
    "GridCore": function () {},
    "GridOptionsWrapper": {
        "MIN_COL_WIDTH": {},
        "PROP_HEADER_HEIGHT": {}
    },
    "Logger": function () {},
    "MasterSlaveService": function () {},
    "SelectionController": function () {},
    "SortController": {
        "DEFAULT_SORTING_ORDER": {}
    },
    "SvgFactory": {
        "getInstance": function () {},
        "getFromCacheOrCreate": function () {},
        "imageCache": {},
        "theInstance": {
            "createFilterSvg": function () {},
            "createFilterSvg12": function () {},
            "createMenuSvg": function () {},
            "createColumnsSvg12": function () {},
            "createArrowUpSvg": function () {},
            "createArrowLeftSvg": function () {},
            "createArrowDownSvg": function () {},
            "createArrowRightSvg": function () {},
            "createSmallArrowRightSvg": function () {},
            "createSmallArrowLeftSvg": function () {},
            "createSmallArrowDownSvg": function () {},
            "createArrowUpDownSvg": function () {},
            "createFolderOpen": function () {},
            "createFolderClosed": function () {},
            "createColumnIcon": function () {},
            "createColumnsIcon": function () {},
            "createPinIcon": function () {},
            "createPlusIcon": function () {},
            "createMinusIcon": function () {},
            "createMoveIcon": function () {},
            "createLeftIcon": function () {},
            "createRightIcon": function () {},
            "createColumnVisibleIcon": function () {},
            "createColumnHiddenIcon": function () {},
            "createColumnIndeterminateIcon": function () {},
            "createGroupIcon": function () {},
            "createPivotIcon": function () {},
            "createAggregationIcon": function () {},
            "createDropNotAllowedIcon": function () {},
            "createGroupIcon12": function () {},
            "createCutIcon": function () {},
            "createCopyIcon": function () {},
            "createPasteIcon": function () {},
            "createMenuIcon": function () {},
            "createCheckboxCheckedIcon": function () {},
            "createCheckboxCheckedReadOnlyIcon": function () {},
            "createCheckboxUncheckedIcon": function () {},
            "createCheckboxUncheckedReadOnlyIcon": function () {},
            "createCheckboxIndeterminateIcon": function () {},
            "createCheckboxIndeterminateReadOnlyIcon": function () {},
            "createGroupExpandedIcon": function () {},
            "createGroupContractedIcon": function () {}
        }
    },
    "TemplateService": function () {},
    "Utils": {
        "areEventsNear": function () {},
        "shallowCompare": function () {},
        "getNameOfClass": function () {},
        "values": function () {},
        "getValueUsingField": function () {},
        "getScrollLeft": function () {},
        "cleanNumber": function () {},
        "setScrollLeft": function () {},
        "iterateObject": function () {},
        "cloneObject": function () {},
        "map": function () {},
        "mapObject": function () {},
        "forEach": function () {},
        "filter": function () {},
        "mergeDeep": function () {},
        "assign": function () {},
        "parseYyyyMmDdToDate": function () {},
        "serializeDateToYyyyMmDd": function () {},
        "pad": function () {},
        "pushAll": function () {},
        "getFunctionParameters": function () {},
        "find": function () {},
        "toStrings": function () {},
        "iterateArray": function () {},
        "isNode": function () {},
        "isElement": function () {},
        "isNodeOrElement": function () {},
        "addChangeListener": function () {},
        "makeNull": function () {},
        "missing": function () {},
        "missingOrEmpty": function () {},
        "missingOrEmptyObject": function () {},
        "exists": function () {},
        "anyExists": function () {},
        "existsAndNotEmpty": function () {},
        "removeAllChildren": function () {},
        "removeElement": function () {},
        "removeFromParent": function () {},
        "isVisible": function () {},
        "loadTemplate": function () {},
        "addOrRemoveCssClass": function () {},
        "callIfPresent": function () {},
        "addCssClass": function () {},
        "containsClass": function () {},
        "getElementAttribute": function () {},
        "offsetHeight": function () {},
        "offsetWidth": function () {},
        "removeCssClass": function () {},
        "removeRepeatsFromArray": function () {},
        "removeFromArray": function () {},
        "removeAllFromArray": function () {},
        "insertIntoArray": function () {},
        "insertArrayIntoArray": function () {},
        "moveInArray": function () {},
        "defaultComparator": function () {},
        "compareArrays": function () {},
        "toStringOrNull": function () {},
        "formatWidth": function () {},
        "formatNumberTwoDecimalPlacesAndCommas": function () {},
        "prependDC": function () {},
        "createIcon": function () {},
        "createIconNoSpan": function () {},
        "addStylesToElement": function () {},
        "isHorizontalScrollShowing": function () {},
        "isVerticalScrollShowing": function () {},
        "getScrollbarWidth": function () {},
        "isKeyPressed": function () {},
        "setVisible": function () {},
        "isBrowserIE": function () {},
        "isBrowserEdge": function () {},
        "isBrowserSafari": function () {},
        "isBrowserChrome": function () {},
        "isBrowserFirefox": function () {},
        "getTarget": function () {},
        "getBodyWidth": function () {},
        "getBodyHeight": function () {},
        "setCheckboxState": function () {},
        "traverseNodesWithKey": function () {},
        "isNumeric": function () {},
        "normalizeWheel": function () {}
    },
    "NumberSequence": function () {},
    "ValueService": function () {},
    "XmlFactory": function () {},
    "GridSerializer": function () {},
    "BaseGridSerializingSession": function () {},
    "RowType": {
        "0": {},
        "1": {},
        "2": {},
        "HEADER_GROUPING": {},
        "HEADER": {},
        "BODY": {}
    }
};
agGrid.BalancedColumnTreeBuilder.prototype = {
    "setBeans": function () {},
    "createBalancedColumnGroups": function () {},
    "balanceColumnTree": function () {},
    "findMaxDept": function () {},
    "recursivelyCreateColumns": function () {},
    "createColumnGroup": function () {},
    "createMergedColGroupDef": function () {},
    "createColumn": function () {},
    "checkForDeprecatedItems": function () {},
    "isColumnGroup": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.ColumnController.prototype = {
    "init": function () {},
    "setVirtualViewportLeftAndRight": function () {},
    "getDisplayedColumnsStartingAt": function () {},
    "checkDisplayedVirtualColumns": function () {},
    "setVirtualViewportPosition": function () {},
    "isPivotMode": function () {},
    "setPivotMode": function () {},
    "getSecondaryPivotColumn": function () {},
    "setBeans": function () {},
    "setFirstRightAndLastLeftPinned": function () {},
    "autoSizeColumns": function () {},
    "autoSizeColumn": function () {},
    "autoSizeAllColumns": function () {},
    "getColumnsFromTree": function () {},
    "getAllDisplayedColumnGroups": function () {},
    "getPrimaryColumnTree": function () {},
    "getHeaderRowCount": function () {},
    "getLeftDisplayedColumnGroups": function () {},
    "getRightDisplayedColumnGroups": function () {},
    "getCenterDisplayedColumnGroups": function () {},
    "getDisplayedColumnGroups": function () {},
    "isColumnDisplayed": function () {},
    "getAllDisplayedColumns": function () {},
    "getAllDisplayedVirtualColumns": function () {},
    "getPinnedLeftContainerWidth": function () {},
    "getPinnedRightContainerWidth": function () {},
    "updatePrimaryColumnList": function () {},
    "setRowGroupColumns": function () {},
    "setRowGroupActive": function () {},
    "addRowGroupColumn": function () {},
    "addRowGroupColumns": function () {},
    "removeRowGroupColumns": function () {},
    "removeRowGroupColumn": function () {},
    "addPivotColumns": function () {},
    "setPivotColumns": function () {},
    "addPivotColumn": function () {},
    "removePivotColumns": function () {},
    "removePivotColumn": function () {},
    "setPrimaryColumnList": function () {},
    "setValueColumns": function () {},
    "setValueActive": function () {},
    "addValueColumns": function () {},
    "addValueColumn": function () {},
    "removeValueColumn": function () {},
    "removeValueColumns": function () {},
    "normaliseColumnWidth": function () {},
    "getPrimaryOrGridColumn": function () {},
    "setColumnWidth": function () {},
    "setColumnAggFunc": function () {},
    "moveRowGroupColumn": function () {},
    "moveColumns": function () {},
    "doesMovePassRules": function () {},
    "moveColumn": function () {},
    "moveColumnByIndex": function () {},
    "getBodyContainerWidth": function () {},
    "getContainerWidth": function () {},
    "updateBodyWidths": function () {},
    "getValueColumns": function () {},
    "getPivotColumns": function () {},
    "isPivotActive": function () {},
    "getRowGroupColumns": function () {},
    "getDisplayedCenterColumns": function () {},
    "getDisplayedLeftColumns": function () {},
    "getDisplayedRightColumns": function () {},
    "getDisplayedColumns": function () {},
    "getAllPrimaryColumns": function () {},
    "getAllGridColumns": function () {},
    "isEmpty": function () {},
    "isRowGroupEmpty": function () {},
    "setColumnVisible": function () {},
    "setColumnsVisible": function () {},
    "setColumnPinned": function () {},
    "setColumnsPinned": function () {},
    "actionOnGridColumns": function () {},
    "getDisplayedColBefore": function () {},
    "getDisplayedColAfter": function () {},
    "isPinningLeft": function () {},
    "isPinningRight": function () {},
    "getPrimaryAndSecondaryAndAutoColumns": function () {},
    "createStateItemFromColumn": function () {},
    "getColumnState": function () {},
    "orderColumnStateList": function () {},
    "resetColumnState": function () {},
    "setColumnState": function () {},
    "sortColumnListUsingIndexes": function () {},
    "syncColumnWithNoState": function () {},
    "syncColumnWithStateItem": function () {},
    "getGridColumns": function () {},
    "getColumns": function () {},
    "getColumnWithValidation": function () {},
    "getPrimaryColumn": function () {},
    "getGridColumn": function () {},
    "getColumn": function () {},
    "getDisplayNameForColumn": function () {},
    "getDisplayNameForColumnGroup": function () {},
    "getHeaderName": function () {},
    "wrapHeaderNameWithAggFunc": function () {},
    "getColumnGroup": function () {},
    "setColumnDefs": function () {},
    "isReady": function () {},
    "extractRowGroupColumns": function () {},
    "extractPivotColumns": function () {},
    "setColumnGroupOpened": function () {},
    "getColumnGroupState": function () {},
    "setColumnGroupState": function () {},
    "calculateColumnsForDisplay": function () {},
    "createColumnsToDisplayFromValueColumns": function () {},
    "updateDisplayedColumns": function () {},
    "isSecondaryColumnsPresent": function () {},
    "setSecondaryColumns": function () {},
    "processSecondaryColumnDefinitions": function () {},
    "copyDownGridColumns": function () {},
    "clearDisplayedColumns": function () {},
    "updateGroupsAndDisplayedColumns": function () {},
    "updateDisplayedColumnsFromTrees": function () {},
    "setupAllDisplayedColumns": function () {},
    "setLeftValues": function () {},
    "setLeftValuesOfColumns": function () {},
    "setLeftValuesOfGroups": function () {},
    "addToDisplayedColumns": function () {},
    "updateDisplayedCenterVirtualColumns": function () {},
    "getVirtualHeaderGroupRow": function () {},
    "updateDisplayedVirtualGroups": function () {},
    "updateVirtualSets": function () {},
    "filterOutColumnsWithinViewport": function () {},
    "sizeColumnsToFit": function () {},
    "buildDisplayedTrees": function () {},
    "updateGroups": function () {},
    "createGroupAutoColumn": function () {},
    "createValueColumns": function () {},
    "getWidthOfColsInList": function () {},
    "getGridBalancedTree": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.ColumnKeyCreator.prototype = {
    "getUniqueKey": function () {}
};
agGrid.ColumnUtils.prototype = {
    "calculateColInitialWidth": function () {},
    "getOriginalPathForColumn": function () {},
    "depthFirstOriginalTreeSearch": function () {},
    "depthFirstAllColumnTreeSearch": function () {},
    "depthFirstDisplayedColumnTreeSearch": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.DisplayedGroupCreator.prototype = {
    "createDisplayedGroups": function () {},
    "createColumnGroup": function () {},
    "mapOldGroupsById": function () {},
    "setupParentsIntoColumns": function () {},
    "createFakePath": function () {},
    "getOriginalPathForColumn": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.GroupInstanceIdCreator.prototype = {
    "getInstanceIdForKey": function () {}
};
agGrid.BeanStub.prototype = {
    "destroy": function () {},
    "addEventListener": function () {},
    "removeEventListener": function () {},
    "dispatchEventAsync": function () {},
    "dispatchEvent": function () {},
    "addDestroyableEventListener": function () {},
    "addDestroyFunc": function () {}
};
agGrid.Context.prototype = {
    "setupComponents": function () {},
    "addComponent": function () {},
    "createComponent": function () {},
    "copyAttributesFromNode": function () {},
    "wireBean": function () {},
    "wireBeans": function () {},
    "createBeans": function () {},
    "createBeanEntry": function () {},
    "autoWireBeans": function () {},
    "methodWireBeans": function () {},
    "autoWireBean": function () {},
    "getBeanName": function () {},
    "methodWireBean": function () {},
    "getBeansForParameters": function () {},
    "lookupBeanInstance": function () {},
    "postConstruct": function () {},
    "getBean": function () {},
    "destroy": function () {}
};
agGrid.DragAndDropService.prototype = {
    "init": function () {},
    "setBeans": function () {},
    "addDragSource": function () {},
    "removeDragSource": function () {},
    "destroy": function () {},
    "nudge": function () {},
    "onDragStart": function () {},
    "onDragStop": function () {},
    "onDragging": function () {},
    "enterDragTargetIfExists": function () {},
    "leaveLastTargetIfExists": function () {},
    "getAllContainersFromDropTarget": function () {},
    "isMouseOnDropTarget": function () {},
    "addDropTarget": function () {},
    "workOutHDirection": function () {},
    "workOutVDirection": function () {},
    "createDropTargetEvent": function () {},
    "positionGhost": function () {},
    "removeGhost": function () {},
    "createGhost": function () {},
    "setGhostIcon": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.DragService.prototype = {
    "init": function () {},
    "destroy": function () {},
    "removeListener": function () {},
    "removeDragSource": function () {},
    "setNoSelectToBody": function () {},
    "addDragSource": function () {},
    "onTouchStart": function () {},
    "onMouseDown": function () {},
    "isEventNearStartEvent": function () {},
    "getFirstActiveTouch": function () {},
    "onCommonMove": function () {},
    "onTouchMove": function () {},
    "onMouseMove": function () {},
    "onTouchUp": function () {},
    "onMouseUp": function () {},
    "onUpCommon": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.Column.prototype = {
    "setParent": function () {},
    "getParent": function () {},
    "initialise": function () {},
    "getCellRenderer": function () {},
    "getCellEditor": function () {},
    "getFloatingCellRenderer": function () {},
    "getFilter": function () {},
    "getUniqueId": function () {},
    "isPrimary": function () {},
    "isFilterAllowed": function () {},
    "isFieldContainsDots": function () {},
    "isTooltipFieldContainsDots": function () {},
    "validate": function () {},
    "addEventListener": function () {},
    "removeEventListener": function () {},
    "createIsColumnFuncParams": function () {},
    "isSuppressNavigable": function () {},
    "isCellEditable": function () {},
    "setMoving": function () {},
    "isMoving": function () {},
    "getSort": function () {},
    "setSort": function () {},
    "isSortAscending": function () {},
    "isSortDescending": function () {},
    "isSortNone": function () {},
    "getSortedAt": function () {},
    "setSortedAt": function () {},
    "setAggFunc": function () {},
    "getAggFunc": function () {},
    "getLeft": function () {},
    "getOldLeft": function () {},
    "getRight": function () {},
    "setLeft": function () {},
    "isFilterActive": function () {},
    "setFilterActive": function () {},
    "setPinned": function () {},
    "setFirstRightPinned": function () {},
    "setLastLeftPinned": function () {},
    "isFirstRightPinned": function () {},
    "isLastLeftPinned": function () {},
    "isPinned": function () {},
    "isPinnedLeft": function () {},
    "isPinnedRight": function () {},
    "getPinned": function () {},
    "setVisible": function () {},
    "isVisible": function () {},
    "getColDef": function () {},
    "getColumnGroupShow": function () {},
    "getColId": function () {},
    "getId": function () {},
    "getDefinition": function () {},
    "getActualWidth": function () {},
    "setActualWidth": function () {},
    "isGreaterThanMax": function () {},
    "getMinWidth": function () {},
    "getMaxWidth": function () {},
    "setMinimum": function () {},
    "setRowGroupActive": function () {},
    "isRowGroupActive": function () {},
    "setPivotActive": function () {},
    "isPivotActive": function () {},
    "isAnyFunctionActive": function () {},
    "isAnyFunctionAllowed": function () {},
    "setValueActive": function () {},
    "isValueActive": function () {},
    "isAllowPivot": function () {},
    "isAllowValue": function () {},
    "isAllowRowGroup": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.ColumnGroup.prototype = {
    "reset": function () {},
    "getParent": function () {},
    "setParent": function () {},
    "getUniqueId": function () {},
    "checkLeft": function () {},
    "getLeft": function () {},
    "getOldLeft": function () {},
    "setLeft": function () {},
    "addEventListener": function () {},
    "removeEventListener": function () {},
    "getGroupId": function () {},
    "getInstanceId": function () {},
    "isChildInThisGroupDeepSearch": function () {},
    "getActualWidth": function () {},
    "getMinWidth": function () {},
    "addChild": function () {},
    "getDisplayedChildren": function () {},
    "getLeafColumns": function () {},
    "getDisplayedLeafColumns": function () {},
    "getDefinition": function () {},
    "getColGroupDef": function () {},
    "isPadding": function () {},
    "isExpandable": function () {},
    "isExpanded": function () {},
    "setExpanded": function () {},
    "addDisplayedLeafColumns": function () {},
    "addLeafColumns": function () {},
    "getChildren": function () {},
    "getColumnGroupShow": function () {},
    "getOriginalColumnGroup": function () {},
    "calculateDisplayedColumns": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.GridCell.prototype = {
    "getGridCellDef": function () {},
    "getGridRow": function () {},
    "toString": function () {},
    "createId": function () {}
};
agGrid.GridRow.prototype = {
    "isFloatingTop": function () {},
    "isFloatingBottom": function () {},
    "isNotFloating": function () {},
    "equals": function () {},
    "toString": function () {},
    "getGridCell": function () {},
    "before": function () {}
};
agGrid.OriginalColumnGroup.prototype = {
    "isPadding": function () {},
    "setExpanded": function () {},
    "isExpandable": function () {},
    "isExpanded": function () {},
    "getGroupId": function () {},
    "getId": function () {},
    "setChildren": function () {},
    "getChildren": function () {},
    "getColGroupDef": function () {},
    "getLeafColumns": function () {},
    "addLeafColumns": function () {},
    "getColumnGroupShow": function () {},
    "calculateExpandable": function () {},
    "addEventListener": function () {},
    "removeEventListener": function () {}
};
agGrid.RowNode.prototype = {
    "setData": function () {},
    "createDaemonNode": function () {},
    "setDataAndId": function () {},
    "setId": function () {},
    "clearRowTop": function () {},
    "setRowTop": function () {},
    "setRowHeight": function () {},
    "setRowIndex": function () {},
    "setExpanded": function () {},
    "dispatchLocalEvent": function () {},
    "setDataValue": function () {},
    "resetQuickFilterAggregateText": function () {},
    "isExpandable": function () {},
    "isSelected": function () {},
    "depthFirstSearch": function () {},
    "calculateSelectedFromChildren": function () {},
    "calculateSelectedFromChildrenBubbleUp": function () {},
    "setSelectedInitialValue": function () {},
    "setSelected": function () {},
    "setSelectedParams": function () {},
    "doRowRangeSelection": function () {},
    "isParentOfNode": function () {},
    "calculatedSelectedForAllGroupNodes": function () {},
    "selectThisNode": function () {},
    "selectChildNodes": function () {},
    "addEventListener": function () {},
    "removeEventListener": function () {},
    "onMouseEnter": function () {},
    "onMouseLeave": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.FilterManager.prototype = {
    "init": function () {},
    "registerFilter": function () {},
    "setFilterModel": function () {},
    "setModelOnFilterWrapper": function () {},
    "getFilterModel": function () {},
    "isAdvancedFilterPresent": function () {},
    "setAdvancedFilterPresent": function () {},
    "updateFilterFlagInColumns": function () {},
    "isAnyFilterPresent": function () {},
    "doesFilterPass": function () {},
    "parseQuickFilter": function () {},
    "setQuickFilter": function () {},
    "checkExternalFilter": function () {},
    "onFilterChanged": function () {},
    "isQuickFilterPresent": function () {},
    "doesRowPassOtherFilters": function () {},
    "doesRowPassFilter": function () {},
    "aggregateRowForQuickFilter": function () {},
    "onNewRowsLoaded": function () {},
    "createValueGetter": function () {},
    "getFilterComponent": function () {},
    "getOrCreateFilterWrapper": function () {},
    "createFilterInstance": function () {},
    "checkFilterHasAllMandatoryMethods": function () {},
    "createParams": function () {},
    "createFilterWrapper": function () {},
    "initialiseFilterAndPutIntoGui": function () {},
    "getFilterFromCache": function () {},
    "onNewColumnsLoaded": function () {},
    "destroyFilter": function () {},
    "disposeFilterWrapper": function () {},
    "destroy": function () {},
    "assertMethodHasNoParameters": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.NumberFilter.prototype = {
    "init": function () {},
    "onNewRowsLoaded": function () {},
    "afterGuiAttached": function () {},
    "doesFilterPass": function () {},
    "getGui": function () {},
    "isFilterActive": function () {},
    "createTemplate": function () {},
    "createGui": function () {},
    "setupApply": function () {},
    "onTypeChanged": function () {},
    "filterChanged": function () {},
    "onFilterChanged": function () {},
    "setType": function () {},
    "setFilter": function () {},
    "getFilter": function () {},
    "getModel": function () {},
    "setModel": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.TextFilter.prototype = {
    "init": function () {},
    "onNewRowsLoaded": function () {},
    "afterGuiAttached": function () {},
    "doesFilterPass": function () {},
    "getGui": function () {},
    "isFilterActive": function () {},
    "createTemplate": function () {},
    "createGui": function () {},
    "setupApply": function () {},
    "onTypeChanged": function () {},
    "onFilterChanged": function () {},
    "filterChanged": function () {},
    "setType": function () {},
    "setFilter": function () {},
    "getType": function () {},
    "getFilter": function () {},
    "getModel": function () {},
    "setModel": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.GridPanel.prototype = {
    "constructor": function () {},
    "agWire": function () {},
    "getVerticalPixelRange": function () {},
    "destroy": function () {},
    "onRowDataChanged": function () {},
    "showOrHideOverlay": function () {},
    "getLayout": function () {},
    "init": function () {},
    "addAngularApplyCheck": function () {},
    "disableBrowserDragging": function () {},
    "addEventListeners": function () {},
    "addDragListeners": function () {},
    "addMouseEvents": function () {},
    "addKeyboardEvents": function () {},
    "addBodyViewportListener": function () {},
    "getRowForEvent": function () {},
    "processKeyboardEvent": function () {},
    "handlePageScrollingKey": function () {},
    "pageHorizontally": function () {},
    "pageDiagonally": function () {},
    "pageVertically": function () {},
    "performScroll": function () {},
    "processMouseEvent": function () {},
    "onContextMenu": function () {},
    "preventDefaultOnContextMenu": function () {},
    "addShortcutKeyListeners": function () {},
    "onCtrlAndA": function () {},
    "onCtrlAndC": function () {},
    "onCtrlAndV": function () {},
    "onCtrlAndD": function () {},
    "createOverlayTemplate": function () {},
    "createLoadingOverlayTemplate": function () {},
    "createNoRowsOverlayTemplate": function () {},
    "ensureIndexVisible": function () {},
    "getPrimaryScrollViewport": function () {},
    "getCenterWidth": function () {},
    "isHorizontalScrollShowing": function () {},
    "isVerticalScrollShowing": function () {},
    "isBodyVerticalScrollShowing": function () {},
    "periodicallyCheck": function () {},
    "setScrollShowing": function () {},
    "setBottomPaddingOnPinnedRight": function () {},
    "setMarginOnFullWidthCellContainer": function () {},
    "ensureColumnVisible": function () {},
    "showLoadingOverlay": function () {},
    "showNoRowsOverlay": function () {},
    "hideOverlay": function () {},
    "getWidthForSizeColsToFit": function () {},
    "sizeColumnsToFit": function () {},
    "getBodyContainer": function () {},
    "getDropTargetBodyContainers": function () {},
    "getBodyViewport": function () {},
    "getDropTargetLeftContainers": function () {},
    "getDropTargetPinnedRightContainers": function () {},
    "getHeaderContainer": function () {},
    "getHeaderOverlay": function () {},
    "getRoot": function () {},
    "getPinnedLeftHeader": function () {},
    "getPinnedRightHeader": function () {},
    "queryHtmlElement": function () {},
    "loadTemplate": function () {},
    "findElements": function () {},
    "getRowContainers": function () {},
    "addMouseWheelEventListeners": function () {},
    "getHeaderViewport": function () {},
    "centerMouseWheelListener": function () {},
    "genericMouseWheelListener": function () {},
    "generalMouseWheelListener": function () {},
    "onDisplayedColumnsChanged": function () {},
    "onDisplayedColumnsWidthChanged": function () {},
    "onScrollVisibilityChanged": function () {},
    "setWidthsOfContainers": function () {},
    "setPinnedLeftWidth": function () {},
    "setPinnedRightWidth": function () {},
    "setPinnedContainersVisible": function () {},
    "setBodyAndHeaderHeights": function () {},
    "setHorizontalScrollPosition": function () {},
    "scrollHorizontally": function () {},
    "addScrollListener": function () {},
    "onBodyScroll": function () {},
    "onBodyHorizontalScroll": function () {},
    "onBodyVerticalScroll": function () {},
    "onVerticalScroll": function () {},
    "isBodyVerticalScrollActive": function () {},
    "addIEPinFix": function () {},
    "setLeftAndRightBounds": function () {},
    "isUseScrollLag": function () {},
    "debounce": function () {},
    "getBodyViewportScrollLeft": function () {},
    "setBodyViewportScrollLeft": function () {},
    "horizontallyScrollHeaderCenterAndFloatingCenter": function () {},
    "fakeVerticalScroll": function () {},
    "addScrollEventListener": function () {},
    "removeScrollEventListener": function () {},
    "__agBeanMetaData": function () {},
    "addEventListener": function () {},
    "removeEventListener": function () {},
    "dispatchEventAsync": function () {},
    "dispatchEvent": function () {},
    "addDestroyableEventListener": function () {},
    "addDestroyFunc": function () {}
};
agGrid.ScrollVisibleService.prototype = {
    "setScrollsVisible": function () {},
    "isVBodyShowing": function () {},
    "isHBodyShowing": function () {},
    "isVPinnedLeftShowing": function () {},
    "isVPinnedRightShowing": function () {},
    "getPinnedLeftWidth": function () {},
    "getPinnedLeftWithScrollWidth": function () {},
    "getPinnedRightWidth": function () {},
    "getPinnedRightWithScrollWidth": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.MouseEventService.prototype = {
    "getRenderedCellForEvent": function () {},
    "getGridCellForEvent": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.BodyDropPivotTarget.prototype = {
    "onDragEnter": function () {},
    "getIconName": function () {},
    "onDragLeave": function () {},
    "clearColumnsList": function () {},
    "onDragging": function () {},
    "onDragStop": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.BodyDropTarget.prototype = {
    "getSecondaryContainers": function () {},
    "getContainer": function () {},
    "init": function () {},
    "getIconName": function () {},
    "isUseBodyDropPivotTarget": function () {},
    "onDragEnter": function () {},
    "onDragLeave": function () {},
    "onDragging": function () {},
    "onDragStop": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.HeaderContainer.prototype = {
    "forEachHeaderElement": function () {},
    "init": function () {},
    "onColumnResized": function () {},
    "onDisplayedColumnsChanged": function () {},
    "onScrollVisibilityChanged": function () {},
    "setWidthIfPinnedContainer": function () {},
    "destroy": function () {},
    "onGridColumnsChanged": function () {},
    "refresh": function () {},
    "setupDragAndDrop": function () {},
    "removeHeaderRowComps": function () {},
    "createHeaderRowComps": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.HeaderRenderer.prototype = {
    "init": function () {},
    "onScrollVisibilityChanged": function () {},
    "forEachHeaderElement": function () {},
    "destroy": function () {},
    "onGridColumnsChanged": function () {},
    "refreshHeader": function () {},
    "setHeight": function () {},
    "setPinnedColContainerWidth": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.HeaderRowComp.prototype = {
    "constructor": function () {},
    "forEachHeaderElement": function () {},
    "destroy": function () {},
    "removeAndDestroyChildComponents": function () {},
    "onRowHeightChanged": function () {},
    "init": function () {},
    "onColumnResized": function () {},
    "setWidth": function () {},
    "onGridColumnsChanged": function () {},
    "removeAndDestroyAllChildComponents": function () {},
    "onDisplayedColumnsChanged": function () {},
    "onVirtualColumnsChanged": function () {},
    "isUsingOldHeaderRenderer": function () {},
    "createHeaderElement": function () {},
    "__agBeanMetaData": function () {},
    "instantiate": function () {},
    "instantiateRecurse": function () {},
    "swapComponentForNode": function () {},
    "swapInComponentForQuerySelectors": function () {},
    "setTemplate": function () {},
    "attributesSet": function () {},
    "wireQuerySelectors": function () {},
    "addAnnotatedEventListeners": function () {},
    "removeAnnotatedEventListeners": function () {},
    "getGui": function () {},
    "setGui": function () {},
    "queryForHtmlElement": function () {},
    "queryForHtmlInputElement": function () {},
    "appendChild": function () {},
    "addFeature": function () {},
    "isVisible": function () {},
    "setVisible": function () {},
    "addOrRemoveCssClass": function () {},
    "addGuiEventListener": function () {},
    "addCssClass": function () {},
    "removeCssClass": function () {},
    "getAttribute": function () {},
    "getRefElement": function () {},
    "addEventListener": function () {},
    "removeEventListener": function () {},
    "dispatchEventAsync": function () {},
    "dispatchEvent": function () {},
    "addDestroyableEventListener": function () {},
    "addDestroyFunc": function () {}
};
agGrid.HeaderTemplateLoader.prototype = {
    "createHeaderElement": function () {},
    "createDefaultHeaderElement": function () {},
    "addInIcon": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.HorizontalDragService.prototype = {
    "addDragHandling": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.MoveColumnController.prototype = {
    "init": function () {},
    "getIconName": function () {},
    "onDragEnter": function () {},
    "onDragLeave": function () {},
    "onDragStop": function () {},
    "normaliseX": function () {},
    "workOutNewIndex": function () {},
    "checkCenterForScrolling": function () {},
    "onDragging": function () {},
    "normaliseDirection": function () {},
    "attemptMoveColumns": function () {},
    "getNewIndexForColMovingLeft": function () {},
    "getNewIndexForColMovingRight": function () {},
    "ensureIntervalStarted": function () {},
    "ensureIntervalCleared": function () {},
    "moveInterval": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.RenderedHeaderCell.prototype = {
    "constructor": function () {},
    "getColumn": function () {},
    "init": function () {},
    "setupTooltip": function () {},
    "setupText": function () {},
    "setupFilterIcon": function () {},
    "onFilterChanged": function () {},
    "setupWidth": function () {},
    "onColumnWidthChanged": function () {},
    "createScope": function () {},
    "addAttributes": function () {},
    "setupMenu": function () {},
    "showMenu": function () {},
    "setupMovingCss": function () {},
    "onColumnMovingChanged": function () {},
    "setupMove": function () {},
    "setupTap": function () {},
    "setupResize": function () {},
    "useRenderer": function () {},
    "setupSort": function () {},
    "onSortChanged": function () {},
    "onDragStart": function () {},
    "normaliseDragChange": function () {},
    "onDragging": function () {},
    "__agBeanMetaData": function () {},
    "instantiate": function () {},
    "instantiateRecurse": function () {},
    "swapComponentForNode": function () {},
    "swapInComponentForQuerySelectors": function () {},
    "setTemplate": function () {},
    "attributesSet": function () {},
    "wireQuerySelectors": function () {},
    "addAnnotatedEventListeners": function () {},
    "removeAnnotatedEventListeners": function () {},
    "getGui": function () {},
    "setGui": function () {},
    "queryForHtmlElement": function () {},
    "queryForHtmlInputElement": function () {},
    "appendChild": function () {},
    "addFeature": function () {},
    "isVisible": function () {},
    "setVisible": function () {},
    "addOrRemoveCssClass": function () {},
    "destroy": function () {},
    "addGuiEventListener": function () {},
    "addCssClass": function () {},
    "removeCssClass": function () {},
    "getAttribute": function () {},
    "getRefElement": function () {},
    "addEventListener": function () {},
    "removeEventListener": function () {},
    "dispatchEventAsync": function () {},
    "dispatchEvent": function () {},
    "addDestroyableEventListener": function () {},
    "addDestroyFunc": function () {}
};
agGrid.StandardMenuFactory.prototype = {
    "showMenuAfterMouseEvent": function () {},
    "showMenuAfterButtonClick": function () {},
    "showPopup": function () {},
    "isMenuEnabled": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.BorderLayout.prototype = {
    "addSizeChangeListener": function () {},
    "fireSizeChanged": function () {},
    "setupPanels": function () {},
    "setupPanel": function () {},
    "getGui": function () {},
    "doLayout": function () {},
    "layoutChild": function () {},
    "layoutHeight": function () {},
    "layoutHeightFullHeight": function () {},
    "layoutHeightNormal": function () {},
    "getCentreHeight": function () {},
    "layoutWidth": function () {},
    "setEastVisible": function () {},
    "setupOverlays": function () {},
    "hideOverlay": function () {},
    "showOverlay": function () {}
};
agGrid.TabbedLayout.prototype = {
    "setAfterAttachedParams": function () {},
    "getMinWidth": function () {},
    "showFirstItem": function () {},
    "addItem": function () {},
    "showItem": function () {},
    "showItemWrapper": function () {},
    "getGui": function () {}
};
agGrid.VerticalStack.prototype = {
    "addPanel": function () {},
    "getGui": function () {},
    "doLayout": function () {}
};
agGrid.FocusService.prototype = {
    "addListener": function () {},
    "removeListener": function () {},
    "init": function () {},
    "onFocus": function () {},
    "getCellForFocus": function () {},
    "informListeners": function () {},
    "destroy": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.LargeTextCellEditor.prototype = {
    "constructor": function () {},
    "init": function () {},
    "onKeyDown": function () {},
    "afterGuiAttached": function () {},
    "getValue": function () {},
    "isPopup": function () {},
    "instantiate": function () {},
    "instantiateRecurse": function () {},
    "swapComponentForNode": function () {},
    "swapInComponentForQuerySelectors": function () {},
    "setTemplate": function () {},
    "attributesSet": function () {},
    "wireQuerySelectors": function () {},
    "addAnnotatedEventListeners": function () {},
    "removeAnnotatedEventListeners": function () {},
    "getGui": function () {},
    "setGui": function () {},
    "queryForHtmlElement": function () {},
    "queryForHtmlInputElement": function () {},
    "appendChild": function () {},
    "addFeature": function () {},
    "isVisible": function () {},
    "setVisible": function () {},
    "addOrRemoveCssClass": function () {},
    "destroy": function () {},
    "addGuiEventListener": function () {},
    "addCssClass": function () {},
    "removeCssClass": function () {},
    "getAttribute": function () {},
    "getRefElement": function () {},
    "addEventListener": function () {},
    "removeEventListener": function () {},
    "dispatchEventAsync": function () {},
    "dispatchEvent": function () {},
    "addDestroyableEventListener": function () {},
    "addDestroyFunc": function () {}
};
agGrid.PopupEditorWrapper.prototype = {
    "constructor": function () {},
    "onKeyDown": function () {},
    "getGui": function () {},
    "init": function () {},
    "afterGuiAttached": function () {},
    "getValue": function () {},
    "isPopup": function () {},
    "isCancelBeforeStart": function () {},
    "isCancelAfterEnd": function () {},
    "focusIn": function () {},
    "focusOut": function () {},
    "instantiate": function () {},
    "instantiateRecurse": function () {},
    "swapComponentForNode": function () {},
    "swapInComponentForQuerySelectors": function () {},
    "setTemplate": function () {},
    "attributesSet": function () {},
    "wireQuerySelectors": function () {},
    "addAnnotatedEventListeners": function () {},
    "removeAnnotatedEventListeners": function () {},
    "setGui": function () {},
    "queryForHtmlElement": function () {},
    "queryForHtmlInputElement": function () {},
    "appendChild": function () {},
    "addFeature": function () {},
    "isVisible": function () {},
    "setVisible": function () {},
    "addOrRemoveCssClass": function () {},
    "destroy": function () {},
    "addGuiEventListener": function () {},
    "addCssClass": function () {},
    "removeCssClass": function () {},
    "getAttribute": function () {},
    "getRefElement": function () {},
    "addEventListener": function () {},
    "removeEventListener": function () {},
    "dispatchEventAsync": function () {},
    "dispatchEvent": function () {},
    "addDestroyableEventListener": function () {},
    "addDestroyFunc": function () {}
};
agGrid.PopupSelectCellEditor.prototype = {
    "constructor": function () {},
    "isPopup": function () {},
    "init": function () {},
    "afterGuiAttached": function () {},
    "focusIn": function () {},
    "getValue": function () {},
    "instantiate": function () {},
    "instantiateRecurse": function () {},
    "swapComponentForNode": function () {},
    "swapInComponentForQuerySelectors": function () {},
    "setTemplate": function () {},
    "attributesSet": function () {},
    "wireQuerySelectors": function () {},
    "addAnnotatedEventListeners": function () {},
    "removeAnnotatedEventListeners": function () {},
    "getGui": function () {},
    "setGui": function () {},
    "queryForHtmlElement": function () {},
    "queryForHtmlInputElement": function () {},
    "appendChild": function () {},
    "addFeature": function () {},
    "isVisible": function () {},
    "setVisible": function () {},
    "addOrRemoveCssClass": function () {},
    "destroy": function () {},
    "addGuiEventListener": function () {},
    "addCssClass": function () {},
    "removeCssClass": function () {},
    "getAttribute": function () {},
    "getRefElement": function () {},
    "addEventListener": function () {},
    "removeEventListener": function () {},
    "dispatchEventAsync": function () {},
    "dispatchEvent": function () {},
    "addDestroyableEventListener": function () {},
    "addDestroyFunc": function () {}
};
agGrid.PopupTextCellEditor.prototype = {
    "constructor": function () {},
    "isPopup": function () {},
    "init": function () {},
    "afterGuiAttached": function () {},
    "focusIn": function () {},
    "getValue": function () {},
    "instantiate": function () {},
    "instantiateRecurse": function () {},
    "swapComponentForNode": function () {},
    "swapInComponentForQuerySelectors": function () {},
    "setTemplate": function () {},
    "attributesSet": function () {},
    "wireQuerySelectors": function () {},
    "addAnnotatedEventListeners": function () {},
    "removeAnnotatedEventListeners": function () {},
    "getGui": function () {},
    "setGui": function () {},
    "queryForHtmlElement": function () {},
    "queryForHtmlInputElement": function () {},
    "appendChild": function () {},
    "addFeature": function () {},
    "isVisible": function () {},
    "setVisible": function () {},
    "addOrRemoveCssClass": function () {},
    "destroy": function () {},
    "addGuiEventListener": function () {},
    "addCssClass": function () {},
    "removeCssClass": function () {},
    "getAttribute": function () {},
    "getRefElement": function () {},
    "addEventListener": function () {},
    "removeEventListener": function () {},
    "dispatchEventAsync": function () {},
    "dispatchEvent": function () {},
    "addDestroyableEventListener": function () {},
    "addDestroyFunc": function () {}
};
agGrid.SelectCellEditor.prototype = {
    "constructor": function () {},
    "init": function () {},
    "afterGuiAttached": function () {},
    "focusIn": function () {},
    "getValue": function () {},
    "instantiate": function () {},
    "instantiateRecurse": function () {},
    "swapComponentForNode": function () {},
    "swapInComponentForQuerySelectors": function () {},
    "setTemplate": function () {},
    "attributesSet": function () {},
    "wireQuerySelectors": function () {},
    "addAnnotatedEventListeners": function () {},
    "removeAnnotatedEventListeners": function () {},
    "getGui": function () {},
    "setGui": function () {},
    "queryForHtmlElement": function () {},
    "queryForHtmlInputElement": function () {},
    "appendChild": function () {},
    "addFeature": function () {},
    "isVisible": function () {},
    "setVisible": function () {},
    "addOrRemoveCssClass": function () {},
    "destroy": function () {},
    "addGuiEventListener": function () {},
    "addCssClass": function () {},
    "removeCssClass": function () {},
    "getAttribute": function () {},
    "getRefElement": function () {},
    "addEventListener": function () {},
    "removeEventListener": function () {},
    "dispatchEventAsync": function () {},
    "dispatchEvent": function () {},
    "addDestroyableEventListener": function () {},
    "addDestroyFunc": function () {}
};
agGrid.TextCellEditor.prototype = {
    "constructor": function () {},
    "init": function () {},
    "afterGuiAttached": function () {},
    "focusIn": function () {},
    "getValue": function () {},
    "instantiate": function () {},
    "instantiateRecurse": function () {},
    "swapComponentForNode": function () {},
    "swapInComponentForQuerySelectors": function () {},
    "setTemplate": function () {},
    "attributesSet": function () {},
    "wireQuerySelectors": function () {},
    "addAnnotatedEventListeners": function () {},
    "removeAnnotatedEventListeners": function () {},
    "getGui": function () {},
    "setGui": function () {},
    "queryForHtmlElement": function () {},
    "queryForHtmlInputElement": function () {},
    "appendChild": function () {},
    "addFeature": function () {},
    "isVisible": function () {},
    "setVisible": function () {},
    "addOrRemoveCssClass": function () {},
    "destroy": function () {},
    "addGuiEventListener": function () {},
    "addCssClass": function () {},
    "removeCssClass": function () {},
    "getAttribute": function () {},
    "getRefElement": function () {},
    "addEventListener": function () {},
    "removeEventListener": function () {},
    "dispatchEventAsync": function () {},
    "dispatchEvent": function () {},
    "addDestroyableEventListener": function () {},
    "addDestroyFunc": function () {}
};
agGrid.AnimateShowChangeCellRenderer.prototype = {
    "constructor": function () {},
    "init": function () {},
    "showDelta": function () {},
    "setTimerToRemoveDelta": function () {},
    "hideDeltaValue": function () {},
    "refresh": function () {},
    "instantiate": function () {},
    "instantiateRecurse": function () {},
    "swapComponentForNode": function () {},
    "swapInComponentForQuerySelectors": function () {},
    "setTemplate": function () {},
    "attributesSet": function () {},
    "wireQuerySelectors": function () {},
    "addAnnotatedEventListeners": function () {},
    "removeAnnotatedEventListeners": function () {},
    "getGui": function () {},
    "setGui": function () {},
    "queryForHtmlElement": function () {},
    "queryForHtmlInputElement": function () {},
    "appendChild": function () {},
    "addFeature": function () {},
    "isVisible": function () {},
    "setVisible": function () {},
    "addOrRemoveCssClass": function () {},
    "destroy": function () {},
    "addGuiEventListener": function () {},
    "addCssClass": function () {},
    "removeCssClass": function () {},
    "getAttribute": function () {},
    "getRefElement": function () {},
    "addEventListener": function () {},
    "removeEventListener": function () {},
    "dispatchEventAsync": function () {},
    "dispatchEvent": function () {},
    "addDestroyableEventListener": function () {},
    "addDestroyFunc": function () {}
};
agGrid.AnimateSlideCellRenderer.prototype = {
    "constructor": function () {},
    "init": function () {},
    "addSlideAnimation": function () {},
    "refresh": function () {},
    "instantiate": function () {},
    "instantiateRecurse": function () {},
    "swapComponentForNode": function () {},
    "swapInComponentForQuerySelectors": function () {},
    "setTemplate": function () {},
    "attributesSet": function () {},
    "wireQuerySelectors": function () {},
    "addAnnotatedEventListeners": function () {},
    "removeAnnotatedEventListeners": function () {},
    "getGui": function () {},
    "setGui": function () {},
    "queryForHtmlElement": function () {},
    "queryForHtmlInputElement": function () {},
    "appendChild": function () {},
    "addFeature": function () {},
    "isVisible": function () {},
    "setVisible": function () {},
    "addOrRemoveCssClass": function () {},
    "destroy": function () {},
    "addGuiEventListener": function () {},
    "addCssClass": function () {},
    "removeCssClass": function () {},
    "getAttribute": function () {},
    "getRefElement": function () {},
    "addEventListener": function () {},
    "removeEventListener": function () {},
    "dispatchEventAsync": function () {},
    "dispatchEvent": function () {},
    "addDestroyableEventListener": function () {},
    "addDestroyFunc": function () {}
};
agGrid.GroupCellRenderer.prototype = {
    "constructor": function () {},
    "init": function () {},
    "isLeaveCellBlank": function () {},
    "addPadding": function () {},
    "addValueElement": function () {},
    "createFromInnerRenderer": function () {},
    "createFooterCell": function () {},
    "createGroupCell": function () {},
    "addChildCount": function () {},
    "getGroupName": function () {},
    "createLeafCell": function () {},
    "isUserWantsSelected": function () {},
    "addCheckboxIfNeeded": function () {},
    "addExpandAndContract": function () {},
    "onKeyDown": function () {},
    "onExpandOrContract": function () {},
    "showExpandAndContractIcons": function () {},
    "__agBeanMetaData": function () {},
    "instantiate": function () {},
    "instantiateRecurse": function () {},
    "swapComponentForNode": function () {},
    "swapInComponentForQuerySelectors": function () {},
    "setTemplate": function () {},
    "attributesSet": function () {},
    "wireQuerySelectors": function () {},
    "addAnnotatedEventListeners": function () {},
    "removeAnnotatedEventListeners": function () {},
    "getGui": function () {},
    "setGui": function () {},
    "queryForHtmlElement": function () {},
    "queryForHtmlInputElement": function () {},
    "appendChild": function () {},
    "addFeature": function () {},
    "isVisible": function () {},
    "setVisible": function () {},
    "addOrRemoveCssClass": function () {},
    "destroy": function () {},
    "addGuiEventListener": function () {},
    "addCssClass": function () {},
    "removeCssClass": function () {},
    "getAttribute": function () {},
    "getRefElement": function () {},
    "addEventListener": function () {},
    "removeEventListener": function () {},
    "dispatchEventAsync": function () {},
    "dispatchEvent": function () {},
    "addDestroyableEventListener": function () {},
    "addDestroyFunc": function () {}
};
agGrid.SetLeftFeature.prototype = {
    "constructor": function () {},
    "init": function () {},
    "setLeftFirstTime": function () {},
    "animateInLeft": function () {},
    "onLeftChanged": function () {},
    "setLeft": function () {},
    "__agBeanMetaData": function () {},
    "destroy": function () {},
    "addEventListener": function () {},
    "removeEventListener": function () {},
    "dispatchEventAsync": function () {},
    "dispatchEvent": function () {},
    "addDestroyableEventListener": function () {},
    "addDestroyFunc": function () {}
};
agGrid.AutoWidthCalculator.prototype = {
    "getPreferredWidthForColumn": function () {},
    "getHeaderCellForColumn": function () {},
    "putRowCellsIntoDummyContainer": function () {},
    "cloneItemIntoDummy": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.CellEditorFactory.prototype = {
    "init": function () {},
    "addCellEditor": function () {},
    "createCellEditor": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.CellRendererFactory.prototype = {
    "init": function () {},
    "addCellRenderer": function () {},
    "getCellRenderer": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.CellRendererService.prototype = {
    "useCellRenderer": function () {},
    "checkForDeprecatedItems": function () {},
    "doesImplementICellRenderer": function () {},
    "lookUpCellRenderer": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.CheckboxSelectionComponent.prototype = {
    "constructor": function () {},
    "createAndAddIcons": function () {},
    "onSelectionChanged": function () {},
    "onCheckedClicked": function () {},
    "onUncheckedClicked": function () {},
    "onIndeterminateClicked": function () {},
    "init": function () {},
    "showOrHideSelect": function () {},
    "createParams": function () {},
    "__agBeanMetaData": function () {},
    "instantiate": function () {},
    "instantiateRecurse": function () {},
    "swapComponentForNode": function () {},
    "swapInComponentForQuerySelectors": function () {},
    "setTemplate": function () {},
    "attributesSet": function () {},
    "wireQuerySelectors": function () {},
    "addAnnotatedEventListeners": function () {},
    "removeAnnotatedEventListeners": function () {},
    "getGui": function () {},
    "setGui": function () {},
    "queryForHtmlElement": function () {},
    "queryForHtmlInputElement": function () {},
    "appendChild": function () {},
    "addFeature": function () {},
    "isVisible": function () {},
    "setVisible": function () {},
    "addOrRemoveCssClass": function () {},
    "destroy": function () {},
    "addGuiEventListener": function () {},
    "addCssClass": function () {},
    "removeCssClass": function () {},
    "getAttribute": function () {},
    "getRefElement": function () {},
    "addEventListener": function () {},
    "removeEventListener": function () {},
    "dispatchEventAsync": function () {},
    "dispatchEvent": function () {},
    "addDestroyableEventListener": function () {},
    "addDestroyFunc": function () {}
};
agGrid.RenderedCell.prototype = {
    "constructor": function () {},
    "createGridCell": function () {},
    "setupGridCell": function () {},
    "getGridCell": function () {},
    "setFocusInOnEditor": function () {},
    "setFocusOutOnEditor": function () {},
    "destroy": function () {},
    "setPinnedClasses": function () {},
    "getParentRow": function () {},
    "setParentRow": function () {},
    "setupCheckboxSelection": function () {},
    "getColumn": function () {},
    "getValue": function () {},
    "getDataForRow": function () {},
    "addRangeSelectedListener": function () {},
    "addHighlightListener": function () {},
    "addChangeListener": function () {},
    "animateCellWithDataChanged": function () {},
    "animateCellWithHighlight": function () {},
    "animateCell": function () {},
    "addCellFocusedListener": function () {},
    "checkCellFocused": function () {},
    "setWidthOnCell": function () {},
    "init": function () {},
    "addColumnHoverListener": function () {},
    "onColumnHover": function () {},
    "checkHoveringCell": function () {},
    "addDomData": function () {},
    "onEnterKeyDown": function () {},
    "onF2KeyDown": function () {},
    "onEscapeKeyDown": function () {},
    "onPopupEditorClosed": function () {},
    "isEditing": function () {},
    "onTabKeyDown": function () {},
    "onBackspaceOrDeleteKeyPressed": function () {},
    "onSpaceKeyPressed": function () {},
    "onNavigationKeyPressed": function () {},
    "onKeyPress": function () {},
    "onKeyDown": function () {},
    "createCellEditorParams": function () {},
    "createCellEditor": function () {},
    "stopEditingAndFocus": function () {},
    "startRowOrCellEdit": function () {},
    "startEditingIfEnabled": function () {},
    "addInCellEditor": function () {},
    "addPopupCellEditor": function () {},
    "focusCell": function () {},
    "stopRowOrCellEdit": function () {},
    "stopEditing": function () {},
    "createParams": function () {},
    "createEvent": function () {},
    "getRenderedRow": function () {},
    "isSuppressNavigable": function () {},
    "isCellEditable": function () {},
    "onMouseEvent": function () {},
    "onMouseOut": function () {},
    "onMouseOver": function () {},
    "onContextMenu": function () {},
    "onCellDoubleClicked": function () {},
    "onMouseDown": function () {},
    "onCellClicked": function () {},
    "doIeFocusHack": function () {},
    "setInlineEditingClass": function () {},
    "populateCell": function () {},
    "addStylesFromColDef": function () {},
    "addClassesFromColDef": function () {},
    "createParentOfValue": function () {},
    "isVolatile": function () {},
    "refreshCell": function () {},
    "addClassesFromRules": function () {},
    "putDataIntoCell": function () {},
    "formatValue": function () {},
    "createRendererAndRefreshParams": function () {},
    "useCellRenderer": function () {},
    "addClasses": function () {},
    "__agBeanMetaData": function () {},
    "instantiate": function () {},
    "instantiateRecurse": function () {},
    "swapComponentForNode": function () {},
    "swapInComponentForQuerySelectors": function () {},
    "setTemplate": function () {},
    "attributesSet": function () {},
    "wireQuerySelectors": function () {},
    "addAnnotatedEventListeners": function () {},
    "removeAnnotatedEventListeners": function () {},
    "getGui": function () {},
    "setGui": function () {},
    "queryForHtmlElement": function () {},
    "queryForHtmlInputElement": function () {},
    "appendChild": function () {},
    "addFeature": function () {},
    "isVisible": function () {},
    "setVisible": function () {},
    "addOrRemoveCssClass": function () {},
    "addGuiEventListener": function () {},
    "addCssClass": function () {},
    "removeCssClass": function () {},
    "getAttribute": function () {},
    "getRefElement": function () {},
    "addEventListener": function () {},
    "removeEventListener": function () {},
    "dispatchEventAsync": function () {},
    "dispatchEvent": function () {},
    "addDestroyableEventListener": function () {},
    "addDestroyFunc": function () {}
};
agGrid.RenderedRow.prototype = {
    "constructor": function () {},
    "setupRowContainers": function () {},
    "getAndClearDelayedDestroyFunctions": function () {},
    "getAndClearNextVMTurnFunctions": function () {},
    "addDomData": function () {},
    "setupFullWidthContainers": function () {},
    "addMouseWheelListenerToFullWidthRow": function () {},
    "setupFullWidthGroupContainers": function () {},
    "createFullWidthRow": function () {},
    "setupNormalContainers": function () {},
    "init": function () {},
    "stopRowEditing": function () {},
    "isEditing": function () {},
    "stopEditing": function () {},
    "startRowEditing": function () {},
    "setEditingRow": function () {},
    "addDataChangedListener": function () {},
    "angular1Compile": function () {},
    "addColumnListener": function () {},
    "onDisplayedColumnsChanged": function () {},
    "onVirtualColumnsChanged": function () {},
    "onGridColumnsChanged": function () {},
    "isCellInWrongRow": function () {},
    "refreshCellsIntoRow": function () {},
    "removeRenderedCells": function () {},
    "getRowForColumn": function () {},
    "ensureCellInCorrectRow": function () {},
    "getOrCreateCell": function () {},
    "onRowSelected": function () {},
    "addRowSelectedListener": function () {},
    "onMouseEvent": function () {},
    "addHoverFunctionality": function () {},
    "addHoverClass": function () {},
    "setRowFocusClasses": function () {},
    "addCellFocusedListener": function () {},
    "forEachRenderedCell": function () {},
    "addNodeDataChangedListener": function () {},
    "onTopChanged": function () {},
    "setRowTop": function () {},
    "setupTop": function () {},
    "setHeight": function () {},
    "addRowIndexes": function () {},
    "addRowIds": function () {},
    "addEventListener": function () {},
    "removeEventListener": function () {},
    "getRenderedCellForColumn": function () {},
    "getCellForCol": function () {},
    "destroy": function () {},
    "destroyScope": function () {},
    "isGroup": function () {},
    "refreshFullWidthComponent": function () {},
    "createFullWidthComponent": function () {},
    "destroyFullWidthComponent": function () {},
    "createFullWidthParams": function () {},
    "createChildScopeOrNull": function () {},
    "addStyleFromRowStyle": function () {},
    "addStyleFromRowStyleFunc": function () {},
    "createParams": function () {},
    "createEvent": function () {},
    "createRowContainer": function () {},
    "animateRowIn": function () {},
    "roundRowTopToBounds": function () {},
    "onRowDblClick": function () {},
    "onRowClick": function () {},
    "getRowNode": function () {},
    "refreshCells": function () {},
    "addClassesFromRowClassFunc": function () {},
    "addGridClasses": function () {},
    "addExpandedAndContractedClasses": function () {},
    "addClassesFromRowClass": function () {},
    "__agBeanMetaData": function () {},
    "dispatchEventAsync": function () {},
    "dispatchEvent": function () {},
    "addDestroyableEventListener": function () {},
    "addDestroyFunc": function () {}
};
agGrid.RowRenderer.prototype = {
    "agWire": function () {},
    "init": function () {},
    "getAllCellsForColumn": function () {},
    "refreshAllFloatingRows": function () {},
    "refreshFloatingRows": function () {},
    "onFloatingRowDataChanged": function () {},
    "onModelUpdated": function () {},
    "getRenderedIndexesForRowNodes": function () {},
    "refreshRows": function () {},
    "refreshView": function () {},
    "getLockOnRefresh": function () {},
    "releaseLockOnRefresh": function () {},
    "restoreFocusedCell": function () {},
    "softRefreshView": function () {},
    "stopEditing": function () {},
    "forEachRenderedCell": function () {},
    "forEachRenderedRow": function () {},
    "addRenderedRowListener": function () {},
    "refreshCells": function () {},
    "destroy": function () {},
    "refreshAllVirtualRows": function () {},
    "refreshGroupRows": function () {},
    "removeVirtualRows": function () {},
    "drawVirtualRowsWithLock": function () {},
    "drawVirtualRows": function () {},
    "workOutFirstAndLastRowsToRender": function () {},
    "getFirstVirtualRenderedRow": function () {},
    "getLastVirtualRenderedRow": function () {},
    "ensureRowsRendered": function () {},
    "getOrCreateRenderedRow": function () {},
    "getRenderedNodes": function () {},
    "navigateToNextCell": function () {},
    "startEditingCell": function () {},
    "getComponentForCell": function () {},
    "onTabKeyDown": function () {},
    "tabToNextCell": function () {},
    "moveToCellAfter": function () {},
    "moveEditToNextCell": function () {},
    "moveEditToNextRow": function () {},
    "findNextCellToFocusOn": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.ValueFormatterService.prototype = {
    "formatValue": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.FilterStage.prototype = {
    "execute": function () {},
    "recursivelyFilter": function () {},
    "setAllChildrenCount": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.FlattenStage.prototype = {
    "execute": function () {},
    "resetRowTops": function () {},
    "recursivelyAddToRowsToDisplay": function () {},
    "addRowNodeToRowsToDisplay": function () {},
    "ensureFooterNodeExists": function () {},
    "createFlowerNode": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.InMemoryRowModel.prototype = {
    "init": function () {},
    "onRowGroupOpened": function () {},
    "onFilterChanged": function () {},
    "onSortChanged": function () {},
    "getType": function () {},
    "onValueChanged": function () {},
    "refreshModel": function () {},
    "isEmpty": function () {},
    "isRowsToRender": function () {},
    "setDatasource": function () {},
    "getTopLevelNodes": function () {},
    "getRootNode": function () {},
    "getRow": function () {},
    "isRowPresent": function () {},
    "getVirtualRowCount": function () {},
    "getRowCount": function () {},
    "getRowIndexAtPixel": function () {},
    "isRowInPixel": function () {},
    "getRowCombinedHeight": function () {},
    "forEachLeafNode": function () {},
    "forEachNode": function () {},
    "forEachNodeAfterFilter": function () {},
    "forEachNodeAfterFilterAndSort": function () {},
    "forEachPivotNode": function () {},
    "recursivelyWalkNodesAndCallback": function () {},
    "doAggregate": function () {},
    "expandOrCollapseAll": function () {},
    "doSort": function () {},
    "doRowGrouping": function () {},
    "restoreGroupState": function () {},
    "doFilter": function () {},
    "doPivot": function () {},
    "getGroupState": function () {},
    "setRowData": function () {},
    "doRowsToDisplay": function () {},
    "insertItemsAtIndex": function () {},
    "onRowHeightChanged": function () {},
    "resetRowHeights": function () {},
    "removeItems": function () {},
    "addItems": function () {},
    "refreshAndFireEvent": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.SortStage.prototype = {
    "execute": function () {},
    "sortRowNode": function () {},
    "compareRowNodes": function () {},
    "updateChildIndexes": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.InMemoryNodeManager.prototype = {
    "setRowData": function () {},
    "recursiveFunction": function () {},
    "createNode": function () {},
    "isExpanded": function () {},
    "setLeafChildren": function () {},
    "insertItemsAtIndex": function () {},
    "removeItems": function () {},
    "addItems": function () {},
    "isRowsAlreadyGrouped": function () {}
};
agGrid.FloatingRowModel.prototype = {
    "init": function () {},
    "isEmpty": function () {},
    "isRowsToRender": function () {},
    "getRowAtPixel": function () {},
    "setFloatingTopRowData": function () {},
    "setFloatingBottomRowData": function () {},
    "createNodesFromData": function () {},
    "getFloatingTopRowData": function () {},
    "getFloatingBottomRowData": function () {},
    "getFloatingTopTotalHeight": function () {},
    "getFloatingTopRowCount": function () {},
    "getFloatingBottomRowCount": function () {},
    "getFloatingTopRow": function () {},
    "getFloatingBottomRow": function () {},
    "forEachFloatingTopRow": function () {},
    "forEachFloatingBottomRow": function () {},
    "getFloatingBottomTotalHeight": function () {},
    "getTotalHeight": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.PaginationController.prototype = {
    "init": function () {},
    "setDatasource": function () {},
    "checkForDeprecated": function () {},
    "reset": function () {},
    "myToLocaleString": function () {},
    "setTotalLabels": function () {},
    "calculateTotalPages": function () {},
    "pageLoaded": function () {},
    "updateRowLabels": function () {},
    "loadPage": function () {},
    "isCallDaemon": function () {},
    "onBtNext": function () {},
    "onBtPrevious": function () {},
    "onBtFirst": function () {},
    "onBtLast": function () {},
    "isZeroPagesToDisplay": function () {},
    "enableOrDisableButtons": function () {},
    "createTemplate": function () {},
    "getGui": function () {},
    "setupComponents": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.VirtualPageRowModel.prototype = {
    "init": function () {},
    "addEventListeners": function () {},
    "onFilterChanged": function () {},
    "onSortChanged": function () {},
    "destroy": function () {},
    "getType": function () {},
    "setDatasource": function () {},
    "checkForDeprecated": function () {},
    "isEmpty": function () {},
    "isRowsToRender": function () {},
    "reset": function () {},
    "resetCache": function () {},
    "getRow": function () {},
    "forEachNode": function () {},
    "getRowCombinedHeight": function () {},
    "getRowIndexAtPixel": function () {},
    "getRowCount": function () {},
    "insertItemsAtIndex": function () {},
    "removeItems": function () {},
    "addItems": function () {},
    "isRowPresent": function () {},
    "refreshVirtualPageCache": function () {},
    "purgeVirtualPageCache": function () {},
    "getVirtualRowCount": function () {},
    "isMaxRowFound": function () {},
    "setVirtualRowCount": function () {},
    "getVirtualPageState": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.VirtualPageCache.prototype = {
    "setBeans": function () {},
    "init": function () {},
    "getRowCombinedHeight": function () {},
    "forEachNode": function () {},
    "getRowIndexAtPixel": function () {},
    "moveItemsDown": function () {},
    "insertItems": function () {},
    "insertItemsAtIndex": function () {},
    "getRowCount": function () {},
    "onPageLoaded": function () {},
    "destroy": function () {},
    "getRow": function () {},
    "createPage": function () {},
    "removePageFromCache": function () {},
    "printCacheStatus": function () {},
    "checkPageToLoad": function () {},
    "findLeastRecentlyUsedPage": function () {},
    "checkVirtualRowCount": function () {},
    "dispatchModelUpdated": function () {},
    "getPageState": function () {},
    "refreshVirtualPageCache": function () {},
    "purgeVirtualPageCache": function () {},
    "getVirtualRowCount": function () {},
    "isMaxRowFound": function () {},
    "setVirtualRowCount": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.VirtualPage.prototype = {
    "setDirty": function () {},
    "setDirtyAndPurge": function () {},
    "getStartRow": function () {},
    "getEndRow": function () {},
    "getPageNumber": function () {},
    "addEventListener": function () {},
    "removeEventListener": function () {},
    "getLastAccessed": function () {},
    "getState": function () {},
    "setRowNode": function () {},
    "setBlankRowNode": function () {},
    "setNewData": function () {},
    "init": function () {},
    "createRowNodes": function () {},
    "setTopOnRowNode": function () {},
    "createBlankRowNode": function () {},
    "getRow": function () {},
    "load": function () {},
    "pageLoadFailed": function () {},
    "populateWithRowData": function () {},
    "pageLoaded": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.StylingService.prototype = {
    "processAllCellClasses": function () {},
    "processCellClassRules": function () {},
    "processStaticCellClasses": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.AgCheckbox.prototype = {
    "constructor": function () {},
    "postConstruct": function () {},
    "attributesSet": function () {},
    "loadIcons": function () {},
    "onClick": function () {},
    "getNextValue": function () {},
    "setPassive": function () {},
    "setReadOnly": function () {},
    "isReadOnly": function () {},
    "isSelected": function () {},
    "toggle": function () {},
    "setSelected": function () {},
    "updateIcons": function () {},
    "__agBeanMetaData": function () {},
    "__agComponentMetaData": function () {},
    "instantiate": function () {},
    "instantiateRecurse": function () {},
    "swapComponentForNode": function () {},
    "swapInComponentForQuerySelectors": function () {},
    "setTemplate": function () {},
    "wireQuerySelectors": function () {},
    "addAnnotatedEventListeners": function () {},
    "removeAnnotatedEventListeners": function () {},
    "getGui": function () {},
    "setGui": function () {},
    "queryForHtmlElement": function () {},
    "queryForHtmlInputElement": function () {},
    "appendChild": function () {},
    "addFeature": function () {},
    "isVisible": function () {},
    "setVisible": function () {},
    "addOrRemoveCssClass": function () {},
    "destroy": function () {},
    "addGuiEventListener": function () {},
    "addCssClass": function () {},
    "removeCssClass": function () {},
    "getAttribute": function () {},
    "getRefElement": function () {},
    "addEventListener": function () {},
    "removeEventListener": function () {},
    "dispatchEventAsync": function () {},
    "dispatchEvent": function () {},
    "addDestroyableEventListener": function () {},
    "addDestroyFunc": function () {}
};
agGrid.Component.prototype = {
    "constructor": function () {},
    "instantiate": function () {},
    "instantiateRecurse": function () {},
    "swapComponentForNode": function () {},
    "swapInComponentForQuerySelectors": function () {},
    "setTemplate": function () {},
    "attributesSet": function () {},
    "wireQuerySelectors": function () {},
    "addAnnotatedEventListeners": function () {},
    "removeAnnotatedEventListeners": function () {},
    "getGui": function () {},
    "setGui": function () {},
    "queryForHtmlElement": function () {},
    "queryForHtmlInputElement": function () {},
    "appendChild": function () {},
    "addFeature": function () {},
    "isVisible": function () {},
    "setVisible": function () {},
    "addOrRemoveCssClass": function () {},
    "destroy": function () {},
    "addGuiEventListener": function () {},
    "addCssClass": function () {},
    "removeCssClass": function () {},
    "getAttribute": function () {},
    "getRefElement": function () {},
    "addEventListener": function () {},
    "removeEventListener": function () {},
    "dispatchEventAsync": function () {},
    "dispatchEvent": function () {},
    "addDestroyableEventListener": function () {},
    "addDestroyFunc": function () {}
};
agGrid.PopupService.prototype = {
    "getPopupParent": function () {},
    "positionPopupForMenu": function () {},
    "positionPopupUnderMouseEvent": function () {},
    "positionPopupUnderComponent": function () {},
    "positionPopupOverComponent": function () {},
    "positionPopup": function () {},
    "addAsModalPopup": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.TouchListener.prototype = {
    "getActiveTouch": function () {},
    "addEventListener": function () {},
    "removeEventListener": function () {},
    "onTouchStart": function () {},
    "onTouchMove": function () {},
    "onTouchEnd": function () {},
    "destroy": function () {}
};
agGrid.BaseFrameworkFactory.prototype = {
    "dateComponent": function () {},
    "colDefFloatingCellRenderer": function () {},
    "colDefCellRenderer": function () {},
    "colDefCellEditor": function () {},
    "colDefFilter": function () {},
    "gridOptionsFullWidthCellRenderer": function () {},
    "gridOptionsGroupRowRenderer": function () {},
    "gridOptionsGroupRowInnerRenderer": function () {},
    "setTimeout": function () {}
};
agGrid.CellNavigationService.prototype = {
    "getNextCellToFocus": function () {},
    "getCellToLeft": function () {},
    "getCellToRight": function () {},
    "getRowBelow": function () {},
    "getCellBelow": function () {},
    "isLastRowInContainer": function () {},
    "getRowAbove": function () {},
    "getCellAbove": function () {},
    "getLastBodyCell": function () {},
    "getLastFloatingTopRow": function () {},
    "getNextTabbedCell": function () {},
    "getNextTabbedCellForwards": function () {},
    "getNextTabbedCellBackwards": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.ColumnChangeEvent.prototype = {
    "toString": function () {},
    "withPinned": function () {},
    "withVisible": function () {},
    "isVisible": function () {},
    "getPinned": function () {},
    "withColumn": function () {},
    "withColumns": function () {},
    "withFinished": function () {},
    "withColumnGroup": function () {},
    "withToIndex": function () {},
    "getToIndex": function () {},
    "getType": function () {},
    "getColumn": function () {},
    "getColumns": function () {},
    "getColumnGroup": function () {},
    "isFinished": function () {}
};
agGrid.CsvCreator.prototype = {
    "exportDataAsCsv": function () {},
    "getDataAsCsv": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.Downloader.prototype = {
    "download": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.EventService.prototype = {
    "agWire": function () {},
    "getListenerList": function () {},
    "addEventListener": function () {},
    "addModalPriorityEventListener": function () {},
    "addGlobalListener": function () {},
    "removeEventListener": function () {},
    "removeGlobalListener": function () {},
    "dispatchEvent": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.ExpressionService.prototype = {
    "setBeans": function () {},
    "evaluate": function () {},
    "createExpressionFunction": function () {},
    "createFunctionBody": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.FocusedCellController.prototype = {
    "init": function () {},
    "clearFocusedCell": function () {},
    "getFocusedCell": function () {},
    "getFocusCellToUseAfterRefresh": function () {},
    "getGridCellForDomElement": function () {},
    "setFocusedCell": function () {},
    "isCellFocused": function () {},
    "isRowNodeFocused": function () {},
    "isAnyCellFocused": function () {},
    "isRowFocused": function () {},
    "onCellFocused": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.Grid.prototype = {
    "getRowModelClass": function () {},
    "destroy": function () {}
};
agGrid.Grid.RowModelClasses.virtual.prototype = {
    "init": function () {},
    "addEventListeners": function () {},
    "onFilterChanged": function () {},
    "onSortChanged": function () {},
    "destroy": function () {},
    "getType": function () {},
    "setDatasource": function () {},
    "checkForDeprecated": function () {},
    "isEmpty": function () {},
    "isRowsToRender": function () {},
    "reset": function () {},
    "resetCache": function () {},
    "getRow": function () {},
    "forEachNode": function () {},
    "getRowCombinedHeight": function () {},
    "getRowIndexAtPixel": function () {},
    "getRowCount": function () {},
    "insertItemsAtIndex": function () {},
    "removeItems": function () {},
    "addItems": function () {},
    "isRowPresent": function () {},
    "refreshVirtualPageCache": function () {},
    "purgeVirtualPageCache": function () {},
    "getVirtualRowCount": function () {},
    "isMaxRowFound": function () {},
    "setVirtualRowCount": function () {},
    "getVirtualPageState": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.Grid.RowModelClasses.pagination.prototype = {
    "init": function () {},
    "onRowGroupOpened": function () {},
    "onFilterChanged": function () {},
    "onSortChanged": function () {},
    "getType": function () {},
    "onValueChanged": function () {},
    "refreshModel": function () {},
    "isEmpty": function () {},
    "isRowsToRender": function () {},
    "setDatasource": function () {},
    "getTopLevelNodes": function () {},
    "getRootNode": function () {},
    "getRow": function () {},
    "isRowPresent": function () {},
    "getVirtualRowCount": function () {},
    "getRowCount": function () {},
    "getRowIndexAtPixel": function () {},
    "isRowInPixel": function () {},
    "getRowCombinedHeight": function () {},
    "forEachLeafNode": function () {},
    "forEachNode": function () {},
    "forEachNodeAfterFilter": function () {},
    "forEachNodeAfterFilterAndSort": function () {},
    "forEachPivotNode": function () {},
    "recursivelyWalkNodesAndCallback": function () {},
    "doAggregate": function () {},
    "expandOrCollapseAll": function () {},
    "doSort": function () {},
    "doRowGrouping": function () {},
    "restoreGroupState": function () {},
    "doFilter": function () {},
    "doPivot": function () {},
    "getGroupState": function () {},
    "setRowData": function () {},
    "doRowsToDisplay": function () {},
    "insertItemsAtIndex": function () {},
    "onRowHeightChanged": function () {},
    "resetRowHeights": function () {},
    "removeItems": function () {},
    "addItems": function () {},
    "refreshAndFireEvent": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.Grid.RowModelClasses.normal.prototype = {
    "init": function () {},
    "onRowGroupOpened": function () {},
    "onFilterChanged": function () {},
    "onSortChanged": function () {},
    "getType": function () {},
    "onValueChanged": function () {},
    "refreshModel": function () {},
    "isEmpty": function () {},
    "isRowsToRender": function () {},
    "setDatasource": function () {},
    "getTopLevelNodes": function () {},
    "getRootNode": function () {},
    "getRow": function () {},
    "isRowPresent": function () {},
    "getVirtualRowCount": function () {},
    "getRowCount": function () {},
    "getRowIndexAtPixel": function () {},
    "isRowInPixel": function () {},
    "getRowCombinedHeight": function () {},
    "forEachLeafNode": function () {},
    "forEachNode": function () {},
    "forEachNodeAfterFilter": function () {},
    "forEachNodeAfterFilterAndSort": function () {},
    "forEachPivotNode": function () {},
    "recursivelyWalkNodesAndCallback": function () {},
    "doAggregate": function () {},
    "expandOrCollapseAll": function () {},
    "doSort": function () {},
    "doRowGrouping": function () {},
    "restoreGroupState": function () {},
    "doFilter": function () {},
    "doPivot": function () {},
    "getGroupState": function () {},
    "setRowData": function () {},
    "doRowsToDisplay": function () {},
    "insertItemsAtIndex": function () {},
    "onRowHeightChanged": function () {},
    "resetRowHeights": function () {},
    "removeItems": function () {},
    "addItems": function () {},
    "refreshAndFireEvent": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.GridApi.prototype = {
    "init": function () {},
    "__getMasterSlaveService": function () {},
    "getFirstRenderedRow": function () {},
    "getLastRenderedRow": function () {},
    "getDataAsCsv": function () {},
    "exportDataAsCsv": function () {},
    "getDataAsExcel": function () {},
    "exportDataAsExcel": function () {},
    "setDatasource": function () {},
    "setViewportDatasource": function () {},
    "setRowData": function () {},
    "setFloatingTopRowData": function () {},
    "setFloatingBottomRowData": function () {},
    "getFloatingTopRowCount": function () {},
    "getFloatingBottomRowCount": function () {},
    "getFloatingTopRow": function () {},
    "getFloatingBottomRow": function () {},
    "setColumnDefs": function () {},
    "refreshRows": function () {},
    "refreshCells": function () {},
    "rowDataChanged": function () {},
    "refreshView": function () {},
    "setFunctionsReadOnly": function () {},
    "softRefreshView": function () {},
    "refreshGroupRows": function () {},
    "refreshHeader": function () {},
    "isAnyFilterPresent": function () {},
    "isAdvancedFilterPresent": function () {},
    "isQuickFilterPresent": function () {},
    "getModel": function () {},
    "onGroupExpandedOrCollapsed": function () {},
    "refreshInMemoryRowModel": function () {},
    "expandAll": function () {},
    "collapseAll": function () {},
    "addVirtualRowListener": function () {},
    "addRenderedRowListener": function () {},
    "setQuickFilter": function () {},
    "selectIndex": function () {},
    "deselectIndex": function () {},
    "selectNode": function () {},
    "deselectNode": function () {},
    "selectAll": function () {},
    "deselectAll": function () {},
    "selectAllFiltered": function () {},
    "deselectAllFiltered": function () {},
    "recomputeAggregates": function () {},
    "sizeColumnsToFit": function () {},
    "showLoadingOverlay": function () {},
    "showNoRowsOverlay": function () {},
    "hideOverlay": function () {},
    "isNodeSelected": function () {},
    "getSelectedNodesById": function () {},
    "getSelectedNodes": function () {},
    "getSelectedRows": function () {},
    "getBestCostNodeSelection": function () {},
    "getRenderedNodes": function () {},
    "ensureColIndexVisible": function () {},
    "ensureColumnVisible": function () {},
    "ensureIndexVisible": function () {},
    "ensureNodeVisible": function () {},
    "forEachLeafNode": function () {},
    "forEachNode": function () {},
    "forEachNodeAfterFilter": function () {},
    "forEachNodeAfterFilterAndSort": function () {},
    "getFilterApiForColDef": function () {},
    "getFilterInstance": function () {},
    "getFilterApi": function () {},
    "destroyFilter": function () {},
    "getColumnDef": function () {},
    "onFilterChanged": function () {},
    "onSortChanged": function () {},
    "setSortModel": function () {},
    "getSortModel": function () {},
    "setFilterModel": function () {},
    "getFilterModel": function () {},
    "getFocusedCell": function () {},
    "clearFocusedCell": function () {},
    "setFocusedCell": function () {},
    "setHeaderHeight": function () {},
    "showToolPanel": function () {},
    "isToolPanelShowing": function () {},
    "doLayout": function () {},
    "resetRowHeights": function () {},
    "onRowHeightChanged": function () {},
    "getValue": function () {},
    "addEventListener": function () {},
    "addGlobalListener": function () {},
    "removeEventListener": function () {},
    "removeGlobalListener": function () {},
    "dispatchEvent": function () {},
    "destroy": function () {},
    "resetQuickFilter": function () {},
    "getRangeSelections": function () {},
    "addRangeSelection": function () {},
    "clearRangeSelection": function () {},
    "copySelectedRowsToClipboard": function () {},
    "copySelectedRangeToClipboard": function () {},
    "copySelectedRangeDown": function () {},
    "showColumnMenuAfterButtonClick": function () {},
    "showColumnMenuAfterMouseClick": function () {},
    "tabToNextCell": function () {},
    "tabToPreviousCell": function () {},
    "stopEditing": function () {},
    "startEditingCell": function () {},
    "addAggFunc": function () {},
    "addAggFuncs": function () {},
    "clearAggFuncs": function () {},
    "insertItemsAtIndex": function () {},
    "removeItems": function () {},
    "addItems": function () {},
    "refreshVirtualPageCache": function () {},
    "purgeVirtualPageCache": function () {},
    "getVirtualRowCount": function () {},
    "isMaxRowFound": function () {},
    "setVirtualRowCount": function () {},
    "getVirtualPageState": function () {},
    "checkGridSize": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.GridCore.prototype = {
    "init": function () {},
    "addRtlSupport": function () {},
    "createNorthPanel": function () {},
    "onDropPanelVisible": function () {},
    "getRootGui": function () {},
    "createSouthPanel": function () {},
    "onRowGroupChanged": function () {},
    "addWindowResizeListener": function () {},
    "periodicallyDoLayout": function () {},
    "showToolPanel": function () {},
    "isToolPanelShowing": function () {},
    "destroy": function () {},
    "ensureNodeVisible": function () {},
    "doLayout": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.GridOptionsWrapper.prototype = {
    "agWire": function () {},
    "destroy": function () {},
    "init": function () {},
    "setupFrameworkComponents": function () {},
    "getDomDataKey": function () {},
    "getFullWidthCellRenderer": function () {},
    "getGroupRowRenderer": function () {},
    "getGroupRowInnerRenderer": function () {},
    "isEnterprise": function () {},
    "isRowSelection": function () {},
    "isRowDeselection": function () {},
    "isRowSelectionMulti": function () {},
    "getContext": function () {},
    "isPivotMode": function () {},
    "isRowModelPagination": function () {},
    "isRowModelVirtual": function () {},
    "isRowModelViewport": function () {},
    "isRowModelDefault": function () {},
    "isFullRowEdit": function () {},
    "isSuppressFocusAfterRefresh": function () {},
    "isShowToolPanel": function () {},
    "isToolPanelSuppressRowGroups": function () {},
    "isToolPanelSuppressValues": function () {},
    "isToolPanelSuppressPivots": function () {},
    "isToolPanelSuppressPivotMode": function () {},
    "isSuppressTouch": function () {},
    "isEnableCellChangeFlash": function () {},
    "isGroupSelectsChildren": function () {},
    "isGroupSelectsFiltered": function () {},
    "isGroupRemoveSingleChildren": function () {},
    "isGroupIncludeFooter": function () {},
    "isGroupSuppressBlankHeader": function () {},
    "isSuppressRowClickSelection": function () {},
    "isSuppressCellSelection": function () {},
    "isSuppressMultiSort": function () {},
    "isGroupSuppressAutoColumn": function () {},
    "isSuppressDragLeaveHidesColumns": function () {},
    "isForPrint": function () {},
    "isSuppressHorizontalScroll": function () {},
    "isSuppressLoadingOverlay": function () {},
    "isSuppressNoRowsOverlay": function () {},
    "isSuppressFieldDotNotation": function () {},
    "getFloatingTopRowData": function () {},
    "getFloatingBottomRowData": function () {},
    "isFunctionsPassive": function () {},
    "isSuppressRowHoverClass": function () {},
    "isSuppressTabbing": function () {},
    "getQuickFilterText": function () {},
    "isUnSortIcon": function () {},
    "isSuppressMenuHide": function () {},
    "getRowStyle": function () {},
    "getRowClass": function () {},
    "getRowStyleFunc": function () {},
    "getRowClassFunc": function () {},
    "getDoesDataFlowerFunc": function () {},
    "getIsFullWidthCellFunc": function () {},
    "getFullWidthCellRendererParams": function () {},
    "isEmbedFullWidthRows": function () {},
    "getBusinessKeyForNodeFunc": function () {},
    "getHeaderCellRenderer": function () {},
    "getApi": function () {},
    "getColumnApi": function () {},
    "isEnableColResize": function () {},
    "isSingleClickEdit": function () {},
    "isSuppressClickEdit": function () {},
    "getGroupDefaultExpanded": function () {},
    "getAutoSizePadding": function () {},
    "getMaxConcurrentDatasourceRequests": function () {},
    "getMaxPagesInCache": function () {},
    "getPaginationOverflowSize": function () {},
    "getPaginationPageSize": function () {},
    "getPaginationInitialRowCount": function () {},
    "getRowData": function () {},
    "isGroupUseEntireRow": function () {},
    "isEnableRtl": function () {},
    "getGroupColumnDef": function () {},
    "isGroupSuppressRow": function () {},
    "getRowGroupPanelShow": function () {},
    "getPivotPanelShow": function () {},
    "isAngularCompileRows": function () {},
    "isAngularCompileFilters": function () {},
    "isAngularCompileHeaders": function () {},
    "isDebug": function () {},
    "getColumnDefs": function () {},
    "getDatasource": function () {},
    "getViewportDatasource": function () {},
    "isEnableSorting": function () {},
    "isEnableCellExpressions": function () {},
    "isEnableGroupEdit": function () {},
    "isSuppressMiddleClickScrolls": function () {},
    "isSuppressPreventDefaultOnMouseWheel": function () {},
    "isEnableServerSideSorting": function () {},
    "isSuppressColumnVirtualisation": function () {},
    "isSuppressContextMenu": function () {},
    "isSuppressCopyRowsToClipboard": function () {},
    "isEnableFilter": function () {},
    "isEnableServerSideFilter": function () {},
    "isSuppressScrollLag": function () {},
    "isSuppressMovableColumns": function () {},
    "isAnimateRows": function () {},
    "isSuppressColumnMoveAnimation": function () {},
    "isSuppressMenuColumnPanel": function () {},
    "isSuppressMenuFilterPanel": function () {},
    "isSuppressUseColIdForGroups": function () {},
    "isSuppressAggFuncInHeader": function () {},
    "isSuppressMenuMainPanel": function () {},
    "isEnableRangeSelection": function () {},
    "isRememberGroupStateWhenNewData": function () {},
    "getIcons": function () {},
    "getAggFuncs": function () {},
    "getIsScrollLag": function () {},
    "getSortingOrder": function () {},
    "getSlaveGrids": function () {},
    "getGroupRowRendererParams": function () {},
    "getOverlayLoadingTemplate": function () {},
    "getOverlayNoRowsTemplate": function () {},
    "isSuppressAutoSize": function () {},
    "isSuppressParentsInRowNodes": function () {},
    "isEnableStatusBar": function () {},
    "isFunctionsReadOnly": function () {},
    "getDefaultColDef": function () {},
    "getDefaultColGroupDef": function () {},
    "getHeaderCellTemplate": function () {},
    "getHeaderCellTemplateFunc": function () {},
    "getNodeChildDetailsFunc": function () {},
    "getGroupRowAggNodesFunc": function () {},
    "getContextMenuItemsFunc": function () {},
    "getMainMenuItemsFunc": function () {},
    "getRowNodeIdFunc": function () {},
    "getNavigateToNextCellFunc": function () {},
    "getTabToNextCellFunc": function () {},
    "getProcessSecondaryColDefFunc": function () {},
    "getProcessSecondaryColGroupDefFunc": function () {},
    "getSendToClipboardFunc": function () {},
    "getProcessCellForClipboardFunc": function () {},
    "getProcessCellFromClipboardFunc": function () {},
    "getViewportRowModelPageSize": function () {},
    "getViewportRowModelBufferSize": function () {},
    "setProperty": function () {},
    "addEventListener": function () {},
    "removeEventListener": function () {},
    "executeProcessRowPostCreateFunc": function () {},
    "getHeaderHeight": function () {},
    "isExternalFilterPresent": function () {},
    "doesExternalFilterPass": function () {},
    "getDocument": function () {},
    "getLayoutInterval": function () {},
    "getMinColWidth": function () {},
    "getMaxColWidth": function () {},
    "getColWidth": function () {},
    "getRowBuffer": function () {},
    "getScrollbarWidth": function () {},
    "checkForDeprecated": function () {},
    "getLocaleTextFunc": function () {},
    "globalEventHandler": function () {},
    "getRowHeightAsNumber": function () {},
    "getRowHeightForNode": function () {},
    "isNumeric": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.Logger.prototype = {
    "log": function () {}
};
agGrid.MasterSlaveService.prototype = {
    "setBeans": function () {},
    "init": function () {},
    "fireEvent": function () {},
    "onEvent": function () {},
    "fireColumnEvent": function () {},
    "fireHorizontalScrollEvent": function () {},
    "onScrollEvent": function () {},
    "getMasterColumns": function () {},
    "getColumnIds": function () {},
    "onColumnEvent": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.SelectionController.prototype = {
    "setBeans": function () {},
    "init": function () {},
    "setLastSelectedNode": function () {},
    "getLastSelectedNode": function () {},
    "getSelectedNodes": function () {},
    "getSelectedRows": function () {},
    "removeGroupsFromSelection": function () {},
    "updateGroupsFromChildrenSelections": function () {},
    "getNodeForIdIfSelected": function () {},
    "clearOtherNodes": function () {},
    "onRowSelected": function () {},
    "syncInRowNode": function () {},
    "syncInOldRowNode": function () {},
    "syncInNewRowNode": function () {},
    "reset": function () {},
    "getBestCostNodeSelection": function () {},
    "setRowModel": function () {},
    "isEmpty": function () {},
    "deselectAllRowNodes": function () {},
    "selectAllRowNodes": function () {},
    "selectNode": function () {},
    "deselectIndex": function () {},
    "deselectNode": function () {},
    "selectIndex": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.SortController.prototype = {
    "progressSort": function () {},
    "setSortForColumn": function () {},
    "onSortChanged": function () {},
    "dispatchSortChangedEvents": function () {},
    "clearSortBarThisColumn": function () {},
    "getNextSortDirection": function () {},
    "getSortModel": function () {},
    "setSortModel": function () {},
    "getColumnsWithSortingOrdered": function () {},
    "getSortForRowController": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.SvgFactory.prototype = {
    "createFilterSvg": function () {},
    "createFilterSvg12": function () {},
    "createMenuSvg": function () {},
    "createColumnsSvg12": function () {},
    "createArrowUpSvg": function () {},
    "createArrowLeftSvg": function () {},
    "createArrowDownSvg": function () {},
    "createArrowRightSvg": function () {},
    "createSmallArrowRightSvg": function () {},
    "createSmallArrowLeftSvg": function () {},
    "createSmallArrowDownSvg": function () {},
    "createArrowUpDownSvg": function () {},
    "createFolderOpen": function () {},
    "createFolderClosed": function () {},
    "createColumnIcon": function () {},
    "createColumnsIcon": function () {},
    "createPinIcon": function () {},
    "createPlusIcon": function () {},
    "createMinusIcon": function () {},
    "createMoveIcon": function () {},
    "createLeftIcon": function () {},
    "createRightIcon": function () {},
    "createColumnVisibleIcon": function () {},
    "createColumnHiddenIcon": function () {},
    "createColumnIndeterminateIcon": function () {},
    "createGroupIcon": function () {},
    "createPivotIcon": function () {},
    "createAggregationIcon": function () {},
    "createDropNotAllowedIcon": function () {},
    "createGroupIcon12": function () {},
    "createCutIcon": function () {},
    "createCopyIcon": function () {},
    "createPasteIcon": function () {},
    "createMenuIcon": function () {},
    "createCheckboxCheckedIcon": function () {},
    "createCheckboxCheckedReadOnlyIcon": function () {},
    "createCheckboxUncheckedIcon": function () {},
    "createCheckboxUncheckedReadOnlyIcon": function () {},
    "createCheckboxIndeterminateIcon": function () {},
    "createCheckboxIndeterminateReadOnlyIcon": function () {},
    "createGroupExpandedIcon": function () {},
    "createGroupContractedIcon": function () {}
};
agGrid.TemplateService.prototype = {
    "getTemplate": function () {},
    "handleHttpResult": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.NumberSequence.prototype = {
    "next": function () {}
};
agGrid.ValueService.prototype = {
    "init": function () {},
    "getValue": function () {},
    "getValueUsingSpecificData": function () {},
    "setValue": function () {},
    "setValueUsingField": function () {},
    "executeValueGetter": function () {},
    "getValueCallback": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.XmlFactory.prototype = {
    "createXml": function () {},
    "returnAttributeIfPopulated": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.GridSerializer.prototype = {
    "serialize": function () {},
    "__agBeanMetaData": function () {}
};
agGrid.BaseGridSerializingSession.prototype = {
    "extractHeaderValue": function () {},
    "extractRowCellValue": function () {},
    "getHeaderName": function () {},
    "createValueForGroupNode": function () {},
    "processCell": function () {}
};
/**********************************************************************
 * End Generated Extern for agGrid
 /**********************************************************************/
