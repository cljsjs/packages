/**********************************************************************
 * Extern for Chart
 * Generated by http://jmmk.github.io/javascript-externs-generator
 **********************************************************************/
var Chart = {
  "defaults": {
    "global": {
      "responsive": {},
      "responsiveAnimationDuration": {},
      "maintainAspectRatio": {},
      "events": {},
      "hover": {
        "onHover": {},
        "mode": {},
        "intersect": {},
        "animationDuration": {}
      },
      "onClick": {},
      "defaultColor": {},
      "defaultFontColor": {},
      "defaultFontFamily": {},
      "defaultFontSize": {},
      "defaultFontStyle": {},
      "showLines": {},
      "elements": {
        "arc": {
          "backgroundColor": {},
          "borderColor": {},
          "borderWidth": {}
        },
        "line": {
          "tension": {},
          "backgroundColor": {},
          "borderWidth": {},
          "borderColor": {},
          "borderCapStyle": {},
          "borderDash": {},
          "borderDashOffset": {},
          "borderJoinStyle": {},
          "capBezierPoints": {},
          "fill": {}
        },
        "point": {
          "radius": {},
          "pointStyle": {},
          "backgroundColor": {},
          "borderWidth": {},
          "borderColor": {},
          "hitRadius": {},
          "hoverRadius": {},
          "hoverBorderWidth": {}
        },
        "rectangle": {
          "backgroundColor": {},
          "borderWidth": {},
          "borderColor": {},
          "borderSkipped": {}
        }
      },
      "legendCallback": function () {},
      "plugins": {},
      "animation": {
        "duration": {},
        "easing": {},
        "onProgress": function () {},
        "onComplete": function () {}
      },
      "title": {
        "display": {},
        "position": {},
        "fullWidth": {},
        "fontStyle": {},
        "padding": {},
        "text": {}
      },
      "legend": {
        "display": {},
        "position": {},
        "fullWidth": {},
        "reverse": {},
        "onClick": function () {},
        "onHover": {},
        "labels": {
          "boxWidth": {},
          "padding": {},
          "generateLabels": function () {}
        }
      },
      "tooltips": {
        "enabled": {},
        "custom": {},
        "mode": {},
        "position": {},
        "intersect": {},
        "backgroundColor": {},
        "titleFontStyle": {},
        "titleSpacing": {},
        "titleMarginBottom": {},
        "titleFontColor": {},
        "titleAlign": {},
        "bodySpacing": {},
        "bodyFontColor": {},
        "bodyAlign": {},
        "footerFontStyle": {},
        "footerSpacing": {},
        "footerMarginTop": {},
        "footerFontColor": {},
        "footerAlign": {},
        "yPadding": {},
        "xPadding": {},
        "caretSize": {},
        "cornerRadius": {},
        "multiKeyBackground": {},
        "displayColors": {},
        "callbacks": {
          "beforeTitle": function () {},
          "title": function () {},
          "afterTitle": function () {},
          "beforeBody": function () {},
          "beforeLabel": function () {},
          "label": function () {},
          "labelColor": function () {},
          "afterLabel": function () {},
          "afterBody": function () {},
          "beforeFooter": function () {},
          "footer": function () {},
          "afterFooter": function () {}
        }
      }
    },
    "scale": {
      "display": {},
      "position": {},
      "gridLines": {
        "display": {},
        "color": {},
        "lineWidth": {},
        "drawBorder": {},
        "drawOnChartArea": {},
        "drawTicks": {},
        "tickMarkLength": {},
        "zeroLineWidth": {},
        "zeroLineColor": {},
        "offsetGridLines": {},
        "borderDash": {},
        "borderDashOffset": {}
      },
      "scaleLabel": {
        "labelString": {},
        "display": {}
      },
      "ticks": {
        "beginAtZero": {},
        "minRotation": {},
        "maxRotation": {},
        "mirror": {},
        "padding": {},
        "reverse": {},
        "display": {},
        "autoSkip": {},
        "autoSkipPadding": {},
        "labelOffset": {},
        "callback": function () {}
      }
    },
    "bar": {
      "hover": {
        "mode": {}
      },
      "scales": {
        "xAxes": {},
        "yAxes": {}
      }
    },
    "horizontalBar": {
      "hover": {
        "mode": {}
      },
      "scales": {
        "xAxes": {},
        "yAxes": {}
      },
      "elements": {
        "rectangle": {
          "borderSkipped": {}
        }
      },
      "tooltips": {
        "callbacks": {
          "title": function () {},
          "label": function () {}
        }
      }
    },
    "bubble": {
      "hover": {
        "mode": {}
      },
      "scales": {
        "xAxes": {},
        "yAxes": {}
      },
      "tooltips": {
        "callbacks": {
          "title": function () {},
          "label": function () {}
        }
      }
    },
    "doughnut": {
      "animation": {
        "animateRotate": {},
        "animateScale": {}
      },
      "aspectRatio": {},
      "hover": {
        "mode": {}
      },
      "legendCallback": function () {},
      "legend": {
        "labels": {
          "generateLabels": function () {}
        },
        "onClick": function () {}
      },
      "cutoutPercentage": {},
      "rotation": {},
      "circumference": {},
      "tooltips": {
        "callbacks": {
          "title": function () {},
          "label": function () {}
        }
      }
    },
    "pie": {
      "animation": {
        "animateRotate": {},
        "animateScale": {}
      },
      "aspectRatio": {},
      "hover": {
        "mode": {}
      },
      "legendCallback": function () {},
      "legend": {
        "labels": {
          "generateLabels": function () {}
        },
        "onClick": function () {}
      },
      "cutoutPercentage": {},
      "rotation": {},
      "circumference": {},
      "tooltips": {
        "callbacks": {
          "title": function () {},
          "label": function () {}
        }
      }
    },
    "line": {
      "showLines": {},
      "spanGaps": {},
      "hover": {
        "mode": {}
      },
      "scales": {
        "xAxes": {},
        "yAxes": {}
      }
    },
    "polarArea": {
      "scale": {
        "type": {},
        "lineArc": {},
        "ticks": {
          "beginAtZero": {}
        }
      },
      "animation": {
        "animateRotate": {},
        "animateScale": {}
      },
      "startAngle": {},
      "aspectRatio": {},
      "legendCallback": function () {},
      "legend": {
        "labels": {
          "generateLabels": function () {}
        },
        "onClick": function () {}
      },
      "tooltips": {
        "callbacks": {
          "title": function () {},
          "label": function () {}
        }
      }
    },
    "radar": {
      "aspectRatio": {},
      "scale": {
        "type": {}
      },
      "elements": {
        "line": {
          "tension": {}
        }
      }
    },
    "scatter": {
      "hover": {
        "mode": {}
      },
      "scales": {
        "xAxes": {},
        "yAxes": {}
      },
      "tooltips": {
        "callbacks": {
          "title": function () {},
          "label": function () {}
        }
      }
    }
  },
  "Chart": {
    "defaults": {
      "global": {
        "responsive": {},
        "responsiveAnimationDuration": {},
        "maintainAspectRatio": {},
        "events": {},
        "hover": {
          "onHover": {},
          "mode": {},
          "intersect": {},
          "animationDuration": {}
        },
        "onClick": {},
        "defaultColor": {},
        "defaultFontColor": {},
        "defaultFontFamily": {},
        "defaultFontSize": {},
        "defaultFontStyle": {},
        "showLines": {},
        "elements": {
          "arc": {
            "backgroundColor": {},
            "borderColor": {},
            "borderWidth": {}
          },
          "line": {
            "tension": {},
            "backgroundColor": {},
            "borderWidth": {},
            "borderColor": {},
            "borderCapStyle": {},
            "borderDash": {},
            "borderDashOffset": {},
            "borderJoinStyle": {},
            "capBezierPoints": {},
            "fill": {}
          },
          "point": {
            "radius": {},
            "pointStyle": {},
            "backgroundColor": {},
            "borderWidth": {},
            "borderColor": {},
            "hitRadius": {},
            "hoverRadius": {},
            "hoverBorderWidth": {}
          },
          "rectangle": {
            "backgroundColor": {},
            "borderWidth": {},
            "borderColor": {},
            "borderSkipped": {}
          }
        },
        "legendCallback": function () {},
        "plugins": {},
        "animation": {
          "duration": {},
          "easing": {},
          "onProgress": function () {},
          "onComplete": function () {}
        },
        "title": {
          "display": {},
          "position": {},
          "fullWidth": {},
          "fontStyle": {},
          "padding": {},
          "text": {}
        },
        "legend": {
          "display": {},
          "position": {},
          "fullWidth": {},
          "reverse": {},
          "onClick": function () {},
          "onHover": {},
          "labels": {
            "boxWidth": {},
            "padding": {},
            "generateLabels": function () {}
          }
        },
        "tooltips": {
          "enabled": {},
          "custom": {},
          "mode": {},
          "position": {},
          "intersect": {},
          "backgroundColor": {},
          "titleFontStyle": {},
          "titleSpacing": {},
          "titleMarginBottom": {},
          "titleFontColor": {},
          "titleAlign": {},
          "bodySpacing": {},
          "bodyFontColor": {},
          "bodyAlign": {},
          "footerFontStyle": {},
          "footerSpacing": {},
          "footerMarginTop": {},
          "footerFontColor": {},
          "footerAlign": {},
          "yPadding": {},
          "xPadding": {},
          "caretSize": {},
          "cornerRadius": {},
          "multiKeyBackground": {},
          "displayColors": {},
          "callbacks": {
            "beforeTitle": function () {},
            "title": function () {},
            "afterTitle": function () {},
            "beforeBody": function () {},
            "beforeLabel": function () {},
            "label": function () {},
            "labelColor": function () {},
            "afterLabel": function () {},
            "afterBody": function () {},
            "beforeFooter": function () {},
            "footer": function () {},
            "afterFooter": function () {}
          }
        }
      },
      "scale": {
        "display": {},
        "position": {},
        "gridLines": {
          "display": {},
          "color": {},
          "lineWidth": {},
          "drawBorder": {},
          "drawOnChartArea": {},
          "drawTicks": {},
          "tickMarkLength": {},
          "zeroLineWidth": {},
          "zeroLineColor": {},
          "offsetGridLines": {},
          "borderDash": {},
          "borderDashOffset": {}
        },
        "scaleLabel": {
          "labelString": {},
          "display": {}
        },
        "ticks": {
          "beginAtZero": {},
          "minRotation": {},
          "maxRotation": {},
          "mirror": {},
          "padding": {},
          "reverse": {},
          "display": {},
          "autoSkip": {},
          "autoSkipPadding": {},
          "labelOffset": {},
          "callback": function () {}
        }
      },
      "bar": {
        "hover": {
          "mode": {}
        },
        "scales": {
          "xAxes": {},
          "yAxes": {}
        }
      },
      "horizontalBar": {
        "hover": {
          "mode": {}
        },
        "scales": {
          "xAxes": {},
          "yAxes": {}
        },
        "elements": {
          "rectangle": {
            "borderSkipped": {}
          }
        },
        "tooltips": {
          "callbacks": {
            "title": function () {},
            "label": function () {}
          }
        }
      },
      "bubble": {
        "hover": {
          "mode": {}
        },
        "scales": {
          "xAxes": {},
          "yAxes": {}
        },
        "tooltips": {
          "callbacks": {
            "title": function () {},
            "label": function () {}
          }
        }
      },
      "doughnut": {
        "animation": {
          "animateRotate": {},
          "animateScale": {}
        },
        "aspectRatio": {},
        "hover": {
          "mode": {}
        },
        "legendCallback": function () {},
        "legend": {
          "labels": {
            "generateLabels": function () {}
          },
          "onClick": function () {}
        },
        "cutoutPercentage": {},
        "rotation": {},
        "circumference": {},
        "tooltips": {
          "callbacks": {
            "title": function () {},
            "label": function () {}
          }
        }
      },
      "pie": {
        "animation": {
          "animateRotate": {},
          "animateScale": {}
        },
        "aspectRatio": {},
        "hover": {
          "mode": {}
        },
        "legendCallback": function () {},
        "legend": {
          "labels": {
            "generateLabels": function () {}
          },
          "onClick": function () {}
        },
        "cutoutPercentage": {},
        "rotation": {},
        "circumference": {},
        "tooltips": {
          "callbacks": {
            "title": function () {},
            "label": function () {}
          }
        }
      },
      "line": {
        "showLines": {},
        "spanGaps": {},
        "hover": {
          "mode": {}
        },
        "scales": {
          "xAxes": {},
          "yAxes": {}
        }
      },
      "polarArea": {
        "scale": {
          "type": {},
          "lineArc": {},
          "ticks": {
            "beginAtZero": {}
          }
        },
        "animation": {
          "animateRotate": {},
          "animateScale": {}
        },
        "startAngle": {},
        "aspectRatio": {},
        "legendCallback": function () {},
        "legend": {
          "labels": {
            "generateLabels": function () {}
          },
          "onClick": function () {}
        },
        "tooltips": {
          "callbacks": {
            "title": function () {},
            "label": function () {}
          }
        }
      },
      "radar": {
        "aspectRatio": {},
        "scale": {
          "type": {}
        },
        "elements": {
          "line": {
            "tension": {}
          }
        }
      },
      "scatter": {
        "hover": {
          "mode": {}
        },
        "scales": {
          "xAxes": {},
          "yAxes": {}
        },
        "tooltips": {
          "callbacks": {
            "title": function () {},
            "label": function () {}
          }
        }
      }
    },
    "Chart": function () {},
    "helpers": {
      "each": function () {},
      "clone": function () {},
      "extend": function () {},
      "configMerge": function () {},
      "scaleMerge": function () {},
      "getValueAtIndexOrDefault": function () {},
      "getValueOrDefault": function () {},
      "indexOf": function () {},
      "where": function () {},
      "findIndex": function () {},
      "findNextWhere": function () {},
      "findPreviousWhere": function () {},
      "inherits": function () {},
      "noop": function () {},
      "uid": function () {},
      "isNumber": function () {},
      "almostEquals": function () {},
      "almostWhole": function () {},
      "max": function () {},
      "min": function () {},
      "sign": function () {},
      "log10": function () {},
      "toRadians": function () {},
      "toDegrees": function () {},
      "getAngleFromPoint": function () {},
      "distanceBetweenPoints": function () {},
      "aliasPixel": function () {},
      "splineCurve": function () {},
      "EPSILON": {},
      "splineCurveMonotone": function () {},
      "nextItem": function () {},
      "previousItem": function () {},
      "niceNum": function () {},
      "easingEffects": {
        "linear": function () {},
        "easeInQuad": function () {},
        "easeOutQuad": function () {},
        "easeInOutQuad": function () {},
        "easeInCubic": function () {},
        "easeOutCubic": function () {},
        "easeInOutCubic": function () {},
        "easeInQuart": function () {},
        "easeOutQuart": function () {},
        "easeInOutQuart": function () {},
        "easeInQuint": function () {},
        "easeOutQuint": function () {},
        "easeInOutQuint": function () {},
        "easeInSine": function () {},
        "easeOutSine": function () {},
        "easeInOutSine": function () {},
        "easeInExpo": function () {},
        "easeOutExpo": function () {},
        "easeInOutExpo": function () {},
        "easeInCirc": function () {},
        "easeOutCirc": function () {},
        "easeInOutCirc": function () {},
        "easeInElastic": function () {},
        "easeOutElastic": function () {},
        "easeInOutElastic": function () {},
        "easeInBack": function () {},
        "easeOutBack": function () {},
        "easeInOutBack": function () {},
        "easeInBounce": function () {},
        "easeOutBounce": function () {},
        "easeInOutBounce": function () {}
      },
      "requestAnimFrame": function () {},
      "getRelativePosition": function () {},
      "addEvent": function () {},
      "removeEvent": function () {},
      "getConstraintWidth": function () {},
      "getConstraintHeight": function () {},
      "getMaximumWidth": function () {},
      "getMaximumHeight": function () {},
      "getStyle": function () {},
      "retinaScale": function () {},
      "clear": function () {},
      "fontString": function () {},
      "longestText": function () {},
      "measureText": function () {},
      "numberOfLabelLines": function () {},
      "drawRoundedRectangle": function () {},
      "color": function () {},
      "isArray": function () {},
      "arrayEquals": function () {},
      "callCallback": function () {},
      "getHoverColor": function () {}
    },
    "platform": {
      "acquireContext": function () {},
      "releaseContext": function () {},
      "addEventListener": function () {},
      "removeEventListener": function () {}
    },
    "canvasHelpers": {
      "drawPoint": function () {},
      "clipArea": function () {},
      "unclipArea": function () {}
    },
    "plugins": {
      "_plugins": {},
      "_cacheId": {},
      "register": function () {},
      "unregister": function () {},
      "clear": function () {},
      "count": function () {},
      "getAll": function () {},
      "notify": function () {},
      "descriptors": function () {}
    },
    "pluginService": {
      "_plugins": {},
      "_cacheId": {},
      "register": function () {},
      "unregister": function () {},
      "clear": function () {},
      "count": function () {},
      "getAll": function () {},
      "notify": function () {},
      "descriptors": function () {}
    },
    "PluginBase": {
      "extend": function () {},
      "__super__": {}
    },
    "elements": {
      "Arc": {
        "extend": function () {},
        "__super__": {
          "initialize": function () {},
          "pivot": function () {},
          "transition": function () {},
          "tooltipPosition": function () {},
          "hasValue": function () {}
        }
      },
      "Line": {
        "extend": function () {},
        "__super__": {
          "initialize": function () {},
          "pivot": function () {},
          "transition": function () {},
          "tooltipPosition": function () {},
          "hasValue": function () {}
        }
      },
      "Point": {
        "extend": function () {},
        "__super__": {
          "initialize": function () {},
          "pivot": function () {},
          "transition": function () {},
          "tooltipPosition": function () {},
          "hasValue": function () {}
        }
      },
      "Rectangle": {
        "extend": function () {},
        "__super__": {
          "initialize": function () {},
          "pivot": function () {},
          "transition": function () {},
          "tooltipPosition": function () {},
          "hasValue": function () {}
        }
      }
    },
    "Element": {
      "extend": function () {}
    },
    "Animation": {
      "extend": function () {},
      "__super__": {
        "initialize": function () {},
        "pivot": function () {},
        "transition": function () {},
        "tooltipPosition": function () {},
        "hasValue": function () {}
      }
    },
    "animationService": {
      "frameDuration": {},
      "animations": {},
      "dropFrames": {},
      "request": {},
      "addAnimation": function () {},
      "cancelAnimation": function () {},
      "requestAnimationFrame": function () {},
      "startDigest": function () {}
    },
    "types": {},
    "instances": {},
    "controllers": {
      "bar": {
        "extend": function () {},
        "__super__": {
          "datasetElementType": {},
          "dataElementType": {},
          "initialize": function () {},
          "updateIndex": function () {},
          "linkScales": function () {},
          "getDataset": function () {},
          "getMeta": function () {},
          "getScaleForId": function () {},
          "reset": function () {},
          "destroy": function () {},
          "createMetaDataset": function () {},
          "createMetaData": function () {},
          "addElements": function () {},
          "addElementAndReset": function () {},
          "buildOrUpdateElements": function () {},
          "update": function () {},
          "draw": function () {},
          "removeHoverStyle": function () {},
          "setHoverStyle": function () {},
          "resyncElements": function () {},
          "insertElements": function () {},
          "onDataPush": function () {},
          "onDataPop": function () {},
          "onDataShift": function () {},
          "onDataSplice": function () {},
          "onDataUnshift": function () {}
        }
      },
      "horizontalBar": {
        "extend": function () {},
        "__super__": {
          "constructor": {
            "extend": function () {},
            "__super__": {
              "datasetElementType": {},
              "dataElementType": {},
              "initialize": function () {},
              "updateIndex": function () {},
              "linkScales": function () {},
              "getDataset": function () {},
              "getMeta": function () {},
              "getScaleForId": function () {},
              "reset": function () {},
              "destroy": function () {},
              "createMetaDataset": function () {},
              "createMetaData": function () {},
              "addElements": function () {},
              "addElementAndReset": function () {},
              "buildOrUpdateElements": function () {},
              "update": function () {},
              "draw": function () {},
              "removeHoverStyle": function () {},
              "setHoverStyle": function () {},
              "resyncElements": function () {},
              "insertElements": function () {},
              "onDataPush": function () {},
              "onDataPop": function () {},
              "onDataShift": function () {},
              "onDataSplice": function () {},
              "onDataUnshift": function () {}
            }
          },
          "dataElementType": {
            "extend": function () {},
            "__super__": {
              "initialize": function () {},
              "pivot": function () {},
              "transition": function () {},
              "tooltipPosition": function () {},
              "hasValue": function () {}
            }
          },
          "initialize": function () {},
          "getStackCount": function () {},
          "update": function () {},
          "updateElement": function () {},
          "calculateBarBase": function () {},
          "getRuler": function () {},
          "calculateBarWidth": function () {},
          "getStackIndex": function () {},
          "calculateBarX": function () {},
          "calculateBarY": function () {},
          "draw": function () {},
          "setHoverStyle": function () {},
          "removeHoverStyle": function () {},
          "datasetElementType": {},
          "updateIndex": function () {},
          "linkScales": function () {},
          "getDataset": function () {},
          "getMeta": function () {},
          "getScaleForId": function () {},
          "reset": function () {},
          "destroy": function () {},
          "createMetaDataset": function () {},
          "createMetaData": function () {},
          "addElements": function () {},
          "addElementAndReset": function () {},
          "buildOrUpdateElements": function () {},
          "resyncElements": function () {},
          "insertElements": function () {},
          "onDataPush": function () {},
          "onDataPop": function () {},
          "onDataShift": function () {},
          "onDataSplice": function () {},
          "onDataUnshift": function () {}
        }
      },
      "bubble": {
        "extend": function () {},
        "__super__": {
          "datasetElementType": {},
          "dataElementType": {},
          "initialize": function () {},
          "updateIndex": function () {},
          "linkScales": function () {},
          "getDataset": function () {},
          "getMeta": function () {},
          "getScaleForId": function () {},
          "reset": function () {},
          "destroy": function () {},
          "createMetaDataset": function () {},
          "createMetaData": function () {},
          "addElements": function () {},
          "addElementAndReset": function () {},
          "buildOrUpdateElements": function () {},
          "update": function () {},
          "draw": function () {},
          "removeHoverStyle": function () {},
          "setHoverStyle": function () {},
          "resyncElements": function () {},
          "insertElements": function () {},
          "onDataPush": function () {},
          "onDataPop": function () {},
          "onDataShift": function () {},
          "onDataSplice": function () {},
          "onDataUnshift": function () {}
        }
      },
      "pie": {
        "extend": function () {},
        "__super__": {
          "datasetElementType": {},
          "dataElementType": {},
          "initialize": function () {},
          "updateIndex": function () {},
          "linkScales": function () {},
          "getDataset": function () {},
          "getMeta": function () {},
          "getScaleForId": function () {},
          "reset": function () {},
          "destroy": function () {},
          "createMetaDataset": function () {},
          "createMetaData": function () {},
          "addElements": function () {},
          "addElementAndReset": function () {},
          "buildOrUpdateElements": function () {},
          "update": function () {},
          "draw": function () {},
          "removeHoverStyle": function () {},
          "setHoverStyle": function () {},
          "resyncElements": function () {},
          "insertElements": function () {},
          "onDataPush": function () {},
          "onDataPop": function () {},
          "onDataShift": function () {},
          "onDataSplice": function () {},
          "onDataUnshift": function () {}
        }
      },
      "doughnut": {
        "extend": function () {},
        "__super__": {
          "datasetElementType": {},
          "dataElementType": {},
          "initialize": function () {},
          "updateIndex": function () {},
          "linkScales": function () {},
          "getDataset": function () {},
          "getMeta": function () {},
          "getScaleForId": function () {},
          "reset": function () {},
          "destroy": function () {},
          "createMetaDataset": function () {},
          "createMetaData": function () {},
          "addElements": function () {},
          "addElementAndReset": function () {},
          "buildOrUpdateElements": function () {},
          "update": function () {},
          "draw": function () {},
          "removeHoverStyle": function () {},
          "setHoverStyle": function () {},
          "resyncElements": function () {},
          "insertElements": function () {},
          "onDataPush": function () {},
          "onDataPop": function () {},
          "onDataShift": function () {},
          "onDataSplice": function () {},
          "onDataUnshift": function () {}
        }
      },
      "line": {
        "extend": function () {},
        "__super__": {
          "datasetElementType": {},
          "dataElementType": {},
          "initialize": function () {},
          "updateIndex": function () {},
          "linkScales": function () {},
          "getDataset": function () {},
          "getMeta": function () {},
          "getScaleForId": function () {},
          "reset": function () {},
          "destroy": function () {},
          "createMetaDataset": function () {},
          "createMetaData": function () {},
          "addElements": function () {},
          "addElementAndReset": function () {},
          "buildOrUpdateElements": function () {},
          "update": function () {},
          "draw": function () {},
          "removeHoverStyle": function () {},
          "setHoverStyle": function () {},
          "resyncElements": function () {},
          "insertElements": function () {},
          "onDataPush": function () {},
          "onDataPop": function () {},
          "onDataShift": function () {},
          "onDataSplice": function () {},
          "onDataUnshift": function () {}
        }
      },
      "polarArea": {
        "extend": function () {},
        "__super__": {
          "datasetElementType": {},
          "dataElementType": {},
          "initialize": function () {},
          "updateIndex": function () {},
          "linkScales": function () {},
          "getDataset": function () {},
          "getMeta": function () {},
          "getScaleForId": function () {},
          "reset": function () {},
          "destroy": function () {},
          "createMetaDataset": function () {},
          "createMetaData": function () {},
          "addElements": function () {},
          "addElementAndReset": function () {},
          "buildOrUpdateElements": function () {},
          "update": function () {},
          "draw": function () {},
          "removeHoverStyle": function () {},
          "setHoverStyle": function () {},
          "resyncElements": function () {},
          "insertElements": function () {},
          "onDataPush": function () {},
          "onDataPop": function () {},
          "onDataShift": function () {},
          "onDataSplice": function () {},
          "onDataUnshift": function () {}
        }
      },
      "radar": {
        "extend": function () {},
        "__super__": {
          "datasetElementType": {},
          "dataElementType": {},
          "initialize": function () {},
          "updateIndex": function () {},
          "linkScales": function () {},
          "getDataset": function () {},
          "getMeta": function () {},
          "getScaleForId": function () {},
          "reset": function () {},
          "destroy": function () {},
          "createMetaDataset": function () {},
          "createMetaData": function () {},
          "addElements": function () {},
          "addElementAndReset": function () {},
          "buildOrUpdateElements": function () {},
          "update": function () {},
          "draw": function () {},
          "removeHoverStyle": function () {},
          "setHoverStyle": function () {},
          "resyncElements": function () {},
          "insertElements": function () {},
          "onDataPush": function () {},
          "onDataPop": function () {},
          "onDataShift": function () {},
          "onDataSplice": function () {},
          "onDataUnshift": function () {}
        }
      },
      "scatter": {
        "extend": function () {},
        "__super__": {
          "datasetElementType": {},
          "dataElementType": {},
          "initialize": function () {},
          "updateIndex": function () {},
          "linkScales": function () {},
          "getDataset": function () {},
          "getMeta": function () {},
          "getScaleForId": function () {},
          "reset": function () {},
          "destroy": function () {},
          "createMetaDataset": function () {},
          "createMetaData": function () {},
          "addElements": function () {},
          "addElementAndReset": function () {},
          "buildOrUpdateElements": function () {},
          "update": function () {},
          "draw": function () {},
          "removeHoverStyle": function () {},
          "setHoverStyle": function () {},
          "resyncElements": function () {},
          "insertElements": function () {},
          "onDataPush": function () {},
          "onDataPop": function () {},
          "onDataShift": function () {},
          "onDataSplice": function () {},
          "onDataUnshift": function () {}
        }
      }
    },
    "Controller": function () {},
    "DatasetController": {
      "extend": function () {}
    },
    "layoutService": {
      "defaults": {},
      "addBox": function () {},
      "removeBox": function () {},
      "update": function () {}
    },
    "scaleService": {
      "constructors": {
        "category": {
          "extend": function () {},
          "__super__": {
            "constructor": {
              "extend": function () {},
              "__super__": {
                "initialize": function () {},
                "pivot": function () {},
                "transition": function () {},
                "tooltipPosition": function () {},
                "hasValue": function () {}
              }
            },
            "getPadding": function () {},
            "beforeUpdate": function () {},
            "update": function () {},
            "afterUpdate": function () {},
            "beforeSetDimensions": function () {},
            "setDimensions": function () {},
            "afterSetDimensions": function () {},
            "beforeDataLimits": function () {},
            "determineDataLimits": function () {},
            "afterDataLimits": function () {},
            "beforeBuildTicks": function () {},
            "buildTicks": function () {},
            "afterBuildTicks": function () {},
            "beforeTickToLabelConversion": function () {},
            "convertTicksToLabels": function () {},
            "afterTickToLabelConversion": function () {},
            "beforeCalculateTickRotation": function () {},
            "calculateTickRotation": function () {},
            "afterCalculateTickRotation": function () {},
            "beforeFit": function () {},
            "fit": function () {},
            "handleMargins": function () {},
            "afterFit": function () {},
            "isHorizontal": function () {},
            "isFullWidth": function () {},
            "getRightValue": function () {},
            "getLabelForIndex": function () {},
            "getPixelForValue": function () {},
            "getValueForPixel": function () {},
            "getPixelForTick": function () {},
            "getPixelForDecimal": function () {},
            "getBasePixel": function () {},
            "getBaseValue": function () {},
            "draw": function () {},
            "initialize": function () {},
            "pivot": function () {},
            "transition": function () {},
            "tooltipPosition": function () {},
            "hasValue": function () {}
          }
        },
        "linear": {
          "extend": function () {},
          "__super__": {
            "constructor": {
              "extend": function () {},
              "__super__": {
                "constructor": {
                  "extend": {
                    "closure_uid_972347496": {}
                  },
                  "__super__": {
                    "initialize": {
                      "closure_uid_972347496": {}
                    },
                    "pivot": {
                      "closure_uid_972347496": {}
                    },
                    "transition": {
                      "closure_uid_972347496": {}
                    },
                    "tooltipPosition": {
                      "closure_uid_972347496": {}
                    },
                    "hasValue": {
                      "closure_uid_972347496": {}
                    },
                    "closure_uid_972347496": {}
                  }
                },
                "getPadding": function () {},
                "beforeUpdate": function () {},
                "update": function () {},
                "afterUpdate": function () {},
                "beforeSetDimensions": function () {},
                "setDimensions": function () {},
                "afterSetDimensions": function () {},
                "beforeDataLimits": function () {},
                "determineDataLimits": function () {},
                "afterDataLimits": function () {},
                "beforeBuildTicks": function () {},
                "buildTicks": function () {},
                "afterBuildTicks": function () {},
                "beforeTickToLabelConversion": function () {},
                "convertTicksToLabels": function () {},
                "afterTickToLabelConversion": function () {},
                "beforeCalculateTickRotation": function () {},
                "calculateTickRotation": function () {},
                "afterCalculateTickRotation": function () {},
                "beforeFit": function () {},
                "fit": function () {},
                "handleMargins": function () {},
                "afterFit": function () {},
                "isHorizontal": function () {},
                "isFullWidth": function () {},
                "getRightValue": function () {},
                "getLabelForIndex": function () {},
                "getPixelForValue": function () {},
                "getValueForPixel": function () {},
                "getPixelForTick": function () {},
                "getPixelForDecimal": function () {},
                "getBasePixel": function () {},
                "getBaseValue": function () {},
                "draw": function () {},
                "initialize": {
                  "closure_uid_972347496": {}
                },
                "pivot": {
                  "closure_uid_972347496": {}
                },
                "transition": {
                  "closure_uid_972347496": {}
                },
                "tooltipPosition": {
                  "closure_uid_972347496": {}
                },
                "hasValue": {
                  "closure_uid_972347496": {}
                }
              }
            },
            "handleTickRangeOptions": function () {},
            "getTickLimit": function () {},
            "handleDirectionalChanges": function () {},
            "buildTicks": function () {},
            "convertTicksToLabels": function () {},
            "getPadding": function () {},
            "beforeUpdate": function () {},
            "update": function () {},
            "afterUpdate": function () {},
            "beforeSetDimensions": function () {},
            "setDimensions": function () {},
            "afterSetDimensions": function () {},
            "beforeDataLimits": function () {},
            "determineDataLimits": function () {},
            "afterDataLimits": function () {},
            "beforeBuildTicks": function () {},
            "afterBuildTicks": function () {},
            "beforeTickToLabelConversion": function () {},
            "afterTickToLabelConversion": function () {},
            "beforeCalculateTickRotation": function () {},
            "calculateTickRotation": function () {},
            "afterCalculateTickRotation": function () {},
            "beforeFit": function () {},
            "fit": function () {},
            "handleMargins": function () {},
            "afterFit": function () {},
            "isHorizontal": function () {},
            "isFullWidth": function () {},
            "getRightValue": function () {},
            "getLabelForIndex": function () {},
            "getPixelForValue": function () {},
            "getValueForPixel": function () {},
            "getPixelForTick": function () {},
            "getPixelForDecimal": function () {},
            "getBasePixel": function () {},
            "getBaseValue": function () {},
            "draw": function () {},
            "initialize": {
              "closure_uid_972347496": {}
            },
            "pivot": {
              "closure_uid_972347496": {}
            },
            "transition": {
              "closure_uid_972347496": {}
            },
            "tooltipPosition": {
              "closure_uid_972347496": {}
            },
            "hasValue": {
              "closure_uid_972347496": {}
            }
          }
        },
        "logarithmic": {
          "extend": {
            "closure_uid_972347496": {}
          },
          "__super__": {
            "constructor": {
              "extend": {
                "closure_uid_972347496": {}
              },
              "__super__": {
                "initialize": {
                  "closure_uid_972347496": {}
                },
                "pivot": {
                  "closure_uid_972347496": {}
                },
                "transition": {
                  "closure_uid_972347496": {}
                },
                "tooltipPosition": {
                  "closure_uid_972347496": {}
                },
                "hasValue": {
                  "closure_uid_972347496": {}
                },
                "closure_uid_972347496": {}
              },
              "closure_uid_972347496": {}
            },
            "getPadding": function () {},
            "beforeUpdate": function () {},
            "update": function () {},
            "afterUpdate": function () {},
            "beforeSetDimensions": function () {},
            "setDimensions": function () {},
            "afterSetDimensions": function () {},
            "beforeDataLimits": function () {},
            "determineDataLimits": function () {},
            "afterDataLimits": function () {},
            "beforeBuildTicks": function () {},
            "buildTicks": function () {},
            "afterBuildTicks": function () {},
            "beforeTickToLabelConversion": function () {},
            "convertTicksToLabels": function () {},
            "afterTickToLabelConversion": function () {},
            "beforeCalculateTickRotation": function () {},
            "calculateTickRotation": function () {},
            "afterCalculateTickRotation": function () {},
            "beforeFit": function () {},
            "fit": function () {},
            "handleMargins": function () {},
            "afterFit": function () {},
            "isHorizontal": function () {},
            "isFullWidth": function () {},
            "getRightValue": function () {},
            "getLabelForIndex": function () {},
            "getPixelForValue": function () {},
            "getValueForPixel": function () {},
            "getPixelForTick": function () {},
            "getPixelForDecimal": function () {},
            "getBasePixel": function () {},
            "getBaseValue": function () {},
            "draw": function () {},
            "closure_uid_972347496": {},
            "initialize": {
              "closure_uid_972347496": {}
            },
            "pivot": {
              "closure_uid_972347496": {}
            },
            "transition": {
              "closure_uid_972347496": {}
            },
            "tooltipPosition": {
              "closure_uid_972347496": {}
            },
            "hasValue": {
              "closure_uid_972347496": {}
            }
          }
        },
        "radialLinear": {
          "extend": {
            "closure_uid_972347496": {}
          },
          "__super__": {
            "constructor": {
              "extend": {
                "closure_uid_972347496": {}
              },
              "__super__": {
                "constructor": {
                  "extend": {
                    "closure_uid_972347496": {}
                  },
                  "__super__": {
                    "initialize": {
                      "closure_uid_972347496": {}
                    },
                    "pivot": {
                      "closure_uid_972347496": {}
                    },
                    "transition": {
                      "closure_uid_972347496": {}
                    },
                    "tooltipPosition": {
                      "closure_uid_972347496": {}
                    },
                    "hasValue": {
                      "closure_uid_972347496": {}
                    },
                    "closure_uid_972347496": {}
                  },
                  "closure_uid_972347496": {}
                },
                "getPadding": function () {},
                "beforeUpdate": function () {},
                "update": function () {},
                "afterUpdate": function () {},
                "beforeSetDimensions": function () {},
                "setDimensions": function () {},
                "afterSetDimensions": function () {},
                "beforeDataLimits": function () {},
                "determineDataLimits": function () {},
                "afterDataLimits": function () {},
                "beforeBuildTicks": function () {},
                "buildTicks": function () {},
                "afterBuildTicks": function () {},
                "beforeTickToLabelConversion": function () {},
                "convertTicksToLabels": function () {},
                "afterTickToLabelConversion": function () {},
                "beforeCalculateTickRotation": function () {},
                "calculateTickRotation": function () {},
                "afterCalculateTickRotation": function () {},
                "beforeFit": function () {},
                "fit": function () {},
                "handleMargins": function () {},
                "afterFit": function () {},
                "isHorizontal": function () {},
                "isFullWidth": function () {},
                "getRightValue": function () {},
                "getLabelForIndex": function () {},
                "getPixelForValue": function () {},
                "getValueForPixel": function () {},
                "getPixelForTick": function () {},
                "getPixelForDecimal": function () {},
                "getBasePixel": function () {},
                "getBaseValue": function () {},
                "draw": function () {},
                "closure_uid_972347496": {},
                "initialize": {
                  "closure_uid_972347496": {}
                },
                "pivot": {
                  "closure_uid_972347496": {}
                },
                "transition": {
                  "closure_uid_972347496": {}
                },
                "tooltipPosition": {
                  "closure_uid_972347496": {}
                },
                "hasValue": {
                  "closure_uid_972347496": {}
                }
              },
              "closure_uid_972347496": {}
            },
            "handleTickRangeOptions": function () {},
            "getTickLimit": function () {},
            "handleDirectionalChanges": function () {},
            "buildTicks": function () {},
            "convertTicksToLabels": function () {},
            "closure_uid_972347496": {},
            "getPadding": function () {},
            "beforeUpdate": function () {},
            "update": function () {},
            "afterUpdate": function () {},
            "beforeSetDimensions": function () {},
            "setDimensions": function () {},
            "afterSetDimensions": function () {},
            "beforeDataLimits": function () {},
            "determineDataLimits": function () {},
            "afterDataLimits": function () {},
            "beforeBuildTicks": function () {},
            "afterBuildTicks": function () {},
            "beforeTickToLabelConversion": function () {},
            "afterTickToLabelConversion": function () {},
            "beforeCalculateTickRotation": function () {},
            "calculateTickRotation": function () {},
            "afterCalculateTickRotation": function () {},
            "beforeFit": function () {},
            "fit": function () {},
            "handleMargins": function () {},
            "afterFit": function () {},
            "isHorizontal": function () {},
            "isFullWidth": function () {},
            "getRightValue": function () {},
            "getLabelForIndex": function () {},
            "getPixelForValue": function () {},
            "getValueForPixel": function () {},
            "getPixelForTick": function () {},
            "getPixelForDecimal": function () {},
            "getBasePixel": function () {},
            "getBaseValue": function () {},
            "draw": function () {},
            "initialize": {
              "closure_uid_972347496": {}
            },
            "pivot": {
              "closure_uid_972347496": {}
            },
            "transition": {
              "closure_uid_972347496": {}
            },
            "tooltipPosition": {
              "closure_uid_972347496": {}
            },
            "hasValue": {
              "closure_uid_972347496": {}
            }
          }
        },
        "time": {
          "extend": {
            "closure_uid_972347496": {}
          },
          "__super__": {
            "constructor": {
              "extend": {
                "closure_uid_972347496": {}
              },
              "__super__": {
                "initialize": {
                  "closure_uid_972347496": {}
                },
                "pivot": {
                  "closure_uid_972347496": {}
                },
                "transition": {
                  "closure_uid_972347496": {}
                },
                "tooltipPosition": {
                  "closure_uid_972347496": {}
                },
                "hasValue": {
                  "closure_uid_972347496": {}
                },
                "closure_uid_972347496": {}
              },
              "closure_uid_972347496": {}
            },
            "getPadding": function () {},
            "beforeUpdate": function () {},
            "update": function () {},
            "afterUpdate": function () {},
            "beforeSetDimensions": function () {},
            "setDimensions": function () {},
            "afterSetDimensions": function () {},
            "beforeDataLimits": function () {},
            "determineDataLimits": function () {},
            "afterDataLimits": function () {},
            "beforeBuildTicks": function () {},
            "buildTicks": function () {},
            "afterBuildTicks": function () {},
            "beforeTickToLabelConversion": function () {},
            "convertTicksToLabels": function () {},
            "afterTickToLabelConversion": function () {},
            "beforeCalculateTickRotation": function () {},
            "calculateTickRotation": function () {},
            "afterCalculateTickRotation": function () {},
            "beforeFit": function () {},
            "fit": function () {},
            "handleMargins": function () {},
            "afterFit": function () {},
            "isHorizontal": function () {},
            "isFullWidth": function () {},
            "getRightValue": function () {},
            "getLabelForIndex": function () {},
            "getPixelForValue": function () {},
            "getValueForPixel": function () {},
            "getPixelForTick": function () {},
            "getPixelForDecimal": function () {},
            "getBasePixel": function () {},
            "getBaseValue": function () {},
            "draw": function () {},
            "closure_uid_972347496": {},
            "initialize": {
              "closure_uid_972347496": {}
            },
            "pivot": {
              "closure_uid_972347496": {}
            },
            "transition": {
              "closure_uid_972347496": {}
            },
            "tooltipPosition": {
              "closure_uid_972347496": {}
            },
            "hasValue": {
              "closure_uid_972347496": {}
            }
          }
        }
      },
      "defaults": {
        "category": {
          "position": {}
        },
        "linear": {
          "position": {},
          "ticks": {
            "callback": function () {}
          }
        },
        "logarithmic": {
          "position": {},
          "ticks": {
            "callback": function () {}
          }
        },
        "radialLinear": {
          "display": {},
          "animate": {},
          "lineArc": {},
          "position": {},
          "angleLines": {
            "display": {},
            "color": {},
            "lineWidth": {}
          },
          "ticks": {
            "showLabelBackdrop": {},
            "backdropColor": {},
            "backdropPaddingY": {},
            "backdropPaddingX": {},
            "callback": function () {}
          },
          "pointLabels": {
            "fontSize": {},
            "callback": function () {}
          }
        },
        "time": {
          "position": {},
          "time": {
            "parser": {},
            "format": {},
            "unit": {},
            "round": {},
            "displayFormat": {},
            "isoWeekday": {},
            "minUnit": {},
            "displayFormats": {
              "millisecond": {},
              "second": {},
              "minute": {},
              "hour": {},
              "day": {},
              "week": {},
              "month": {},
              "quarter": {},
              "year": {}
            }
          },
          "ticks": {
            "autoSkip": {}
          }
        }
      },
      "registerScaleType": function () {},
      "getScaleConstructor": function () {},
      "getScaleDefaults": function () {},
      "updateScaleDefaults": function () {},
      "addScalesToLayout": function () {}
    },
    "Ticks": {
      "generators": {
        "linear": function () {},
        "logarithmic": function () {}
      },
      "formatters": {
        "values": function () {},
        "linear": function () {},
        "logarithmic": function () {}
      }
    },
    "Scale": {
      "extend": {
        "closure_uid_972347496": {}
      },
      "__super__": {
        "initialize": {
          "closure_uid_972347496": {}
        },
        "pivot": {
          "closure_uid_972347496": {}
        },
        "transition": {
          "closure_uid_972347496": {}
        },
        "tooltipPosition": {
          "closure_uid_972347496": {}
        },
        "hasValue": {
          "closure_uid_972347496": {}
        },
        "closure_uid_972347496": {}
      },
      "closure_uid_972347496": {}
    },
    "Title": {
      "extend": {
        "closure_uid_972347496": {}
      },
      "__super__": {
        "initialize": {
          "closure_uid_972347496": {}
        },
        "pivot": {
          "closure_uid_972347496": {}
        },
        "transition": {
          "closure_uid_972347496": {}
        },
        "tooltipPosition": {
          "closure_uid_972347496": {}
        },
        "hasValue": {
          "closure_uid_972347496": {}
        },
        "closure_uid_972347496": {}
      }
    },
    "Legend": {
      "extend": {
        "closure_uid_972347496": {}
      },
      "__super__": {
        "initialize": {
          "closure_uid_972347496": {}
        },
        "pivot": {
          "closure_uid_972347496": {}
        },
        "transition": {
          "closure_uid_972347496": {}
        },
        "tooltipPosition": {
          "closure_uid_972347496": {}
        },
        "hasValue": {
          "closure_uid_972347496": {}
        },
        "closure_uid_972347496": {}
      }
    },
    "Interaction": {
      "modes": {
        "single": function () {},
        "label": function () {},
        "index": function () {},
        "dataset": function () {},
        "x-axis": function () {},
        "point": function () {},
        "nearest": function () {},
        "x": function () {},
        "y": function () {}
      }
    },
    "Tooltip": {
      "extend": {
        "closure_uid_972347496": {}
      },
      "__super__": {
        "initialize": {
          "closure_uid_972347496": {}
        },
        "pivot": {
          "closure_uid_972347496": {}
        },
        "transition": {
          "closure_uid_972347496": {}
        },
        "tooltipPosition": {
          "closure_uid_972347496": {}
        },
        "hasValue": {
          "closure_uid_972347496": {}
        },
        "closure_uid_972347496": {}
      },
      "positioners": {
        "average": function () {},
        "nearest": function () {}
      }
    },
    "LinearScaleBase": {
      "extend": {
        "closure_uid_972347496": {}
      },
      "__super__": {
        "constructor": {
          "extend": {
            "closure_uid_972347496": {}
          },
          "__super__": {
            "initialize": {
              "closure_uid_972347496": {}
            },
            "pivot": {
              "closure_uid_972347496": {}
            },
            "transition": {
              "closure_uid_972347496": {}
            },
            "tooltipPosition": {
              "closure_uid_972347496": {}
            },
            "hasValue": {
              "closure_uid_972347496": {}
            },
            "closure_uid_972347496": {}
          },
          "closure_uid_972347496": {}
        },
        "getPadding": function () {},
        "beforeUpdate": function () {},
        "update": function () {},
        "afterUpdate": function () {},
        "beforeSetDimensions": function () {},
        "setDimensions": function () {},
        "afterSetDimensions": function () {},
        "beforeDataLimits": function () {},
        "determineDataLimits": function () {},
        "afterDataLimits": function () {},
        "beforeBuildTicks": function () {},
        "buildTicks": function () {},
        "afterBuildTicks": function () {},
        "beforeTickToLabelConversion": function () {},
        "convertTicksToLabels": function () {},
        "afterTickToLabelConversion": function () {},
        "beforeCalculateTickRotation": function () {},
        "calculateTickRotation": function () {},
        "afterCalculateTickRotation": function () {},
        "beforeFit": function () {},
        "fit": function () {},
        "handleMargins": function () {},
        "afterFit": function () {},
        "isHorizontal": function () {},
        "isFullWidth": function () {},
        "getRightValue": function () {},
        "getLabelForIndex": function () {},
        "getPixelForValue": function () {},
        "getValueForPixel": function () {},
        "getPixelForTick": function () {},
        "getPixelForDecimal": function () {},
        "getBasePixel": function () {},
        "getBaseValue": function () {},
        "draw": function () {},
        "closure_uid_972347496": {},
        "initialize": {
          "closure_uid_972347496": {}
        },
        "pivot": {
          "closure_uid_972347496": {}
        },
        "transition": {
          "closure_uid_972347496": {}
        },
        "tooltipPosition": {
          "closure_uid_972347496": {}
        },
        "hasValue": {
          "closure_uid_972347496": {}
        }
      },
      "closure_uid_972347496": {}
    },
    "Bar": function () {},
    "Bubble": function () {},
    "Doughnut": function () {},
    "Line": function () {},
    "PolarArea": function () {},
    "Radar": function () {},
    "Scatter": function () {}
  },
  "helpers": {
    "each": function () {},
    "clone": function () {},
    "extend": function () {},
    "configMerge": function () {},
    "scaleMerge": function () {},
    "getValueAtIndexOrDefault": function () {},
    "getValueOrDefault": function () {},
    "indexOf": function () {},
    "where": function () {},
    "findIndex": function () {},
    "findNextWhere": function () {},
    "findPreviousWhere": function () {},
    "inherits": {
      "closure_uid_972347496": {}
    },
    "noop": function () {},
    "uid": function () {},
    "isNumber": function () {},
    "almostEquals": function () {},
    "almostWhole": function () {},
    "max": function () {},
    "min": function () {},
    "sign": function () {},
    "log10": function () {},
    "toRadians": function () {},
    "toDegrees": function () {},
    "getAngleFromPoint": function () {},
    "distanceBetweenPoints": function () {},
    "aliasPixel": function () {},
    "splineCurve": function () {},
    "EPSILON": {},
    "splineCurveMonotone": function () {},
    "nextItem": function () {},
    "previousItem": function () {},
    "niceNum": function () {},
    "easingEffects": {
      "linear": function () {},
      "easeInQuad": function () {},
      "easeOutQuad": function () {},
      "easeInOutQuad": function () {},
      "easeInCubic": function () {},
      "easeOutCubic": function () {},
      "easeInOutCubic": function () {},
      "easeInQuart": function () {},
      "easeOutQuart": function () {},
      "easeInOutQuart": function () {},
      "easeInQuint": function () {},
      "easeOutQuint": function () {},
      "easeInOutQuint": function () {},
      "easeInSine": function () {},
      "easeOutSine": function () {},
      "easeInOutSine": function () {},
      "easeInExpo": function () {},
      "easeOutExpo": function () {},
      "easeInOutExpo": function () {},
      "easeInCirc": function () {},
      "easeOutCirc": function () {},
      "easeInOutCirc": function () {},
      "easeInElastic": function () {},
      "easeOutElastic": function () {},
      "easeInOutElastic": function () {},
      "easeInBack": function () {},
      "easeOutBack": function () {},
      "easeInOutBack": function () {},
      "easeInBounce": function () {},
      "easeOutBounce": function () {},
      "easeInOutBounce": function () {}
    },
    "requestAnimFrame": function () {},
    "getRelativePosition": function () {},
    "addEvent": function () {},
    "removeEvent": function () {},
    "getConstraintWidth": function () {},
    "getConstraintHeight": function () {},
    "getMaximumWidth": function () {},
    "getMaximumHeight": function () {},
    "getStyle": function () {},
    "retinaScale": function () {},
    "clear": function () {},
    "fontString": function () {},
    "longestText": function () {},
    "measureText": function () {},
    "numberOfLabelLines": function () {},
    "drawRoundedRectangle": function () {},
    "color": function () {},
    "isArray": function () {},
    "arrayEquals": function () {},
    "callCallback": function () {},
    "getHoverColor": function () {}
  },
  "platform": {
    "acquireContext": function () {},
    "releaseContext": function () {},
    "addEventListener": function () {},
    "removeEventListener": function () {}
  },
  "canvasHelpers": {
    "drawPoint": function () {},
    "clipArea": function () {},
    "unclipArea": function () {}
  },
  "plugins": {
    "_plugins": {},
    "_cacheId": {},
    "register": function () {},
    "unregister": function () {},
    "clear": function () {},
    "count": function () {},
    "getAll": function () {},
    "notify": function () {},
    "descriptors": function () {}
  },
  "pluginService": {
    "_plugins": {},
    "_cacheId": {},
    "register": function () {},
    "unregister": function () {},
    "clear": function () {},
    "count": function () {},
    "getAll": function () {},
    "notify": function () {},
    "descriptors": function () {}
  },
  "PluginBase": {
    "extend": {
      "closure_uid_972347496": {}
    },
    "__super__": {}
  },
  "elements": {
    "Arc": {
      "extend": {
        "closure_uid_972347496": {}
      },
      "__super__": {
        "initialize": {
          "closure_uid_972347496": {}
        },
        "pivot": {
          "closure_uid_972347496": {}
        },
        "transition": {
          "closure_uid_972347496": {}
        },
        "tooltipPosition": {
          "closure_uid_972347496": {}
        },
        "hasValue": {
          "closure_uid_972347496": {}
        },
        "closure_uid_972347496": {}
      }
    },
    "Line": {
      "extend": {
        "closure_uid_972347496": {}
      },
      "__super__": {
        "initialize": {
          "closure_uid_972347496": {}
        },
        "pivot": {
          "closure_uid_972347496": {}
        },
        "transition": {
          "closure_uid_972347496": {}
        },
        "tooltipPosition": {
          "closure_uid_972347496": {}
        },
        "hasValue": {
          "closure_uid_972347496": {}
        },
        "closure_uid_972347496": {}
      }
    },
    "Point": {
      "extend": {
        "closure_uid_972347496": {}
      },
      "__super__": {
        "initialize": {
          "closure_uid_972347496": {}
        },
        "pivot": {
          "closure_uid_972347496": {}
        },
        "transition": {
          "closure_uid_972347496": {}
        },
        "tooltipPosition": {
          "closure_uid_972347496": {}
        },
        "hasValue": {
          "closure_uid_972347496": {}
        },
        "closure_uid_972347496": {}
      }
    },
    "Rectangle": {
      "extend": {
        "closure_uid_972347496": {}
      },
      "__super__": {
        "initialize": {
          "closure_uid_972347496": {}
        },
        "pivot": {
          "closure_uid_972347496": {}
        },
        "transition": {
          "closure_uid_972347496": {}
        },
        "tooltipPosition": {
          "closure_uid_972347496": {}
        },
        "hasValue": {
          "closure_uid_972347496": {}
        },
        "closure_uid_972347496": {}
      }
    }
  },
  "Element": {
    "extend": {
      "closure_uid_972347496": {}
    }
  },
  "Animation": {
    "extend": {
      "closure_uid_972347496": {}
    },
    "__super__": {
      "initialize": {
        "closure_uid_972347496": {}
      },
      "pivot": {
        "closure_uid_972347496": {}
      },
      "transition": {
        "closure_uid_972347496": {}
      },
      "tooltipPosition": {
        "closure_uid_972347496": {}
      },
      "hasValue": {
        "closure_uid_972347496": {}
      },
      "closure_uid_972347496": {}
    }
  },
  "animationService": {
    "frameDuration": {},
    "animations": {},
    "dropFrames": {},
    "request": {},
    "addAnimation": function () {},
    "cancelAnimation": function () {},
    "requestAnimationFrame": function () {},
    "startDigest": function () {}
  },
  "types": {},
  "instances": {},
  "controllers": {
    "bar": {
      "extend": {
        "closure_uid_972347496": {}
      },
      "__super__": {
        "datasetElementType": {},
        "dataElementType": {},
        "initialize": function () {},
        "updateIndex": function () {},
        "linkScales": function () {},
        "getDataset": function () {},
        "getMeta": function () {},
        "getScaleForId": function () {},
        "reset": function () {},
        "destroy": function () {},
        "createMetaDataset": function () {},
        "createMetaData": function () {},
        "addElements": function () {},
        "addElementAndReset": function () {},
        "buildOrUpdateElements": function () {},
        "update": function () {},
        "draw": function () {},
        "removeHoverStyle": function () {},
        "setHoverStyle": function () {},
        "resyncElements": function () {},
        "insertElements": function () {},
        "onDataPush": function () {},
        "onDataPop": function () {},
        "onDataShift": function () {},
        "onDataSplice": function () {},
        "onDataUnshift": function () {}
      }
    },
    "horizontalBar": {
      "extend": {
        "closure_uid_972347496": {}
      },
      "__super__": {
        "constructor": {
          "extend": {
            "closure_uid_972347496": {}
          },
          "__super__": {
            "datasetElementType": {},
            "dataElementType": {},
            "initialize": function () {},
            "updateIndex": function () {},
            "linkScales": function () {},
            "getDataset": function () {},
            "getMeta": function () {},
            "getScaleForId": function () {},
            "reset": function () {},
            "destroy": function () {},
            "createMetaDataset": function () {},
            "createMetaData": function () {},
            "addElements": function () {},
            "addElementAndReset": function () {},
            "buildOrUpdateElements": function () {},
            "update": function () {},
            "draw": function () {},
            "removeHoverStyle": function () {},
            "setHoverStyle": function () {},
            "resyncElements": function () {},
            "insertElements": function () {},
            "onDataPush": function () {},
            "onDataPop": function () {},
            "onDataShift": function () {},
            "onDataSplice": function () {},
            "onDataUnshift": function () {}
          }
        },
        "dataElementType": {
          "extend": {
            "closure_uid_972347496": {}
          },
          "__super__": {
            "initialize": {
              "closure_uid_972347496": {}
            },
            "pivot": {
              "closure_uid_972347496": {}
            },
            "transition": {
              "closure_uid_972347496": {}
            },
            "tooltipPosition": {
              "closure_uid_972347496": {}
            },
            "hasValue": {
              "closure_uid_972347496": {}
            },
            "closure_uid_972347496": {}
          }
        },
        "initialize": function () {},
        "getStackCount": function () {},
        "update": function () {},
        "updateElement": function () {},
        "calculateBarBase": function () {},
        "getRuler": function () {},
        "calculateBarWidth": function () {},
        "getStackIndex": function () {},
        "calculateBarX": function () {},
        "calculateBarY": function () {},
        "draw": function () {},
        "setHoverStyle": function () {},
        "removeHoverStyle": function () {},
        "datasetElementType": {},
        "updateIndex": function () {},
        "linkScales": function () {},
        "getDataset": function () {},
        "getMeta": function () {},
        "getScaleForId": function () {},
        "reset": function () {},
        "destroy": function () {},
        "createMetaDataset": function () {},
        "createMetaData": function () {},
        "addElements": function () {},
        "addElementAndReset": function () {},
        "buildOrUpdateElements": function () {},
        "resyncElements": function () {},
        "insertElements": function () {},
        "onDataPush": function () {},
        "onDataPop": function () {},
        "onDataShift": function () {},
        "onDataSplice": function () {},
        "onDataUnshift": function () {}
      }
    },
    "bubble": {
      "extend": {
        "closure_uid_972347496": {}
      },
      "__super__": {
        "datasetElementType": {},
        "dataElementType": {},
        "initialize": function () {},
        "updateIndex": function () {},
        "linkScales": function () {},
        "getDataset": function () {},
        "getMeta": function () {},
        "getScaleForId": function () {},
        "reset": function () {},
        "destroy": function () {},
        "createMetaDataset": function () {},
        "createMetaData": function () {},
        "addElements": function () {},
        "addElementAndReset": function () {},
        "buildOrUpdateElements": function () {},
        "update": function () {},
        "draw": function () {},
        "removeHoverStyle": function () {},
        "setHoverStyle": function () {},
        "resyncElements": function () {},
        "insertElements": function () {},
        "onDataPush": function () {},
        "onDataPop": function () {},
        "onDataShift": function () {},
        "onDataSplice": function () {},
        "onDataUnshift": function () {}
      }
    },
    "pie": {
      "extend": {
        "closure_uid_972347496": {}
      },
      "__super__": {
        "datasetElementType": {},
        "dataElementType": {},
        "initialize": function () {},
        "updateIndex": function () {},
        "linkScales": function () {},
        "getDataset": function () {},
        "getMeta": function () {},
        "getScaleForId": function () {},
        "reset": function () {},
        "destroy": function () {},
        "createMetaDataset": function () {},
        "createMetaData": function () {},
        "addElements": function () {},
        "addElementAndReset": function () {},
        "buildOrUpdateElements": function () {},
        "update": function () {},
        "draw": function () {},
        "removeHoverStyle": function () {},
        "setHoverStyle": function () {},
        "resyncElements": function () {},
        "insertElements": function () {},
        "onDataPush": function () {},
        "onDataPop": function () {},
        "onDataShift": function () {},
        "onDataSplice": function () {},
        "onDataUnshift": function () {}
      }
    },
    "doughnut": {
      "extend": {
        "closure_uid_972347496": {}
      },
      "__super__": {
        "datasetElementType": {},
        "dataElementType": {},
        "initialize": function () {},
        "updateIndex": function () {},
        "linkScales": function () {},
        "getDataset": function () {},
        "getMeta": function () {},
        "getScaleForId": function () {},
        "reset": function () {},
        "destroy": function () {},
        "createMetaDataset": function () {},
        "createMetaData": function () {},
        "addElements": function () {},
        "addElementAndReset": function () {},
        "buildOrUpdateElements": function () {},
        "update": function () {},
        "draw": function () {},
        "removeHoverStyle": function () {},
        "setHoverStyle": function () {},
        "resyncElements": function () {},
        "insertElements": function () {},
        "onDataPush": function () {},
        "onDataPop": function () {},
        "onDataShift": function () {},
        "onDataSplice": function () {},
        "onDataUnshift": function () {}
      }
    },
    "line": {
      "extend": {
        "closure_uid_972347496": {}
      },
      "__super__": {
        "datasetElementType": {},
        "dataElementType": {},
        "initialize": function () {},
        "updateIndex": function () {},
        "linkScales": function () {},
        "getDataset": function () {},
        "getMeta": function () {},
        "getScaleForId": function () {},
        "reset": function () {},
        "destroy": function () {},
        "createMetaDataset": function () {},
        "createMetaData": function () {},
        "addElements": function () {},
        "addElementAndReset": function () {},
        "buildOrUpdateElements": function () {},
        "update": function () {},
        "draw": function () {},
        "removeHoverStyle": function () {},
        "setHoverStyle": function () {},
        "resyncElements": function () {},
        "insertElements": function () {},
        "onDataPush": function () {},
        "onDataPop": function () {},
        "onDataShift": function () {},
        "onDataSplice": function () {},
        "onDataUnshift": function () {}
      }
    },
    "polarArea": {
      "extend": {
        "closure_uid_972347496": {}
      },
      "__super__": {
        "datasetElementType": {},
        "dataElementType": {},
        "initialize": function () {},
        "updateIndex": function () {},
        "linkScales": function () {},
        "getDataset": function () {},
        "getMeta": function () {},
        "getScaleForId": function () {},
        "reset": function () {},
        "destroy": function () {},
        "createMetaDataset": function () {},
        "createMetaData": function () {},
        "addElements": function () {},
        "addElementAndReset": function () {},
        "buildOrUpdateElements": function () {},
        "update": function () {},
        "draw": function () {},
        "removeHoverStyle": function () {},
        "setHoverStyle": function () {},
        "resyncElements": function () {},
        "insertElements": function () {},
        "onDataPush": function () {},
        "onDataPop": function () {},
        "onDataShift": function () {},
        "onDataSplice": function () {},
        "onDataUnshift": function () {}
      }
    },
    "radar": {
      "extend": {
        "closure_uid_972347496": {}
      },
      "__super__": {
        "datasetElementType": {},
        "dataElementType": {},
        "initialize": function () {},
        "updateIndex": function () {},
        "linkScales": function () {},
        "getDataset": function () {},
        "getMeta": function () {},
        "getScaleForId": function () {},
        "reset": function () {},
        "destroy": function () {},
        "createMetaDataset": function () {},
        "createMetaData": function () {},
        "addElements": function () {},
        "addElementAndReset": function () {},
        "buildOrUpdateElements": function () {},
        "update": function () {},
        "draw": function () {},
        "removeHoverStyle": function () {},
        "setHoverStyle": function () {},
        "resyncElements": function () {},
        "insertElements": function () {},
        "onDataPush": function () {},
        "onDataPop": function () {},
        "onDataShift": function () {},
        "onDataSplice": function () {},
        "onDataUnshift": function () {}
      }
    },
    "scatter": {
      "extend": {
        "closure_uid_972347496": {}
      },
      "__super__": {
        "datasetElementType": {},
        "dataElementType": {},
        "initialize": function () {},
        "updateIndex": function () {},
        "linkScales": function () {},
        "getDataset": function () {},
        "getMeta": function () {},
        "getScaleForId": function () {},
        "reset": function () {},
        "destroy": function () {},
        "createMetaDataset": function () {},
        "createMetaData": function () {},
        "addElements": function () {},
        "addElementAndReset": function () {},
        "buildOrUpdateElements": function () {},
        "update": function () {},
        "draw": function () {},
        "removeHoverStyle": function () {},
        "setHoverStyle": function () {},
        "resyncElements": function () {},
        "insertElements": function () {},
        "onDataPush": function () {},
        "onDataPop": function () {},
        "onDataShift": function () {},
        "onDataSplice": function () {},
        "onDataUnshift": function () {}
      }
    }
  },
  "Controller": function () {},
  "DatasetController": {
    "extend": {
      "closure_uid_972347496": {}
    }
  },
  "layoutService": {
    "defaults": {},
    "addBox": function () {},
    "removeBox": function () {},
    "update": function () {}
  },
  "scaleService": {
    "constructors": {
      "category": {
        "extend": {
          "closure_uid_972347496": {}
        },
        "__super__": {
          "constructor": {
            "extend": {
              "closure_uid_972347496": {}
            },
            "__super__": {
              "initialize": {
                "closure_uid_972347496": {}
              },
              "pivot": {
                "closure_uid_972347496": {}
              },
              "transition": {
                "closure_uid_972347496": {}
              },
              "tooltipPosition": {
                "closure_uid_972347496": {}
              },
              "hasValue": {
                "closure_uid_972347496": {}
              },
              "closure_uid_972347496": {}
            },
            "closure_uid_972347496": {}
          },
          "getPadding": function () {},
          "beforeUpdate": function () {},
          "update": function () {},
          "afterUpdate": function () {},
          "beforeSetDimensions": function () {},
          "setDimensions": function () {},
          "afterSetDimensions": function () {},
          "beforeDataLimits": function () {},
          "determineDataLimits": function () {},
          "afterDataLimits": function () {},
          "beforeBuildTicks": function () {},
          "buildTicks": function () {},
          "afterBuildTicks": function () {},
          "beforeTickToLabelConversion": function () {},
          "convertTicksToLabels": function () {},
          "afterTickToLabelConversion": function () {},
          "beforeCalculateTickRotation": function () {},
          "calculateTickRotation": function () {},
          "afterCalculateTickRotation": function () {},
          "beforeFit": function () {},
          "fit": function () {},
          "handleMargins": function () {},
          "afterFit": function () {},
          "isHorizontal": function () {},
          "isFullWidth": function () {},
          "getRightValue": function () {},
          "getLabelForIndex": function () {},
          "getPixelForValue": function () {},
          "getValueForPixel": function () {},
          "getPixelForTick": function () {},
          "getPixelForDecimal": function () {},
          "getBasePixel": function () {},
          "getBaseValue": function () {},
          "draw": function () {},
          "closure_uid_972347496": {},
          "initialize": {
            "closure_uid_972347496": {}
          },
          "pivot": {
            "closure_uid_972347496": {}
          },
          "transition": {
            "closure_uid_972347496": {}
          },
          "tooltipPosition": {
            "closure_uid_972347496": {}
          },
          "hasValue": {
            "closure_uid_972347496": {}
          }
        }
      },
      "linear": {
        "extend": {
          "closure_uid_972347496": {}
        },
        "__super__": {
          "constructor": {
            "extend": {
              "closure_uid_972347496": {}
            },
            "__super__": {
              "constructor": {
                "extend": {
                  "closure_uid_972347496": {}
                },
                "__super__": {
                  "initialize": {
                    "closure_uid_972347496": {}
                  },
                  "pivot": {
                    "closure_uid_972347496": {}
                  },
                  "transition": {
                    "closure_uid_972347496": {}
                  },
                  "tooltipPosition": {
                    "closure_uid_972347496": {}
                  },
                  "hasValue": {
                    "closure_uid_972347496": {}
                  },
                  "closure_uid_972347496": {}
                },
                "closure_uid_972347496": {}
              },
              "getPadding": function () {},
              "beforeUpdate": function () {},
              "update": function () {},
              "afterUpdate": function () {},
              "beforeSetDimensions": function () {},
              "setDimensions": function () {},
              "afterSetDimensions": function () {},
              "beforeDataLimits": function () {},
              "determineDataLimits": function () {},
              "afterDataLimits": function () {},
              "beforeBuildTicks": function () {},
              "buildTicks": function () {},
              "afterBuildTicks": function () {},
              "beforeTickToLabelConversion": function () {},
              "convertTicksToLabels": function () {},
              "afterTickToLabelConversion": function () {},
              "beforeCalculateTickRotation": function () {},
              "calculateTickRotation": function () {},
              "afterCalculateTickRotation": function () {},
              "beforeFit": function () {},
              "fit": function () {},
              "handleMargins": function () {},
              "afterFit": function () {},
              "isHorizontal": function () {},
              "isFullWidth": function () {},
              "getRightValue": function () {},
              "getLabelForIndex": function () {},
              "getPixelForValue": function () {},
              "getValueForPixel": function () {},
              "getPixelForTick": function () {},
              "getPixelForDecimal": function () {},
              "getBasePixel": function () {},
              "getBaseValue": function () {},
              "draw": function () {},
              "closure_uid_972347496": {},
              "initialize": {
                "closure_uid_972347496": {}
              },
              "pivot": {
                "closure_uid_972347496": {}
              },
              "transition": {
                "closure_uid_972347496": {}
              },
              "tooltipPosition": {
                "closure_uid_972347496": {}
              },
              "hasValue": {
                "closure_uid_972347496": {}
              }
            },
            "closure_uid_972347496": {}
          },
          "handleTickRangeOptions": function () {},
          "getTickLimit": function () {},
          "handleDirectionalChanges": function () {},
          "buildTicks": function () {},
          "convertTicksToLabels": function () {},
          "closure_uid_972347496": {},
          "getPadding": function () {},
          "beforeUpdate": function () {},
          "update": function () {},
          "afterUpdate": function () {},
          "beforeSetDimensions": function () {},
          "setDimensions": function () {},
          "afterSetDimensions": function () {},
          "beforeDataLimits": function () {},
          "determineDataLimits": function () {},
          "afterDataLimits": function () {},
          "beforeBuildTicks": function () {},
          "afterBuildTicks": function () {},
          "beforeTickToLabelConversion": function () {},
          "afterTickToLabelConversion": function () {},
          "beforeCalculateTickRotation": function () {},
          "calculateTickRotation": function () {},
          "afterCalculateTickRotation": function () {},
          "beforeFit": function () {},
          "fit": function () {},
          "handleMargins": function () {},
          "afterFit": function () {},
          "isHorizontal": function () {},
          "isFullWidth": function () {},
          "getRightValue": function () {},
          "getLabelForIndex": function () {},
          "getPixelForValue": function () {},
          "getValueForPixel": function () {},
          "getPixelForTick": function () {},
          "getPixelForDecimal": function () {},
          "getBasePixel": function () {},
          "getBaseValue": function () {},
          "draw": function () {},
          "initialize": {
            "closure_uid_972347496": {}
          },
          "pivot": {
            "closure_uid_972347496": {}
          },
          "transition": {
            "closure_uid_972347496": {}
          },
          "tooltipPosition": {
            "closure_uid_972347496": {}
          },
          "hasValue": {
            "closure_uid_972347496": {}
          }
        },
        "closure_uid_972347496": {}
      },
      "logarithmic": {
        "extend": {
          "closure_uid_972347496": {}
        },
        "__super__": {
          "constructor": {
            "extend": {
              "closure_uid_972347496": {}
            },
            "__super__": {
              "initialize": {
                "closure_uid_972347496": {}
              },
              "pivot": {
                "closure_uid_972347496": {}
              },
              "transition": {
                "closure_uid_972347496": {}
              },
              "tooltipPosition": {
                "closure_uid_972347496": {}
              },
              "hasValue": {
                "closure_uid_972347496": {}
              },
              "closure_uid_972347496": {}
            },
            "closure_uid_972347496": {}
          },
          "getPadding": function () {},
          "beforeUpdate": function () {},
          "update": function () {},
          "afterUpdate": function () {},
          "beforeSetDimensions": function () {},
          "setDimensions": function () {},
          "afterSetDimensions": function () {},
          "beforeDataLimits": function () {},
          "determineDataLimits": function () {},
          "afterDataLimits": function () {},
          "beforeBuildTicks": function () {},
          "buildTicks": function () {},
          "afterBuildTicks": function () {},
          "beforeTickToLabelConversion": function () {},
          "convertTicksToLabels": function () {},
          "afterTickToLabelConversion": function () {},
          "beforeCalculateTickRotation": function () {},
          "calculateTickRotation": function () {},
          "afterCalculateTickRotation": function () {},
          "beforeFit": function () {},
          "fit": function () {},
          "handleMargins": function () {},
          "afterFit": function () {},
          "isHorizontal": function () {},
          "isFullWidth": function () {},
          "getRightValue": function () {},
          "getLabelForIndex": function () {},
          "getPixelForValue": function () {},
          "getValueForPixel": function () {},
          "getPixelForTick": function () {},
          "getPixelForDecimal": function () {},
          "getBasePixel": function () {},
          "getBaseValue": function () {},
          "draw": function () {},
          "closure_uid_972347496": {},
          "initialize": {
            "closure_uid_972347496": {}
          },
          "pivot": {
            "closure_uid_972347496": {}
          },
          "transition": {
            "closure_uid_972347496": {}
          },
          "tooltipPosition": {
            "closure_uid_972347496": {}
          },
          "hasValue": {
            "closure_uid_972347496": {}
          }
        }
      },
      "radialLinear": {
        "extend": {
          "closure_uid_972347496": {}
        },
        "__super__": {
          "constructor": {
            "extend": {
              "closure_uid_972347496": {}
            },
            "__super__": {
              "constructor": {
                "extend": {
                  "closure_uid_972347496": {}
                },
                "__super__": {
                  "initialize": {
                    "closure_uid_972347496": {}
                  },
                  "pivot": {
                    "closure_uid_972347496": {}
                  },
                  "transition": {
                    "closure_uid_972347496": {}
                  },
                  "tooltipPosition": {
                    "closure_uid_972347496": {}
                  },
                  "hasValue": {
                    "closure_uid_972347496": {}
                  },
                  "closure_uid_972347496": {}
                },
                "closure_uid_972347496": {}
              },
              "getPadding": function () {},
              "beforeUpdate": function () {},
              "update": function () {},
              "afterUpdate": function () {},
              "beforeSetDimensions": function () {},
              "setDimensions": function () {},
              "afterSetDimensions": function () {},
              "beforeDataLimits": function () {},
              "determineDataLimits": function () {},
              "afterDataLimits": function () {},
              "beforeBuildTicks": function () {},
              "buildTicks": function () {},
              "afterBuildTicks": function () {},
              "beforeTickToLabelConversion": function () {},
              "convertTicksToLabels": function () {},
              "afterTickToLabelConversion": function () {},
              "beforeCalculateTickRotation": function () {},
              "calculateTickRotation": function () {},
              "afterCalculateTickRotation": function () {},
              "beforeFit": function () {},
              "fit": function () {},
              "handleMargins": function () {},
              "afterFit": function () {},
              "isHorizontal": function () {},
              "isFullWidth": function () {},
              "getRightValue": function () {},
              "getLabelForIndex": function () {},
              "getPixelForValue": function () {},
              "getValueForPixel": function () {},
              "getPixelForTick": function () {},
              "getPixelForDecimal": function () {},
              "getBasePixel": function () {},
              "getBaseValue": function () {},
              "draw": function () {},
              "closure_uid_972347496": {},
              "initialize": {
                "closure_uid_972347496": {}
              },
              "pivot": {
                "closure_uid_972347496": {}
              },
              "transition": {
                "closure_uid_972347496": {}
              },
              "tooltipPosition": {
                "closure_uid_972347496": {}
              },
              "hasValue": {
                "closure_uid_972347496": {}
              }
            },
            "closure_uid_972347496": {}
          },
          "handleTickRangeOptions": function () {},
          "getTickLimit": function () {},
          "handleDirectionalChanges": function () {},
          "buildTicks": function () {},
          "convertTicksToLabels": function () {},
          "closure_uid_972347496": {},
          "getPadding": function () {},
          "beforeUpdate": function () {},
          "update": function () {},
          "afterUpdate": function () {},
          "beforeSetDimensions": function () {},
          "setDimensions": function () {},
          "afterSetDimensions": function () {},
          "beforeDataLimits": function () {},
          "determineDataLimits": function () {},
          "afterDataLimits": function () {},
          "beforeBuildTicks": function () {},
          "afterBuildTicks": function () {},
          "beforeTickToLabelConversion": function () {},
          "afterTickToLabelConversion": function () {},
          "beforeCalculateTickRotation": function () {},
          "calculateTickRotation": function () {},
          "afterCalculateTickRotation": function () {},
          "beforeFit": function () {},
          "fit": function () {},
          "handleMargins": function () {},
          "afterFit": function () {},
          "isHorizontal": function () {},
          "isFullWidth": function () {},
          "getRightValue": function () {},
          "getLabelForIndex": function () {},
          "getPixelForValue": function () {},
          "getValueForPixel": function () {},
          "getPixelForTick": function () {},
          "getPixelForDecimal": function () {},
          "getBasePixel": function () {},
          "getBaseValue": function () {},
          "draw": function () {},
          "initialize": {
            "closure_uid_972347496": {}
          },
          "pivot": {
            "closure_uid_972347496": {}
          },
          "transition": {
            "closure_uid_972347496": {}
          },
          "tooltipPosition": {
            "closure_uid_972347496": {}
          },
          "hasValue": {
            "closure_uid_972347496": {}
          }
        },
        "closure_uid_972347496": {}
      },
      "time": {
        "extend": {
          "closure_uid_972347496": {}
        },
        "__super__": {
          "constructor": {
            "extend": {
              "closure_uid_972347496": {}
            },
            "__super__": {
              "initialize": {
                "closure_uid_972347496": {}
              },
              "pivot": {
                "closure_uid_972347496": {}
              },
              "transition": {
                "closure_uid_972347496": {}
              },
              "tooltipPosition": {
                "closure_uid_972347496": {}
              },
              "hasValue": {
                "closure_uid_972347496": {}
              },
              "closure_uid_972347496": {}
            },
            "closure_uid_972347496": {}
          },
          "getPadding": function () {},
          "beforeUpdate": function () {},
          "update": function () {},
          "afterUpdate": function () {},
          "beforeSetDimensions": function () {},
          "setDimensions": function () {},
          "afterSetDimensions": function () {},
          "beforeDataLimits": function () {},
          "determineDataLimits": function () {},
          "afterDataLimits": function () {},
          "beforeBuildTicks": function () {},
          "buildTicks": function () {},
          "afterBuildTicks": function () {},
          "beforeTickToLabelConversion": function () {},
          "convertTicksToLabels": function () {},
          "afterTickToLabelConversion": function () {},
          "beforeCalculateTickRotation": function () {},
          "calculateTickRotation": function () {},
          "afterCalculateTickRotation": function () {},
          "beforeFit": function () {},
          "fit": function () {},
          "handleMargins": function () {},
          "afterFit": function () {},
          "isHorizontal": function () {},
          "isFullWidth": function () {},
          "getRightValue": function () {},
          "getLabelForIndex": function () {},
          "getPixelForValue": function () {},
          "getValueForPixel": function () {},
          "getPixelForTick": function () {},
          "getPixelForDecimal": function () {},
          "getBasePixel": function () {},
          "getBaseValue": function () {},
          "draw": function () {},
          "closure_uid_972347496": {},
          "initialize": {
            "closure_uid_972347496": {}
          },
          "pivot": {
            "closure_uid_972347496": {}
          },
          "transition": {
            "closure_uid_972347496": {}
          },
          "tooltipPosition": {
            "closure_uid_972347496": {}
          },
          "hasValue": {
            "closure_uid_972347496": {}
          }
        }
      },
      "closure_uid_972347496": {}
    },
    "defaults": {
      "category": {
        "position": {}
      },
      "linear": {
        "position": {},
        "ticks": {
          "callback": function () {}
        }
      },
      "logarithmic": {
        "position": {},
        "ticks": {
          "callback": function () {}
        }
      },
      "radialLinear": {
        "display": {},
        "animate": {},
        "lineArc": {},
        "position": {},
        "angleLines": {
          "display": {},
          "color": {},
          "lineWidth": {}
        },
        "ticks": {
          "showLabelBackdrop": {},
          "backdropColor": {},
          "backdropPaddingY": {},
          "backdropPaddingX": {},
          "callback": function () {}
        },
        "pointLabels": {
          "fontSize": {},
          "callback": function () {}
        }
      },
      "time": {
        "position": {},
        "time": {
          "parser": {},
          "format": {},
          "unit": {},
          "round": {},
          "displayFormat": {},
          "isoWeekday": {},
          "minUnit": {},
          "displayFormats": {
            "millisecond": {},
            "second": {},
            "minute": {},
            "hour": {},
            "day": {},
            "week": {},
            "month": {},
            "quarter": {},
            "year": {}
          }
        },
        "ticks": {
          "autoSkip": {}
        }
      }
    },
    "registerScaleType": function () {},
    "getScaleConstructor": function () {},
    "getScaleDefaults": function () {},
    "updateScaleDefaults": function () {},
    "addScalesToLayout": function () {},
    "closure_uid_972347496": {}
  },
  "Ticks": {
    "generators": {
      "linear": function () {},
      "logarithmic": function () {}
    },
    "formatters": {
      "values": function () {},
      "linear": function () {},
      "logarithmic": function () {}
    }
  },
  "Scale": {
    "extend": {
      "closure_uid_972347496": {}
    },
    "__super__": {
      "initialize": {
        "closure_uid_972347496": {}
      },
      "pivot": {
        "closure_uid_972347496": {}
      },
      "transition": {
        "closure_uid_972347496": {}
      },
      "tooltipPosition": {
        "closure_uid_972347496": {}
      },
      "hasValue": {
        "closure_uid_972347496": {}
      },
      "closure_uid_972347496": {}
    },
    "closure_uid_972347496": {}
  },
  "Title": {
    "extend": {
      "closure_uid_972347496": {}
    },
    "__super__": {
      "initialize": {
        "closure_uid_972347496": {}
      },
      "pivot": {
        "closure_uid_972347496": {}
      },
      "transition": {
        "closure_uid_972347496": {}
      },
      "tooltipPosition": {
        "closure_uid_972347496": {}
      },
      "hasValue": {
        "closure_uid_972347496": {}
      },
      "closure_uid_972347496": {}
    }
  },
  "Legend": {
    "extend": {
      "closure_uid_972347496": {}
    },
    "__super__": {
      "initialize": {
        "closure_uid_972347496": {}
      },
      "pivot": {
        "closure_uid_972347496": {}
      },
      "transition": {
        "closure_uid_972347496": {}
      },
      "tooltipPosition": {
        "closure_uid_972347496": {}
      },
      "hasValue": {
        "closure_uid_972347496": {}
      },
      "closure_uid_972347496": {}
    }
  },
  "Interaction": {
    "modes": {
      "single": function () {},
      "label": function () {},
      "index": function () {},
      "dataset": function () {},
      "x-axis": function () {},
      "point": function () {},
      "nearest": function () {},
      "x": function () {},
      "y": function () {}
    }
  },
  "Tooltip": {
    "extend": {
      "closure_uid_972347496": {}
    },
    "__super__": {
      "initialize": {
        "closure_uid_972347496": {}
      },
      "pivot": {
        "closure_uid_972347496": {}
      },
      "transition": {
        "closure_uid_972347496": {}
      },
      "tooltipPosition": {
        "closure_uid_972347496": {}
      },
      "hasValue": {
        "closure_uid_972347496": {}
      },
      "closure_uid_972347496": {}
    },
    "positioners": {
      "average": function () {},
      "nearest": function () {}
    }
  },
  "LinearScaleBase": {
    "extend": {
      "closure_uid_972347496": {}
    },
    "__super__": {
      "constructor": {
        "extend": {
          "closure_uid_972347496": {}
        },
        "__super__": {
          "initialize": {
            "closure_uid_972347496": {}
          },
          "pivot": {
            "closure_uid_972347496": {}
          },
          "transition": {
            "closure_uid_972347496": {}
          },
          "tooltipPosition": {
            "closure_uid_972347496": {}
          },
          "hasValue": {
            "closure_uid_972347496": {}
          },
          "closure_uid_972347496": {}
        },
        "closure_uid_972347496": {}
      },
      "getPadding": function () {},
      "beforeUpdate": function () {},
      "update": function () {},
      "afterUpdate": function () {},
      "beforeSetDimensions": function () {},
      "setDimensions": function () {},
      "afterSetDimensions": function () {},
      "beforeDataLimits": function () {},
      "determineDataLimits": function () {},
      "afterDataLimits": function () {},
      "beforeBuildTicks": function () {},
      "buildTicks": function () {},
      "afterBuildTicks": function () {},
      "beforeTickToLabelConversion": function () {},
      "convertTicksToLabels": function () {},
      "afterTickToLabelConversion": function () {},
      "beforeCalculateTickRotation": function () {},
      "calculateTickRotation": function () {},
      "afterCalculateTickRotation": function () {},
      "beforeFit": function () {},
      "fit": function () {},
      "handleMargins": function () {},
      "afterFit": function () {},
      "isHorizontal": function () {},
      "isFullWidth": function () {},
      "getRightValue": function () {},
      "getLabelForIndex": function () {},
      "getPixelForValue": function () {},
      "getValueForPixel": function () {},
      "getPixelForTick": function () {},
      "getPixelForDecimal": function () {},
      "getBasePixel": function () {},
      "getBaseValue": function () {},
      "draw": function () {},
      "closure_uid_972347496": {},
      "initialize": {
        "closure_uid_972347496": {}
      },
      "pivot": {
        "closure_uid_972347496": {}
      },
      "transition": {
        "closure_uid_972347496": {}
      },
      "tooltipPosition": {
        "closure_uid_972347496": {}
      },
      "hasValue": {
        "closure_uid_972347496": {}
      }
    },
    "closure_uid_972347496": {}
  },
  "Bar": function () {},
  "Bubble": function () {},
  "Doughnut": function () {},
  "Line": function () {},
  "PolarArea": function () {},
  "Radar": function () {},
  "Scatter": function () {}
};
Chart.Chart.PluginBase.prototype = {
  "constructor": function () {}
};
Chart.Chart.elements.Arc.prototype = {
  "constructor": function () {},
  "inLabelRange": function () {},
  "inRange": function () {},
  "getCenterPoint": function () {},
  "getArea": function () {},
  "tooltipPosition": function () {},
  "draw": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "hasValue": function () {}
};
Chart.Chart.elements.Line.prototype = {
  "constructor": function () {},
  "draw": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {}
};
Chart.Chart.elements.Point.prototype = {
  "constructor": function () {},
  "inRange": function () {},
  "inLabelRange": function () {},
  "inXRange": function () {},
  "inYRange": function () {},
  "getCenterPoint": function () {},
  "getArea": function () {},
  "tooltipPosition": function () {},
  "draw": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "hasValue": function () {}
};
Chart.Chart.elements.Rectangle.prototype = {
  "constructor": function () {},
  "draw": function () {},
  "height": function () {},
  "inRange": function () {},
  "inLabelRange": function () {},
  "inXRange": function () {},
  "inYRange": function () {},
  "getCenterPoint": function () {},
  "getArea": function () {},
  "tooltipPosition": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "hasValue": function () {}
};
Chart.Chart.Element.prototype = {
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {}
};
Chart.Chart.Animation.prototype = {
  "constructor": function () {},
  "currentStep": function () {},
  "numSteps": function () {},
  "easing": function () {},
  "render": function () {},
  "onAnimationProgress": function () {},
  "onAnimationComplete": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {}
};
Chart.Chart.controllers.bar.prototype = {
  "constructor": function () {},
  "dataElementType": function () {},
  "initialize": function () {},
  "getStackCount": function () {},
  "update": function () {},
  "updateElement": function () {},
  "calculateBarBase": function () {},
  "getRuler": function () {},
  "calculateBarWidth": function () {},
  "getStackIndex": function () {},
  "calculateBarX": function () {},
  "calculateBarY": function () {},
  "draw": function () {},
  "setHoverStyle": function () {},
  "removeHoverStyle": function () {},
  "datasetElementType": function () {},
  "updateIndex": function () {},
  "linkScales": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getScaleForId": function () {},
  "reset": function () {},
  "destroy": function () {},
  "createMetaDataset": function () {},
  "createMetaData": function () {},
  "addElements": function () {},
  "addElementAndReset": function () {},
  "buildOrUpdateElements": function () {},
  "resyncElements": function () {},
  "insertElements": function () {},
  "onDataPush": function () {},
  "onDataPop": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {}
};
Chart.Chart.controllers.horizontalBar.prototype = {
  "constructor": function () {},
  "getStackCount": function () {},
  "updateElement": function () {},
  "calculateBarBase": function () {},
  "getRuler": function () {},
  "calculateBarHeight": function () {},
  "getStackIndex": function () {},
  "calculateBarX": function () {},
  "calculateBarY": function () {},
  "dataElementType": function () {},
  "initialize": function () {},
  "update": function () {},
  "calculateBarWidth": function () {},
  "draw": function () {},
  "setHoverStyle": function () {},
  "removeHoverStyle": function () {},
  "datasetElementType": function () {},
  "updateIndex": function () {},
  "linkScales": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getScaleForId": function () {},
  "reset": function () {},
  "destroy": function () {},
  "createMetaDataset": function () {},
  "createMetaData": function () {},
  "addElements": function () {},
  "addElementAndReset": function () {},
  "buildOrUpdateElements": function () {},
  "resyncElements": function () {},
  "insertElements": function () {},
  "onDataPush": function () {},
  "onDataPop": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {}
};
Chart.Chart.controllers.horizontalBar.__super__.constructor.prototype = {
  "constructor": function () {},
  "dataElementType": function () {},
  "initialize": function () {},
  "getStackCount": function () {},
  "update": function () {},
  "updateElement": function () {},
  "calculateBarBase": function () {},
  "getRuler": function () {},
  "calculateBarWidth": function () {},
  "getStackIndex": function () {},
  "calculateBarX": function () {},
  "calculateBarY": function () {},
  "draw": function () {},
  "setHoverStyle": function () {},
  "removeHoverStyle": function () {},
  "datasetElementType": function () {},
  "updateIndex": function () {},
  "linkScales": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getScaleForId": function () {},
  "reset": function () {},
  "destroy": function () {},
  "createMetaDataset": function () {},
  "createMetaData": function () {},
  "addElements": function () {},
  "addElementAndReset": function () {},
  "buildOrUpdateElements": function () {},
  "resyncElements": function () {},
  "insertElements": function () {},
  "onDataPush": function () {},
  "onDataPop": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {}
};
Chart.Chart.controllers.horizontalBar.__super__.dataElementType.prototype = {
  "constructor": function () {},
  "draw": function () {},
  "height": function () {},
  "inRange": function () {},
  "inLabelRange": function () {},
  "inXRange": function () {},
  "inYRange": function () {},
  "getCenterPoint": function () {},
  "getArea": function () {},
  "tooltipPosition": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "hasValue": function () {}
};
Chart.Chart.controllers.bubble.prototype = {
  "constructor": function () {},
  "dataElementType": function () {},
  "update": function () {},
  "updateElement": function () {},
  "getRadius": function () {},
  "setHoverStyle": function () {},
  "removeHoverStyle": function () {},
  "datasetElementType": function () {},
  "initialize": function () {},
  "updateIndex": function () {},
  "linkScales": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getScaleForId": function () {},
  "reset": function () {},
  "destroy": function () {},
  "createMetaDataset": function () {},
  "createMetaData": function () {},
  "addElements": function () {},
  "addElementAndReset": function () {},
  "buildOrUpdateElements": function () {},
  "draw": function () {},
  "resyncElements": function () {},
  "insertElements": function () {},
  "onDataPush": function () {},
  "onDataPop": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {}
};
Chart.Chart.controllers.pie.prototype = {
  "constructor": function () {},
  "dataElementType": function () {},
  "linkScales": function () {},
  "getRingIndex": function () {},
  "update": function () {},
  "updateElement": function () {},
  "removeHoverStyle": function () {},
  "calculateTotal": function () {},
  "calculateCircumference": function () {},
  "getMaxBorderWidth": function () {},
  "datasetElementType": function () {},
  "initialize": function () {},
  "updateIndex": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getScaleForId": function () {},
  "reset": function () {},
  "destroy": function () {},
  "createMetaDataset": function () {},
  "createMetaData": function () {},
  "addElements": function () {},
  "addElementAndReset": function () {},
  "buildOrUpdateElements": function () {},
  "draw": function () {},
  "setHoverStyle": function () {},
  "resyncElements": function () {},
  "insertElements": function () {},
  "onDataPush": function () {},
  "onDataPop": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {}
};
Chart.Chart.controllers.doughnut.prototype = {
  "constructor": function () {},
  "dataElementType": function () {},
  "linkScales": function () {},
  "getRingIndex": function () {},
  "update": function () {},
  "updateElement": function () {},
  "removeHoverStyle": function () {},
  "calculateTotal": function () {},
  "calculateCircumference": function () {},
  "getMaxBorderWidth": function () {},
  "datasetElementType": function () {},
  "initialize": function () {},
  "updateIndex": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getScaleForId": function () {},
  "reset": function () {},
  "destroy": function () {},
  "createMetaDataset": function () {},
  "createMetaData": function () {},
  "addElements": function () {},
  "addElementAndReset": function () {},
  "buildOrUpdateElements": function () {},
  "draw": function () {},
  "setHoverStyle": function () {},
  "resyncElements": function () {},
  "insertElements": function () {},
  "onDataPush": function () {},
  "onDataPop": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {}
};
Chart.Chart.controllers.line.prototype = {
  "constructor": function () {},
  "datasetElementType": function () {},
  "dataElementType": function () {},
  "update": function () {},
  "getPointBackgroundColor": function () {},
  "getPointBorderColor": function () {},
  "getPointBorderWidth": function () {},
  "updateElement": function () {},
  "calculatePointY": function () {},
  "updateBezierControlPoints": function () {},
  "draw": function () {},
  "setHoverStyle": function () {},
  "removeHoverStyle": function () {},
  "initialize": function () {},
  "updateIndex": function () {},
  "linkScales": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getScaleForId": function () {},
  "reset": function () {},
  "destroy": function () {},
  "createMetaDataset": function () {},
  "createMetaData": function () {},
  "addElements": function () {},
  "addElementAndReset": function () {},
  "buildOrUpdateElements": function () {},
  "resyncElements": function () {},
  "insertElements": function () {},
  "onDataPush": function () {},
  "onDataPop": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {}
};
Chart.Chart.controllers.polarArea.prototype = {
  "constructor": function () {},
  "dataElementType": function () {},
  "linkScales": function () {},
  "update": function () {},
  "updateElement": function () {},
  "removeHoverStyle": function () {},
  "countVisibleElements": function () {},
  "calculateCircumference": function () {},
  "datasetElementType": function () {},
  "initialize": function () {},
  "updateIndex": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getScaleForId": function () {},
  "reset": function () {},
  "destroy": function () {},
  "createMetaDataset": function () {},
  "createMetaData": function () {},
  "addElements": function () {},
  "addElementAndReset": function () {},
  "buildOrUpdateElements": function () {},
  "draw": function () {},
  "setHoverStyle": function () {},
  "resyncElements": function () {},
  "insertElements": function () {},
  "onDataPush": function () {},
  "onDataPop": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {}
};
Chart.Chart.controllers.radar.prototype = {
  "constructor": function () {},
  "datasetElementType": function () {},
  "dataElementType": function () {},
  "linkScales": function () {},
  "update": function () {},
  "updateElement": function () {},
  "updateBezierControlPoints": function () {},
  "draw": function () {},
  "setHoverStyle": function () {},
  "removeHoverStyle": function () {},
  "initialize": function () {},
  "updateIndex": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getScaleForId": function () {},
  "reset": function () {},
  "destroy": function () {},
  "createMetaDataset": function () {},
  "createMetaData": function () {},
  "addElements": function () {},
  "addElementAndReset": function () {},
  "buildOrUpdateElements": function () {},
  "resyncElements": function () {},
  "insertElements": function () {},
  "onDataPush": function () {},
  "onDataPop": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {}
};
Chart.Chart.controllers.scatter.prototype = {
  "constructor": function () {},
  "datasetElementType": function () {},
  "dataElementType": function () {},
  "update": function () {},
  "getPointBackgroundColor": function () {},
  "getPointBorderColor": function () {},
  "getPointBorderWidth": function () {},
  "updateElement": function () {},
  "calculatePointY": function () {},
  "updateBezierControlPoints": function () {},
  "draw": function () {},
  "setHoverStyle": function () {},
  "removeHoverStyle": function () {},
  "initialize": function () {},
  "updateIndex": function () {},
  "linkScales": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getScaleForId": function () {},
  "reset": function () {},
  "destroy": function () {},
  "createMetaDataset": function () {},
  "createMetaData": function () {},
  "addElements": function () {},
  "addElementAndReset": function () {},
  "buildOrUpdateElements": function () {},
  "resyncElements": function () {},
  "insertElements": function () {},
  "onDataPush": function () {},
  "onDataPop": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {}
};
Chart.Chart.Controller.prototype = {
  "initialize": function () {},
  "clear": function () {},
  "stop": function () {},
  "resize": function () {},
  "ensureScalesHaveIDs": function () {},
  "buildScales": function () {},
  "buildOrUpdateControllers": function () {},
  "resetElements": function () {},
  "reset": function () {},
  "update": function () {},
  "updateLayout": function () {},
  "updateDatasets": function () {},
  "render": function () {},
  "draw": function () {},
  "drawDatasets": function () {},
  "getElementAtEvent": function () {},
  "getElementsAtEvent": function () {},
  "getElementsAtXAxis": function () {},
  "getElementsAtEventForMode": function () {},
  "getDatasetAtEvent": function () {},
  "getDatasetMeta": function () {},
  "getVisibleDatasetCount": function () {},
  "isDatasetVisible": function () {},
  "generateLegend": function () {},
  "destroy": function () {},
  "toBase64Image": function () {},
  "initToolTip": function () {},
  "bindEvents": function () {},
  "unbindEvents": function () {},
  "updateHoverStyle": function () {},
  "eventHandler": function () {},
  "handleEvent": function () {}
};
Chart.Chart.DatasetController.prototype = {
  "datasetElementType": function () {},
  "dataElementType": function () {},
  "initialize": function () {},
  "updateIndex": function () {},
  "linkScales": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getScaleForId": function () {},
  "reset": function () {},
  "destroy": function () {},
  "createMetaDataset": function () {},
  "createMetaData": function () {},
  "addElements": function () {},
  "addElementAndReset": function () {},
  "buildOrUpdateElements": function () {},
  "update": function () {},
  "draw": function () {},
  "removeHoverStyle": function () {},
  "setHoverStyle": function () {},
  "resyncElements": function () {},
  "insertElements": function () {},
  "onDataPush": function () {},
  "onDataPop": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {}
};
Chart.Chart.scaleService.constructors.category.prototype = {
  "constructor": function () {},
  "getLabels": function () {},
  "determineDataLimits": function () {},
  "buildTicks": function () {},
  "getLabelForIndex": function () {},
  "getPixelForValue": function () {},
  "getPixelForTick": function () {},
  "getValueForPixel": function () {},
  "getBasePixel": function () {},
  "getPadding": function () {},
  "beforeUpdate": function () {},
  "update": function () {},
  "afterUpdate": function () {},
  "beforeSetDimensions": function () {},
  "setDimensions": function () {},
  "afterSetDimensions": function () {},
  "beforeDataLimits": function () {},
  "afterDataLimits": function () {},
  "beforeBuildTicks": function () {},
  "afterBuildTicks": function () {},
  "beforeTickToLabelConversion": function () {},
  "convertTicksToLabels": function () {},
  "afterTickToLabelConversion": function () {},
  "beforeCalculateTickRotation": function () {},
  "calculateTickRotation": function () {},
  "afterCalculateTickRotation": function () {},
  "beforeFit": function () {},
  "fit": function () {},
  "handleMargins": function () {},
  "afterFit": function () {},
  "isHorizontal": function () {},
  "isFullWidth": function () {},
  "getRightValue": function () {},
  "getPixelForDecimal": function () {},
  "getBaseValue": function () {},
  "draw": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {}
};
Chart.Chart.scaleService.constructors.category.__super__.constructor.prototype = {
  "constructor": function () {},
  "getPadding": function () {},
  "beforeUpdate": function () {},
  "update": function () {},
  "afterUpdate": function () {},
  "beforeSetDimensions": function () {},
  "setDimensions": function () {},
  "afterSetDimensions": function () {},
  "beforeDataLimits": function () {},
  "determineDataLimits": function () {},
  "afterDataLimits": function () {},
  "beforeBuildTicks": function () {},
  "buildTicks": function () {},
  "afterBuildTicks": function () {},
  "beforeTickToLabelConversion": function () {},
  "convertTicksToLabels": function () {},
  "afterTickToLabelConversion": function () {},
  "beforeCalculateTickRotation": function () {},
  "calculateTickRotation": function () {},
  "afterCalculateTickRotation": function () {},
  "beforeFit": function () {},
  "fit": function () {},
  "handleMargins": function () {},
  "afterFit": function () {},
  "isHorizontal": function () {},
  "isFullWidth": function () {},
  "getRightValue": function () {},
  "getLabelForIndex": function () {},
  "getPixelForValue": function () {},
  "getValueForPixel": function () {},
  "getPixelForTick": function () {},
  "getPixelForDecimal": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "draw": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {}
};
Chart.Chart.scaleService.constructors.linear.prototype = {
  "constructor": function () {},
  "determineDataLimits": function () {},
  "getTickLimit": function () {},
  "handleDirectionalChanges": function () {},
  "getLabelForIndex": function () {},
  "getPixelForValue": function () {},
  "getValueForPixel": function () {},
  "getPixelForTick": function () {},
  "handleTickRangeOptions": function () {},
  "buildTicks": function () {},
  "convertTicksToLabels": function () {},
  "getPadding": function () {},
  "beforeUpdate": function () {},
  "update": function () {},
  "afterUpdate": function () {},
  "beforeSetDimensions": function () {},
  "setDimensions": function () {},
  "afterSetDimensions": function () {},
  "beforeDataLimits": function () {},
  "afterDataLimits": function () {},
  "beforeBuildTicks": function () {},
  "afterBuildTicks": function () {},
  "beforeTickToLabelConversion": function () {},
  "afterTickToLabelConversion": function () {},
  "beforeCalculateTickRotation": function () {},
  "calculateTickRotation": function () {},
  "afterCalculateTickRotation": function () {},
  "beforeFit": function () {},
  "fit": function () {},
  "handleMargins": function () {},
  "afterFit": function () {},
  "isHorizontal": function () {},
  "isFullWidth": function () {},
  "getRightValue": function () {},
  "getPixelForDecimal": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "draw": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {}
};
Chart.Chart.scaleService.constructors.linear.__super__.constructor.prototype = {
  "constructor": function () {},
  "handleTickRangeOptions": function () {},
  "getTickLimit": function () {},
  "handleDirectionalChanges": function () {},
  "buildTicks": function () {},
  "convertTicksToLabels": function () {},
  "getPadding": function () {},
  "beforeUpdate": function () {},
  "update": function () {},
  "afterUpdate": function () {},
  "beforeSetDimensions": function () {},
  "setDimensions": function () {},
  "afterSetDimensions": function () {},
  "beforeDataLimits": function () {},
  "determineDataLimits": function () {},
  "afterDataLimits": function () {},
  "beforeBuildTicks": function () {},
  "afterBuildTicks": function () {},
  "beforeTickToLabelConversion": function () {},
  "afterTickToLabelConversion": function () {},
  "beforeCalculateTickRotation": function () {},
  "calculateTickRotation": function () {},
  "afterCalculateTickRotation": function () {},
  "beforeFit": function () {},
  "fit": function () {},
  "handleMargins": function () {},
  "afterFit": function () {},
  "isHorizontal": function () {},
  "isFullWidth": function () {},
  "getRightValue": function () {},
  "getLabelForIndex": function () {},
  "getPixelForValue": function () {},
  "getValueForPixel": function () {},
  "getPixelForTick": function () {},
  "getPixelForDecimal": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "draw": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {}
};
Chart.Chart.scaleService.constructors.linear.__super__.constructor.__super__.constructor.prototype = {
  "constructor": function () {},
  "getPadding": function () {},
  "beforeUpdate": function () {},
  "update": function () {},
  "afterUpdate": function () {},
  "beforeSetDimensions": function () {},
  "setDimensions": function () {},
  "afterSetDimensions": function () {},
  "beforeDataLimits": function () {},
  "determineDataLimits": function () {},
  "afterDataLimits": function () {},
  "beforeBuildTicks": function () {},
  "buildTicks": function () {},
  "afterBuildTicks": function () {},
  "beforeTickToLabelConversion": function () {},
  "convertTicksToLabels": function () {},
  "afterTickToLabelConversion": function () {},
  "beforeCalculateTickRotation": function () {},
  "calculateTickRotation": function () {},
  "afterCalculateTickRotation": function () {},
  "beforeFit": function () {},
  "fit": function () {},
  "handleMargins": function () {},
  "afterFit": function () {},
  "isHorizontal": function () {},
  "isFullWidth": function () {},
  "getRightValue": function () {},
  "getLabelForIndex": function () {},
  "getPixelForValue": function () {},
  "getValueForPixel": function () {},
  "getPixelForTick": function () {},
  "getPixelForDecimal": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "draw": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {}
};
Chart.Chart.scaleService.constructors.logarithmic.prototype = {
  "constructor": function () {},
  "determineDataLimits": function () {},
  "buildTicks": function () {},
  "convertTicksToLabels": function () {},
  "getLabelForIndex": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getValueForPixel": function () {},
  "getPadding": function () {},
  "beforeUpdate": function () {},
  "update": function () {},
  "afterUpdate": function () {},
  "beforeSetDimensions": function () {},
  "setDimensions": function () {},
  "afterSetDimensions": function () {},
  "beforeDataLimits": function () {},
  "afterDataLimits": function () {},
  "beforeBuildTicks": function () {},
  "afterBuildTicks": function () {},
  "beforeTickToLabelConversion": function () {},
  "afterTickToLabelConversion": function () {},
  "beforeCalculateTickRotation": function () {},
  "calculateTickRotation": function () {},
  "afterCalculateTickRotation": function () {},
  "beforeFit": function () {},
  "fit": function () {},
  "handleMargins": function () {},
  "afterFit": function () {},
  "isHorizontal": function () {},
  "isFullWidth": function () {},
  "getRightValue": function () {},
  "getPixelForDecimal": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "draw": function () {},
  "closure_uid_972347496": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {}
};
Chart.Chart.scaleService.constructors.logarithmic.__super__.constructor.prototype = {
  "constructor": function () {},
  "getPadding": function () {},
  "beforeUpdate": function () {},
  "update": function () {},
  "afterUpdate": function () {},
  "beforeSetDimensions": function () {},
  "setDimensions": function () {},
  "afterSetDimensions": function () {},
  "beforeDataLimits": function () {},
  "determineDataLimits": function () {},
  "afterDataLimits": function () {},
  "beforeBuildTicks": function () {},
  "buildTicks": function () {},
  "afterBuildTicks": function () {},
  "beforeTickToLabelConversion": function () {},
  "convertTicksToLabels": function () {},
  "afterTickToLabelConversion": function () {},
  "beforeCalculateTickRotation": function () {},
  "calculateTickRotation": function () {},
  "afterCalculateTickRotation": function () {},
  "beforeFit": function () {},
  "fit": function () {},
  "handleMargins": function () {},
  "afterFit": function () {},
  "isHorizontal": function () {},
  "isFullWidth": function () {},
  "getRightValue": function () {},
  "getLabelForIndex": function () {},
  "getPixelForValue": function () {},
  "getValueForPixel": function () {},
  "getPixelForTick": function () {},
  "getPixelForDecimal": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "draw": function () {},
  "closure_uid_972347496": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {}
};
Chart.Chart.scaleService.constructors.radialLinear.prototype = {
  "constructor": function () {},
  "setDimensions": function () {},
  "determineDataLimits": function () {},
  "getTickLimit": function () {},
  "convertTicksToLabels": function () {},
  "getLabelForIndex": function () {},
  "fit": function () {},
  "setReductions": function () {},
  "setCenterPoint": function () {},
  "getIndexAngle": function () {},
  "getDistanceFromCenterForValue": function () {},
  "getPointPosition": function () {},
  "getPointPositionForValue": function () {},
  "getBasePosition": function () {},
  "draw": function () {},
  "handleTickRangeOptions": function () {},
  "handleDirectionalChanges": function () {},
  "buildTicks": function () {},
  "closure_uid_972347496": function () {},
  "getPadding": function () {},
  "beforeUpdate": function () {},
  "update": function () {},
  "afterUpdate": function () {},
  "beforeSetDimensions": function () {},
  "afterSetDimensions": function () {},
  "beforeDataLimits": function () {},
  "afterDataLimits": function () {},
  "beforeBuildTicks": function () {},
  "afterBuildTicks": function () {},
  "beforeTickToLabelConversion": function () {},
  "afterTickToLabelConversion": function () {},
  "beforeCalculateTickRotation": function () {},
  "calculateTickRotation": function () {},
  "afterCalculateTickRotation": function () {},
  "beforeFit": function () {},
  "handleMargins": function () {},
  "afterFit": function () {},
  "isHorizontal": function () {},
  "isFullWidth": function () {},
  "getRightValue": function () {},
  "getPixelForValue": function () {},
  "getValueForPixel": function () {},
  "getPixelForTick": function () {},
  "getPixelForDecimal": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {}
};
Chart.Chart.scaleService.constructors.radialLinear.__super__.constructor.prototype = {
  "constructor": function () {},
  "handleTickRangeOptions": function () {},
  "getTickLimit": function () {},
  "handleDirectionalChanges": function () {},
  "buildTicks": function () {},
  "convertTicksToLabels": function () {},
  "closure_uid_972347496": function () {},
  "getPadding": function () {},
  "beforeUpdate": function () {},
  "update": function () {},
  "afterUpdate": function () {},
  "beforeSetDimensions": function () {},
  "setDimensions": function () {},
  "afterSetDimensions": function () {},
  "beforeDataLimits": function () {},
  "determineDataLimits": function () {},
  "afterDataLimits": function () {},
  "beforeBuildTicks": function () {},
  "afterBuildTicks": function () {},
  "beforeTickToLabelConversion": function () {},
  "afterTickToLabelConversion": function () {},
  "beforeCalculateTickRotation": function () {},
  "calculateTickRotation": function () {},
  "afterCalculateTickRotation": function () {},
  "beforeFit": function () {},
  "fit": function () {},
  "handleMargins": function () {},
  "afterFit": function () {},
  "isHorizontal": function () {},
  "isFullWidth": function () {},
  "getRightValue": function () {},
  "getLabelForIndex": function () {},
  "getPixelForValue": function () {},
  "getValueForPixel": function () {},
  "getPixelForTick": function () {},
  "getPixelForDecimal": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "draw": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {}
};
Chart.Chart.scaleService.constructors.radialLinear.__super__.constructor.__super__.constructor.prototype = {
  "constructor": function () {},
  "getPadding": function () {},
  "beforeUpdate": function () {},
  "update": function () {},
  "afterUpdate": function () {},
  "beforeSetDimensions": function () {},
  "setDimensions": function () {},
  "afterSetDimensions": function () {},
  "beforeDataLimits": function () {},
  "determineDataLimits": function () {},
  "afterDataLimits": function () {},
  "beforeBuildTicks": function () {},
  "buildTicks": function () {},
  "afterBuildTicks": function () {},
  "beforeTickToLabelConversion": function () {},
  "convertTicksToLabels": function () {},
  "afterTickToLabelConversion": function () {},
  "beforeCalculateTickRotation": function () {},
  "calculateTickRotation": function () {},
  "afterCalculateTickRotation": function () {},
  "beforeFit": function () {},
  "fit": function () {},
  "handleMargins": function () {},
  "afterFit": function () {},
  "isHorizontal": function () {},
  "isFullWidth": function () {},
  "getRightValue": function () {},
  "getLabelForIndex": function () {},
  "getPixelForValue": function () {},
  "getValueForPixel": function () {},
  "getPixelForTick": function () {},
  "getPixelForDecimal": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "draw": function () {},
  "closure_uid_972347496": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {}
};
Chart.Chart.scaleService.constructors.time.prototype = {
  "constructor": function () {},
  "initialize": function () {},
  "getLabelMoment": function () {},
  "getLabelDiff": function () {},
  "getMomentStartOf": function () {},
  "determineDataLimits": function () {},
  "buildLabelDiffs": function () {},
  "buildTicks": function () {},
  "getLabelForIndex": function () {},
  "tickFormatFunction": function () {},
  "convertTicksToLabels": function () {},
  "getPixelForValue": function () {},
  "getPixelForTick": function () {},
  "getValueForPixel": function () {},
  "parseTime": function () {},
  "getPadding": function () {},
  "beforeUpdate": function () {},
  "update": function () {},
  "afterUpdate": function () {},
  "beforeSetDimensions": function () {},
  "setDimensions": function () {},
  "afterSetDimensions": function () {},
  "beforeDataLimits": function () {},
  "afterDataLimits": function () {},
  "beforeBuildTicks": function () {},
  "afterBuildTicks": function () {},
  "beforeTickToLabelConversion": function () {},
  "afterTickToLabelConversion": function () {},
  "beforeCalculateTickRotation": function () {},
  "calculateTickRotation": function () {},
  "afterCalculateTickRotation": function () {},
  "beforeFit": function () {},
  "fit": function () {},
  "handleMargins": function () {},
  "afterFit": function () {},
  "isHorizontal": function () {},
  "isFullWidth": function () {},
  "getRightValue": function () {},
  "getPixelForDecimal": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "draw": function () {},
  "closure_uid_972347496": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {}
};
Chart.Chart.scaleService.constructors.time.__super__.constructor.prototype = {
  "constructor": function () {},
  "getPadding": function () {},
  "beforeUpdate": function () {},
  "update": function () {},
  "afterUpdate": function () {},
  "beforeSetDimensions": function () {},
  "setDimensions": function () {},
  "afterSetDimensions": function () {},
  "beforeDataLimits": function () {},
  "determineDataLimits": function () {},
  "afterDataLimits": function () {},
  "beforeBuildTicks": function () {},
  "buildTicks": function () {},
  "afterBuildTicks": function () {},
  "beforeTickToLabelConversion": function () {},
  "convertTicksToLabels": function () {},
  "afterTickToLabelConversion": function () {},
  "beforeCalculateTickRotation": function () {},
  "calculateTickRotation": function () {},
  "afterCalculateTickRotation": function () {},
  "beforeFit": function () {},
  "fit": function () {},
  "handleMargins": function () {},
  "afterFit": function () {},
  "isHorizontal": function () {},
  "isFullWidth": function () {},
  "getRightValue": function () {},
  "getLabelForIndex": function () {},
  "getPixelForValue": function () {},
  "getValueForPixel": function () {},
  "getPixelForTick": function () {},
  "getPixelForDecimal": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "draw": function () {},
  "closure_uid_972347496": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {}
};
Chart.Chart.Scale.prototype = {
  "constructor": function () {},
  "getPadding": function () {},
  "beforeUpdate": function () {},
  "update": function () {},
  "afterUpdate": function () {},
  "beforeSetDimensions": function () {},
  "setDimensions": function () {},
  "afterSetDimensions": function () {},
  "beforeDataLimits": function () {},
  "determineDataLimits": function () {},
  "afterDataLimits": function () {},
  "beforeBuildTicks": function () {},
  "buildTicks": function () {},
  "afterBuildTicks": function () {},
  "beforeTickToLabelConversion": function () {},
  "convertTicksToLabels": function () {},
  "afterTickToLabelConversion": function () {},
  "beforeCalculateTickRotation": function () {},
  "calculateTickRotation": function () {},
  "afterCalculateTickRotation": function () {},
  "beforeFit": function () {},
  "fit": function () {},
  "handleMargins": function () {},
  "afterFit": function () {},
  "isHorizontal": function () {},
  "isFullWidth": function () {},
  "getRightValue": function () {},
  "getLabelForIndex": function () {},
  "getPixelForValue": function () {},
  "getValueForPixel": function () {},
  "getPixelForTick": function () {},
  "getPixelForDecimal": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "draw": function () {},
  "closure_uid_972347496": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {}
};
Chart.Chart.Title.prototype = {
  "constructor": function () {},
  "initialize": function () {},
  "beforeUpdate": function () {},
  "update": function () {},
  "afterUpdate": function () {},
  "beforeSetDimensions": function () {},
  "setDimensions": function () {},
  "afterSetDimensions": function () {},
  "beforeBuildLabels": function () {},
  "buildLabels": function () {},
  "afterBuildLabels": function () {},
  "beforeFit": function () {},
  "fit": function () {},
  "afterFit": function () {},
  "isHorizontal": function () {},
  "draw": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {},
  "closure_uid_972347496": function () {}
};
Chart.Chart.Legend.prototype = {
  "constructor": function () {},
  "initialize": function () {},
  "beforeUpdate": function () {},
  "update": function () {},
  "afterUpdate": function () {},
  "beforeSetDimensions": function () {},
  "setDimensions": function () {},
  "afterSetDimensions": function () {},
  "beforeBuildLabels": function () {},
  "buildLabels": function () {},
  "afterBuildLabels": function () {},
  "beforeFit": function () {},
  "fit": function () {},
  "afterFit": function () {},
  "isHorizontal": function () {},
  "draw": function () {},
  "handleEvent": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {},
  "closure_uid_972347496": function () {}
};
Chart.Chart.Tooltip.prototype = {
  "constructor": function () {},
  "initialize": function () {},
  "getTitle": function () {},
  "getBeforeBody": function () {},
  "getBody": function () {},
  "getAfterBody": function () {},
  "getFooter": function () {},
  "update": function () {},
  "drawCaret": function () {},
  "drawTitle": function () {},
  "drawBody": function () {},
  "drawFooter": function () {},
  "drawBackground": function () {},
  "draw": function () {},
  "handleEvent": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {},
  "closure_uid_972347496": function () {}
};
Chart.Chart.LinearScaleBase.prototype = {
  "constructor": function () {},
  "handleTickRangeOptions": function () {},
  "getTickLimit": function () {},
  "handleDirectionalChanges": function () {},
  "buildTicks": function () {},
  "convertTicksToLabels": function () {},
  "closure_uid_972347496": function () {},
  "getPadding": function () {},
  "beforeUpdate": function () {},
  "update": function () {},
  "afterUpdate": function () {},
  "beforeSetDimensions": function () {},
  "setDimensions": function () {},
  "afterSetDimensions": function () {},
  "beforeDataLimits": function () {},
  "determineDataLimits": function () {},
  "afterDataLimits": function () {},
  "beforeBuildTicks": function () {},
  "afterBuildTicks": function () {},
  "beforeTickToLabelConversion": function () {},
  "afterTickToLabelConversion": function () {},
  "beforeCalculateTickRotation": function () {},
  "calculateTickRotation": function () {},
  "afterCalculateTickRotation": function () {},
  "beforeFit": function () {},
  "fit": function () {},
  "handleMargins": function () {},
  "afterFit": function () {},
  "isHorizontal": function () {},
  "isFullWidth": function () {},
  "getRightValue": function () {},
  "getLabelForIndex": function () {},
  "getPixelForValue": function () {},
  "getValueForPixel": function () {},
  "getPixelForTick": function () {},
  "getPixelForDecimal": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "draw": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {}
};
Chart.Chart.LinearScaleBase.__super__.constructor.prototype = {
  "constructor": function () {},
  "getPadding": function () {},
  "beforeUpdate": function () {},
  "update": function () {},
  "afterUpdate": function () {},
  "beforeSetDimensions": function () {},
  "setDimensions": function () {},
  "afterSetDimensions": function () {},
  "beforeDataLimits": function () {},
  "determineDataLimits": function () {},
  "afterDataLimits": function () {},
  "beforeBuildTicks": function () {},
  "buildTicks": function () {},
  "afterBuildTicks": function () {},
  "beforeTickToLabelConversion": function () {},
  "convertTicksToLabels": function () {},
  "afterTickToLabelConversion": function () {},
  "beforeCalculateTickRotation": function () {},
  "calculateTickRotation": function () {},
  "afterCalculateTickRotation": function () {},
  "beforeFit": function () {},
  "fit": function () {},
  "handleMargins": function () {},
  "afterFit": function () {},
  "isHorizontal": function () {},
  "isFullWidth": function () {},
  "getRightValue": function () {},
  "getLabelForIndex": function () {},
  "getPixelForValue": function () {},
  "getValueForPixel": function () {},
  "getPixelForTick": function () {},
  "getPixelForDecimal": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "draw": function () {},
  "closure_uid_972347496": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {}
};
Chart.PluginBase.prototype = {
  "constructor": function () {}
};
Chart.elements.Arc.prototype = {
  "constructor": function () {},
  "inLabelRange": function () {},
  "inRange": function () {},
  "getCenterPoint": function () {},
  "getArea": function () {},
  "tooltipPosition": function () {},
  "draw": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "hasValue": function () {},
  "closure_uid_972347496": function () {}
};
Chart.elements.Line.prototype = {
  "constructor": function () {},
  "draw": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {},
  "closure_uid_972347496": function () {}
};
Chart.elements.Point.prototype = {
  "constructor": function () {},
  "inRange": function () {},
  "inLabelRange": function () {},
  "inXRange": function () {},
  "inYRange": function () {},
  "getCenterPoint": function () {},
  "getArea": function () {},
  "tooltipPosition": function () {},
  "draw": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "hasValue": function () {},
  "closure_uid_972347496": function () {}
};
Chart.elements.Rectangle.prototype = {
  "constructor": function () {},
  "draw": function () {},
  "height": function () {},
  "inRange": function () {},
  "inLabelRange": function () {},
  "inXRange": function () {},
  "inYRange": function () {},
  "getCenterPoint": function () {},
  "getArea": function () {},
  "tooltipPosition": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "hasValue": function () {},
  "closure_uid_972347496": function () {}
};
Chart.Element.prototype = {
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {},
  "closure_uid_972347496": function () {}
};
Chart.Animation.prototype = {
  "constructor": function () {},
  "currentStep": function () {},
  "numSteps": function () {},
  "easing": function () {},
  "render": function () {},
  "onAnimationProgress": function () {},
  "onAnimationComplete": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {},
  "closure_uid_972347496": function () {}
};
Chart.controllers.bar.prototype = {
  "constructor": function () {},
  "dataElementType": function () {},
  "initialize": function () {},
  "getStackCount": function () {},
  "update": function () {},
  "updateElement": function () {},
  "calculateBarBase": function () {},
  "getRuler": function () {},
  "calculateBarWidth": function () {},
  "getStackIndex": function () {},
  "calculateBarX": function () {},
  "calculateBarY": function () {},
  "draw": function () {},
  "setHoverStyle": function () {},
  "removeHoverStyle": function () {},
  "datasetElementType": function () {},
  "updateIndex": function () {},
  "linkScales": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getScaleForId": function () {},
  "reset": function () {},
  "destroy": function () {},
  "createMetaDataset": function () {},
  "createMetaData": function () {},
  "addElements": function () {},
  "addElementAndReset": function () {},
  "buildOrUpdateElements": function () {},
  "resyncElements": function () {},
  "insertElements": function () {},
  "onDataPush": function () {},
  "onDataPop": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {}
};
Chart.controllers.horizontalBar.prototype = {
  "constructor": function () {},
  "getStackCount": function () {},
  "updateElement": function () {},
  "calculateBarBase": function () {},
  "getRuler": function () {},
  "calculateBarHeight": function () {},
  "getStackIndex": function () {},
  "calculateBarX": function () {},
  "calculateBarY": function () {},
  "dataElementType": function () {},
  "initialize": function () {},
  "update": function () {},
  "calculateBarWidth": function () {},
  "draw": function () {},
  "setHoverStyle": function () {},
  "removeHoverStyle": function () {},
  "datasetElementType": function () {},
  "updateIndex": function () {},
  "linkScales": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getScaleForId": function () {},
  "reset": function () {},
  "destroy": function () {},
  "createMetaDataset": function () {},
  "createMetaData": function () {},
  "addElements": function () {},
  "addElementAndReset": function () {},
  "buildOrUpdateElements": function () {},
  "resyncElements": function () {},
  "insertElements": function () {},
  "onDataPush": function () {},
  "onDataPop": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {}
};
Chart.controllers.horizontalBar.__super__.constructor.prototype = {
  "constructor": function () {},
  "dataElementType": function () {},
  "initialize": function () {},
  "getStackCount": function () {},
  "update": function () {},
  "updateElement": function () {},
  "calculateBarBase": function () {},
  "getRuler": function () {},
  "calculateBarWidth": function () {},
  "getStackIndex": function () {},
  "calculateBarX": function () {},
  "calculateBarY": function () {},
  "draw": function () {},
  "setHoverStyle": function () {},
  "removeHoverStyle": function () {},
  "datasetElementType": function () {},
  "updateIndex": function () {},
  "linkScales": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getScaleForId": function () {},
  "reset": function () {},
  "destroy": function () {},
  "createMetaDataset": function () {},
  "createMetaData": function () {},
  "addElements": function () {},
  "addElementAndReset": function () {},
  "buildOrUpdateElements": function () {},
  "resyncElements": function () {},
  "insertElements": function () {},
  "onDataPush": function () {},
  "onDataPop": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {}
};
Chart.controllers.horizontalBar.__super__.dataElementType.prototype = {
  "constructor": function () {},
  "draw": function () {},
  "height": function () {},
  "inRange": function () {},
  "inLabelRange": function () {},
  "inXRange": function () {},
  "inYRange": function () {},
  "getCenterPoint": function () {},
  "getArea": function () {},
  "tooltipPosition": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "hasValue": function () {},
  "closure_uid_972347496": function () {}
};
Chart.controllers.bubble.prototype = {
  "constructor": function () {},
  "dataElementType": function () {},
  "update": function () {},
  "updateElement": function () {},
  "getRadius": function () {},
  "setHoverStyle": function () {},
  "removeHoverStyle": function () {},
  "datasetElementType": function () {},
  "initialize": function () {},
  "updateIndex": function () {},
  "linkScales": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getScaleForId": function () {},
  "reset": function () {},
  "destroy": function () {},
  "createMetaDataset": function () {},
  "createMetaData": function () {},
  "addElements": function () {},
  "addElementAndReset": function () {},
  "buildOrUpdateElements": function () {},
  "draw": function () {},
  "resyncElements": function () {},
  "insertElements": function () {},
  "onDataPush": function () {},
  "onDataPop": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {}
};
Chart.controllers.pie.prototype = {
  "constructor": function () {},
  "dataElementType": function () {},
  "linkScales": function () {},
  "getRingIndex": function () {},
  "update": function () {},
  "updateElement": function () {},
  "removeHoverStyle": function () {},
  "calculateTotal": function () {},
  "calculateCircumference": function () {},
  "getMaxBorderWidth": function () {},
  "datasetElementType": function () {},
  "initialize": function () {},
  "updateIndex": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getScaleForId": function () {},
  "reset": function () {},
  "destroy": function () {},
  "createMetaDataset": function () {},
  "createMetaData": function () {},
  "addElements": function () {},
  "addElementAndReset": function () {},
  "buildOrUpdateElements": function () {},
  "draw": function () {},
  "setHoverStyle": function () {},
  "resyncElements": function () {},
  "insertElements": function () {},
  "onDataPush": function () {},
  "onDataPop": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {}
};
Chart.controllers.doughnut.prototype = {
  "constructor": function () {},
  "dataElementType": function () {},
  "linkScales": function () {},
  "getRingIndex": function () {},
  "update": function () {},
  "updateElement": function () {},
  "removeHoverStyle": function () {},
  "calculateTotal": function () {},
  "calculateCircumference": function () {},
  "getMaxBorderWidth": function () {},
  "datasetElementType": function () {},
  "initialize": function () {},
  "updateIndex": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getScaleForId": function () {},
  "reset": function () {},
  "destroy": function () {},
  "createMetaDataset": function () {},
  "createMetaData": function () {},
  "addElements": function () {},
  "addElementAndReset": function () {},
  "buildOrUpdateElements": function () {},
  "draw": function () {},
  "setHoverStyle": function () {},
  "resyncElements": function () {},
  "insertElements": function () {},
  "onDataPush": function () {},
  "onDataPop": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {}
};
Chart.controllers.line.prototype = {
  "constructor": function () {},
  "datasetElementType": function () {},
  "dataElementType": function () {},
  "update": function () {},
  "getPointBackgroundColor": function () {},
  "getPointBorderColor": function () {},
  "getPointBorderWidth": function () {},
  "updateElement": function () {},
  "calculatePointY": function () {},
  "updateBezierControlPoints": function () {},
  "draw": function () {},
  "setHoverStyle": function () {},
  "removeHoverStyle": function () {},
  "initialize": function () {},
  "updateIndex": function () {},
  "linkScales": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getScaleForId": function () {},
  "reset": function () {},
  "destroy": function () {},
  "createMetaDataset": function () {},
  "createMetaData": function () {},
  "addElements": function () {},
  "addElementAndReset": function () {},
  "buildOrUpdateElements": function () {},
  "resyncElements": function () {},
  "insertElements": function () {},
  "onDataPush": function () {},
  "onDataPop": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {}
};
Chart.controllers.polarArea.prototype = {
  "constructor": function () {},
  "dataElementType": function () {},
  "linkScales": function () {},
  "update": function () {},
  "updateElement": function () {},
  "removeHoverStyle": function () {},
  "countVisibleElements": function () {},
  "calculateCircumference": function () {},
  "datasetElementType": function () {},
  "initialize": function () {},
  "updateIndex": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getScaleForId": function () {},
  "reset": function () {},
  "destroy": function () {},
  "createMetaDataset": function () {},
  "createMetaData": function () {},
  "addElements": function () {},
  "addElementAndReset": function () {},
  "buildOrUpdateElements": function () {},
  "draw": function () {},
  "setHoverStyle": function () {},
  "resyncElements": function () {},
  "insertElements": function () {},
  "onDataPush": function () {},
  "onDataPop": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {}
};
Chart.controllers.radar.prototype = {
  "constructor": function () {},
  "datasetElementType": function () {},
  "dataElementType": function () {},
  "linkScales": function () {},
  "update": function () {},
  "updateElement": function () {},
  "updateBezierControlPoints": function () {},
  "draw": function () {},
  "setHoverStyle": function () {},
  "removeHoverStyle": function () {},
  "initialize": function () {},
  "updateIndex": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getScaleForId": function () {},
  "reset": function () {},
  "destroy": function () {},
  "createMetaDataset": function () {},
  "createMetaData": function () {},
  "addElements": function () {},
  "addElementAndReset": function () {},
  "buildOrUpdateElements": function () {},
  "resyncElements": function () {},
  "insertElements": function () {},
  "onDataPush": function () {},
  "onDataPop": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {}
};
Chart.controllers.scatter.prototype = {
  "constructor": function () {},
  "datasetElementType": function () {},
  "dataElementType": function () {},
  "update": function () {},
  "getPointBackgroundColor": function () {},
  "getPointBorderColor": function () {},
  "getPointBorderWidth": function () {},
  "updateElement": function () {},
  "calculatePointY": function () {},
  "updateBezierControlPoints": function () {},
  "draw": function () {},
  "setHoverStyle": function () {},
  "removeHoverStyle": function () {},
  "initialize": function () {},
  "updateIndex": function () {},
  "linkScales": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getScaleForId": function () {},
  "reset": function () {},
  "destroy": function () {},
  "createMetaDataset": function () {},
  "createMetaData": function () {},
  "addElements": function () {},
  "addElementAndReset": function () {},
  "buildOrUpdateElements": function () {},
  "resyncElements": function () {},
  "insertElements": function () {},
  "onDataPush": function () {},
  "onDataPop": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {}
};
Chart.Controller.prototype = {
  "initialize": function () {},
  "clear": function () {},
  "stop": function () {},
  "resize": function () {},
  "ensureScalesHaveIDs": function () {},
  "buildScales": function () {},
  "buildOrUpdateControllers": function () {},
  "resetElements": function () {},
  "reset": function () {},
  "update": function () {},
  "updateLayout": function () {},
  "updateDatasets": function () {},
  "render": function () {},
  "draw": function () {},
  "drawDatasets": function () {},
  "getElementAtEvent": function () {},
  "getElementsAtEvent": function () {},
  "getElementsAtXAxis": function () {},
  "getElementsAtEventForMode": function () {},
  "getDatasetAtEvent": function () {},
  "getDatasetMeta": function () {},
  "getVisibleDatasetCount": function () {},
  "isDatasetVisible": function () {},
  "generateLegend": function () {},
  "destroy": function () {},
  "toBase64Image": function () {},
  "initToolTip": function () {},
  "bindEvents": function () {},
  "unbindEvents": function () {},
  "updateHoverStyle": function () {},
  "eventHandler": function () {},
  "handleEvent": function () {}
};
Chart.DatasetController.prototype = {
  "datasetElementType": function () {},
  "dataElementType": function () {},
  "initialize": function () {},
  "updateIndex": function () {},
  "linkScales": function () {},
  "getDataset": function () {},
  "getMeta": function () {},
  "getScaleForId": function () {},
  "reset": function () {},
  "destroy": function () {},
  "createMetaDataset": function () {},
  "createMetaData": function () {},
  "addElements": function () {},
  "addElementAndReset": function () {},
  "buildOrUpdateElements": function () {},
  "update": function () {},
  "draw": function () {},
  "removeHoverStyle": function () {},
  "setHoverStyle": function () {},
  "resyncElements": function () {},
  "insertElements": function () {},
  "onDataPush": function () {},
  "onDataPop": function () {},
  "onDataShift": function () {},
  "onDataSplice": function () {},
  "onDataUnshift": function () {}
};
Chart.scaleService.constructors.category.prototype = {
  "constructor": function () {},
  "getLabels": function () {},
  "determineDataLimits": function () {},
  "buildTicks": function () {},
  "getLabelForIndex": function () {},
  "getPixelForValue": function () {},
  "getPixelForTick": function () {},
  "getValueForPixel": function () {},
  "getBasePixel": function () {},
  "getPadding": function () {},
  "beforeUpdate": function () {},
  "update": function () {},
  "afterUpdate": function () {},
  "beforeSetDimensions": function () {},
  "setDimensions": function () {},
  "afterSetDimensions": function () {},
  "beforeDataLimits": function () {},
  "afterDataLimits": function () {},
  "beforeBuildTicks": function () {},
  "afterBuildTicks": function () {},
  "beforeTickToLabelConversion": function () {},
  "convertTicksToLabels": function () {},
  "afterTickToLabelConversion": function () {},
  "beforeCalculateTickRotation": function () {},
  "calculateTickRotation": function () {},
  "afterCalculateTickRotation": function () {},
  "beforeFit": function () {},
  "fit": function () {},
  "handleMargins": function () {},
  "afterFit": function () {},
  "isHorizontal": function () {},
  "isFullWidth": function () {},
  "getRightValue": function () {},
  "getPixelForDecimal": function () {},
  "getBaseValue": function () {},
  "draw": function () {},
  "closure_uid_972347496": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {}
};
Chart.scaleService.constructors.category.__super__.constructor.prototype = {
  "constructor": function () {},
  "getPadding": function () {},
  "beforeUpdate": function () {},
  "update": function () {},
  "afterUpdate": function () {},
  "beforeSetDimensions": function () {},
  "setDimensions": function () {},
  "afterSetDimensions": function () {},
  "beforeDataLimits": function () {},
  "determineDataLimits": function () {},
  "afterDataLimits": function () {},
  "beforeBuildTicks": function () {},
  "buildTicks": function () {},
  "afterBuildTicks": function () {},
  "beforeTickToLabelConversion": function () {},
  "convertTicksToLabels": function () {},
  "afterTickToLabelConversion": function () {},
  "beforeCalculateTickRotation": function () {},
  "calculateTickRotation": function () {},
  "afterCalculateTickRotation": function () {},
  "beforeFit": function () {},
  "fit": function () {},
  "handleMargins": function () {},
  "afterFit": function () {},
  "isHorizontal": function () {},
  "isFullWidth": function () {},
  "getRightValue": function () {},
  "getLabelForIndex": function () {},
  "getPixelForValue": function () {},
  "getValueForPixel": function () {},
  "getPixelForTick": function () {},
  "getPixelForDecimal": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "draw": function () {},
  "closure_uid_972347496": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {}
};
Chart.scaleService.constructors.linear.prototype = {
  "constructor": function () {},
  "determineDataLimits": function () {},
  "getTickLimit": function () {},
  "handleDirectionalChanges": function () {},
  "getLabelForIndex": function () {},
  "getPixelForValue": function () {},
  "getValueForPixel": function () {},
  "getPixelForTick": function () {},
  "handleTickRangeOptions": function () {},
  "buildTicks": function () {},
  "convertTicksToLabels": function () {},
  "closure_uid_972347496": function () {},
  "getPadding": function () {},
  "beforeUpdate": function () {},
  "update": function () {},
  "afterUpdate": function () {},
  "beforeSetDimensions": function () {},
  "setDimensions": function () {},
  "afterSetDimensions": function () {},
  "beforeDataLimits": function () {},
  "afterDataLimits": function () {},
  "beforeBuildTicks": function () {},
  "afterBuildTicks": function () {},
  "beforeTickToLabelConversion": function () {},
  "afterTickToLabelConversion": function () {},
  "beforeCalculateTickRotation": function () {},
  "calculateTickRotation": function () {},
  "afterCalculateTickRotation": function () {},
  "beforeFit": function () {},
  "fit": function () {},
  "handleMargins": function () {},
  "afterFit": function () {},
  "isHorizontal": function () {},
  "isFullWidth": function () {},
  "getRightValue": function () {},
  "getPixelForDecimal": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "draw": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {}
};
Chart.scaleService.constructors.linear.__super__.constructor.prototype = {
  "constructor": function () {},
  "handleTickRangeOptions": function () {},
  "getTickLimit": function () {},
  "handleDirectionalChanges": function () {},
  "buildTicks": function () {},
  "convertTicksToLabels": function () {},
  "closure_uid_972347496": function () {},
  "getPadding": function () {},
  "beforeUpdate": function () {},
  "update": function () {},
  "afterUpdate": function () {},
  "beforeSetDimensions": function () {},
  "setDimensions": function () {},
  "afterSetDimensions": function () {},
  "beforeDataLimits": function () {},
  "determineDataLimits": function () {},
  "afterDataLimits": function () {},
  "beforeBuildTicks": function () {},
  "afterBuildTicks": function () {},
  "beforeTickToLabelConversion": function () {},
  "afterTickToLabelConversion": function () {},
  "beforeCalculateTickRotation": function () {},
  "calculateTickRotation": function () {},
  "afterCalculateTickRotation": function () {},
  "beforeFit": function () {},
  "fit": function () {},
  "handleMargins": function () {},
  "afterFit": function () {},
  "isHorizontal": function () {},
  "isFullWidth": function () {},
  "getRightValue": function () {},
  "getLabelForIndex": function () {},
  "getPixelForValue": function () {},
  "getValueForPixel": function () {},
  "getPixelForTick": function () {},
  "getPixelForDecimal": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "draw": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {}
};
Chart.scaleService.constructors.linear.__super__.constructor.__super__.constructor.prototype = {
  "constructor": function () {},
  "getPadding": function () {},
  "beforeUpdate": function () {},
  "update": function () {},
  "afterUpdate": function () {},
  "beforeSetDimensions": function () {},
  "setDimensions": function () {},
  "afterSetDimensions": function () {},
  "beforeDataLimits": function () {},
  "determineDataLimits": function () {},
  "afterDataLimits": function () {},
  "beforeBuildTicks": function () {},
  "buildTicks": function () {},
  "afterBuildTicks": function () {},
  "beforeTickToLabelConversion": function () {},
  "convertTicksToLabels": function () {},
  "afterTickToLabelConversion": function () {},
  "beforeCalculateTickRotation": function () {},
  "calculateTickRotation": function () {},
  "afterCalculateTickRotation": function () {},
  "beforeFit": function () {},
  "fit": function () {},
  "handleMargins": function () {},
  "afterFit": function () {},
  "isHorizontal": function () {},
  "isFullWidth": function () {},
  "getRightValue": function () {},
  "getLabelForIndex": function () {},
  "getPixelForValue": function () {},
  "getValueForPixel": function () {},
  "getPixelForTick": function () {},
  "getPixelForDecimal": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "draw": function () {},
  "closure_uid_972347496": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {}
};
Chart.scaleService.constructors.logarithmic.prototype = {
  "constructor": function () {},
  "determineDataLimits": function () {},
  "buildTicks": function () {},
  "convertTicksToLabels": function () {},
  "getLabelForIndex": function () {},
  "getPixelForTick": function () {},
  "getPixelForValue": function () {},
  "getValueForPixel": function () {},
  "getPadding": function () {},
  "beforeUpdate": function () {},
  "update": function () {},
  "afterUpdate": function () {},
  "beforeSetDimensions": function () {},
  "setDimensions": function () {},
  "afterSetDimensions": function () {},
  "beforeDataLimits": function () {},
  "afterDataLimits": function () {},
  "beforeBuildTicks": function () {},
  "afterBuildTicks": function () {},
  "beforeTickToLabelConversion": function () {},
  "afterTickToLabelConversion": function () {},
  "beforeCalculateTickRotation": function () {},
  "calculateTickRotation": function () {},
  "afterCalculateTickRotation": function () {},
  "beforeFit": function () {},
  "fit": function () {},
  "handleMargins": function () {},
  "afterFit": function () {},
  "isHorizontal": function () {},
  "isFullWidth": function () {},
  "getRightValue": function () {},
  "getPixelForDecimal": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "draw": function () {},
  "closure_uid_972347496": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {}
};
Chart.scaleService.constructors.logarithmic.__super__.constructor.prototype = {
  "constructor": function () {},
  "getPadding": function () {},
  "beforeUpdate": function () {},
  "update": function () {},
  "afterUpdate": function () {},
  "beforeSetDimensions": function () {},
  "setDimensions": function () {},
  "afterSetDimensions": function () {},
  "beforeDataLimits": function () {},
  "determineDataLimits": function () {},
  "afterDataLimits": function () {},
  "beforeBuildTicks": function () {},
  "buildTicks": function () {},
  "afterBuildTicks": function () {},
  "beforeTickToLabelConversion": function () {},
  "convertTicksToLabels": function () {},
  "afterTickToLabelConversion": function () {},
  "beforeCalculateTickRotation": function () {},
  "calculateTickRotation": function () {},
  "afterCalculateTickRotation": function () {},
  "beforeFit": function () {},
  "fit": function () {},
  "handleMargins": function () {},
  "afterFit": function () {},
  "isHorizontal": function () {},
  "isFullWidth": function () {},
  "getRightValue": function () {},
  "getLabelForIndex": function () {},
  "getPixelForValue": function () {},
  "getValueForPixel": function () {},
  "getPixelForTick": function () {},
  "getPixelForDecimal": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "draw": function () {},
  "closure_uid_972347496": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {}
};
Chart.scaleService.constructors.radialLinear.prototype = {
  "constructor": function () {},
  "setDimensions": function () {},
  "determineDataLimits": function () {},
  "getTickLimit": function () {},
  "convertTicksToLabels": function () {},
  "getLabelForIndex": function () {},
  "fit": function () {},
  "setReductions": function () {},
  "setCenterPoint": function () {},
  "getIndexAngle": function () {},
  "getDistanceFromCenterForValue": function () {},
  "getPointPosition": function () {},
  "getPointPositionForValue": function () {},
  "getBasePosition": function () {},
  "draw": function () {},
  "handleTickRangeOptions": function () {},
  "handleDirectionalChanges": function () {},
  "buildTicks": function () {},
  "closure_uid_972347496": function () {},
  "getPadding": function () {},
  "beforeUpdate": function () {},
  "update": function () {},
  "afterUpdate": function () {},
  "beforeSetDimensions": function () {},
  "afterSetDimensions": function () {},
  "beforeDataLimits": function () {},
  "afterDataLimits": function () {},
  "beforeBuildTicks": function () {},
  "afterBuildTicks": function () {},
  "beforeTickToLabelConversion": function () {},
  "afterTickToLabelConversion": function () {},
  "beforeCalculateTickRotation": function () {},
  "calculateTickRotation": function () {},
  "afterCalculateTickRotation": function () {},
  "beforeFit": function () {},
  "handleMargins": function () {},
  "afterFit": function () {},
  "isHorizontal": function () {},
  "isFullWidth": function () {},
  "getRightValue": function () {},
  "getPixelForValue": function () {},
  "getValueForPixel": function () {},
  "getPixelForTick": function () {},
  "getPixelForDecimal": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {}
};
Chart.scaleService.constructors.radialLinear.__super__.constructor.prototype = {
  "constructor": function () {},
  "handleTickRangeOptions": function () {},
  "getTickLimit": function () {},
  "handleDirectionalChanges": function () {},
  "buildTicks": function () {},
  "convertTicksToLabels": function () {},
  "closure_uid_972347496": function () {},
  "getPadding": function () {},
  "beforeUpdate": function () {},
  "update": function () {},
  "afterUpdate": function () {},
  "beforeSetDimensions": function () {},
  "setDimensions": function () {},
  "afterSetDimensions": function () {},
  "beforeDataLimits": function () {},
  "determineDataLimits": function () {},
  "afterDataLimits": function () {},
  "beforeBuildTicks": function () {},
  "afterBuildTicks": function () {},
  "beforeTickToLabelConversion": function () {},
  "afterTickToLabelConversion": function () {},
  "beforeCalculateTickRotation": function () {},
  "calculateTickRotation": function () {},
  "afterCalculateTickRotation": function () {},
  "beforeFit": function () {},
  "fit": function () {},
  "handleMargins": function () {},
  "afterFit": function () {},
  "isHorizontal": function () {},
  "isFullWidth": function () {},
  "getRightValue": function () {},
  "getLabelForIndex": function () {},
  "getPixelForValue": function () {},
  "getValueForPixel": function () {},
  "getPixelForTick": function () {},
  "getPixelForDecimal": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "draw": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {}
};
Chart.scaleService.constructors.radialLinear.__super__.constructor.__super__.constructor.prototype = {
  "constructor": function () {},
  "getPadding": function () {},
  "beforeUpdate": function () {},
  "update": function () {},
  "afterUpdate": function () {},
  "beforeSetDimensions": function () {},
  "setDimensions": function () {},
  "afterSetDimensions": function () {},
  "beforeDataLimits": function () {},
  "determineDataLimits": function () {},
  "afterDataLimits": function () {},
  "beforeBuildTicks": function () {},
  "buildTicks": function () {},
  "afterBuildTicks": function () {},
  "beforeTickToLabelConversion": function () {},
  "convertTicksToLabels": function () {},
  "afterTickToLabelConversion": function () {},
  "beforeCalculateTickRotation": function () {},
  "calculateTickRotation": function () {},
  "afterCalculateTickRotation": function () {},
  "beforeFit": function () {},
  "fit": function () {},
  "handleMargins": function () {},
  "afterFit": function () {},
  "isHorizontal": function () {},
  "isFullWidth": function () {},
  "getRightValue": function () {},
  "getLabelForIndex": function () {},
  "getPixelForValue": function () {},
  "getValueForPixel": function () {},
  "getPixelForTick": function () {},
  "getPixelForDecimal": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "draw": function () {},
  "closure_uid_972347496": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {}
};
Chart.scaleService.constructors.time.prototype = {
  "constructor": function () {},
  "initialize": function () {},
  "getLabelMoment": function () {},
  "getLabelDiff": function () {},
  "getMomentStartOf": function () {},
  "determineDataLimits": function () {},
  "buildLabelDiffs": function () {},
  "buildTicks": function () {},
  "getLabelForIndex": function () {},
  "tickFormatFunction": function () {},
  "convertTicksToLabels": function () {},
  "getPixelForValue": function () {},
  "getPixelForTick": function () {},
  "getValueForPixel": function () {},
  "parseTime": function () {},
  "getPadding": function () {},
  "beforeUpdate": function () {},
  "update": function () {},
  "afterUpdate": function () {},
  "beforeSetDimensions": function () {},
  "setDimensions": function () {},
  "afterSetDimensions": function () {},
  "beforeDataLimits": function () {},
  "afterDataLimits": function () {},
  "beforeBuildTicks": function () {},
  "afterBuildTicks": function () {},
  "beforeTickToLabelConversion": function () {},
  "afterTickToLabelConversion": function () {},
  "beforeCalculateTickRotation": function () {},
  "calculateTickRotation": function () {},
  "afterCalculateTickRotation": function () {},
  "beforeFit": function () {},
  "fit": function () {},
  "handleMargins": function () {},
  "afterFit": function () {},
  "isHorizontal": function () {},
  "isFullWidth": function () {},
  "getRightValue": function () {},
  "getPixelForDecimal": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "draw": function () {},
  "closure_uid_972347496": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {}
};
Chart.scaleService.constructors.time.__super__.constructor.prototype = {
  "constructor": function () {},
  "getPadding": function () {},
  "beforeUpdate": function () {},
  "update": function () {},
  "afterUpdate": function () {},
  "beforeSetDimensions": function () {},
  "setDimensions": function () {},
  "afterSetDimensions": function () {},
  "beforeDataLimits": function () {},
  "determineDataLimits": function () {},
  "afterDataLimits": function () {},
  "beforeBuildTicks": function () {},
  "buildTicks": function () {},
  "afterBuildTicks": function () {},
  "beforeTickToLabelConversion": function () {},
  "convertTicksToLabels": function () {},
  "afterTickToLabelConversion": function () {},
  "beforeCalculateTickRotation": function () {},
  "calculateTickRotation": function () {},
  "afterCalculateTickRotation": function () {},
  "beforeFit": function () {},
  "fit": function () {},
  "handleMargins": function () {},
  "afterFit": function () {},
  "isHorizontal": function () {},
  "isFullWidth": function () {},
  "getRightValue": function () {},
  "getLabelForIndex": function () {},
  "getPixelForValue": function () {},
  "getValueForPixel": function () {},
  "getPixelForTick": function () {},
  "getPixelForDecimal": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "draw": function () {},
  "closure_uid_972347496": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {}
};
Chart.Scale.prototype = {
  "constructor": function () {},
  "getPadding": function () {},
  "beforeUpdate": function () {},
  "update": function () {},
  "afterUpdate": function () {},
  "beforeSetDimensions": function () {},
  "setDimensions": function () {},
  "afterSetDimensions": function () {},
  "beforeDataLimits": function () {},
  "determineDataLimits": function () {},
  "afterDataLimits": function () {},
  "beforeBuildTicks": function () {},
  "buildTicks": function () {},
  "afterBuildTicks": function () {},
  "beforeTickToLabelConversion": function () {},
  "convertTicksToLabels": function () {},
  "afterTickToLabelConversion": function () {},
  "beforeCalculateTickRotation": function () {},
  "calculateTickRotation": function () {},
  "afterCalculateTickRotation": function () {},
  "beforeFit": function () {},
  "fit": function () {},
  "handleMargins": function () {},
  "afterFit": function () {},
  "isHorizontal": function () {},
  "isFullWidth": function () {},
  "getRightValue": function () {},
  "getLabelForIndex": function () {},
  "getPixelForValue": function () {},
  "getValueForPixel": function () {},
  "getPixelForTick": function () {},
  "getPixelForDecimal": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "draw": function () {},
  "closure_uid_972347496": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {}
};
Chart.Title.prototype = {
  "constructor": function () {},
  "initialize": function () {},
  "beforeUpdate": function () {},
  "update": function () {},
  "afterUpdate": function () {},
  "beforeSetDimensions": function () {},
  "setDimensions": function () {},
  "afterSetDimensions": function () {},
  "beforeBuildLabels": function () {},
  "buildLabels": function () {},
  "afterBuildLabels": function () {},
  "beforeFit": function () {},
  "fit": function () {},
  "afterFit": function () {},
  "isHorizontal": function () {},
  "draw": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {},
  "closure_uid_972347496": function () {}
};
Chart.Legend.prototype = {
  "constructor": function () {},
  "initialize": function () {},
  "beforeUpdate": function () {},
  "update": function () {},
  "afterUpdate": function () {},
  "beforeSetDimensions": function () {},
  "setDimensions": function () {},
  "afterSetDimensions": function () {},
  "beforeBuildLabels": function () {},
  "buildLabels": function () {},
  "afterBuildLabels": function () {},
  "beforeFit": function () {},
  "fit": function () {},
  "afterFit": function () {},
  "isHorizontal": function () {},
  "draw": function () {},
  "handleEvent": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {},
  "closure_uid_972347496": function () {}
};
Chart.Tooltip.prototype = {
  "constructor": function () {},
  "initialize": function () {},
  "getTitle": function () {},
  "getBeforeBody": function () {},
  "getBody": function () {},
  "getAfterBody": function () {},
  "getFooter": function () {},
  "update": function () {},
  "drawCaret": function () {},
  "drawTitle": function () {},
  "drawBody": function () {},
  "drawFooter": function () {},
  "drawBackground": function () {},
  "draw": function () {},
  "handleEvent": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {},
  "closure_uid_972347496": function () {}
};
Chart.LinearScaleBase.prototype = {
  "constructor": function () {},
  "handleTickRangeOptions": function () {},
  "getTickLimit": function () {},
  "handleDirectionalChanges": function () {},
  "buildTicks": function () {},
  "convertTicksToLabels": function () {},
  "closure_uid_972347496": function () {},
  "getPadding": function () {},
  "beforeUpdate": function () {},
  "update": function () {},
  "afterUpdate": function () {},
  "beforeSetDimensions": function () {},
  "setDimensions": function () {},
  "afterSetDimensions": function () {},
  "beforeDataLimits": function () {},
  "determineDataLimits": function () {},
  "afterDataLimits": function () {},
  "beforeBuildTicks": function () {},
  "afterBuildTicks": function () {},
  "beforeTickToLabelConversion": function () {},
  "afterTickToLabelConversion": function () {},
  "beforeCalculateTickRotation": function () {},
  "calculateTickRotation": function () {},
  "afterCalculateTickRotation": function () {},
  "beforeFit": function () {},
  "fit": function () {},
  "handleMargins": function () {},
  "afterFit": function () {},
  "isHorizontal": function () {},
  "isFullWidth": function () {},
  "getRightValue": function () {},
  "getLabelForIndex": function () {},
  "getPixelForValue": function () {},
  "getValueForPixel": function () {},
  "getPixelForTick": function () {},
  "getPixelForDecimal": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "draw": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {}
};
Chart.LinearScaleBase.__super__.constructor.prototype = {
  "constructor": function () {},
  "getPadding": function () {},
  "beforeUpdate": function () {},
  "update": function () {},
  "afterUpdate": function () {},
  "beforeSetDimensions": function () {},
  "setDimensions": function () {},
  "afterSetDimensions": function () {},
  "beforeDataLimits": function () {},
  "determineDataLimits": function () {},
  "afterDataLimits": function () {},
  "beforeBuildTicks": function () {},
  "buildTicks": function () {},
  "afterBuildTicks": function () {},
  "beforeTickToLabelConversion": function () {},
  "convertTicksToLabels": function () {},
  "afterTickToLabelConversion": function () {},
  "beforeCalculateTickRotation": function () {},
  "calculateTickRotation": function () {},
  "afterCalculateTickRotation": function () {},
  "beforeFit": function () {},
  "fit": function () {},
  "handleMargins": function () {},
  "afterFit": function () {},
  "isHorizontal": function () {},
  "isFullWidth": function () {},
  "getRightValue": function () {},
  "getLabelForIndex": function () {},
  "getPixelForValue": function () {},
  "getValueForPixel": function () {},
  "getPixelForTick": function () {},
  "getPixelForDecimal": function () {},
  "getBasePixel": function () {},
  "getBaseValue": function () {},
  "draw": function () {},
  "closure_uid_972347496": function () {},
  "initialize": function () {},
  "pivot": function () {},
  "transition": function () {},
  "tooltipPosition": function () {},
  "hasValue": function () {}
};
/**********************************************************************
 * End Generated Extern for Chart
/**********************************************************************/
