var Phaser = {
  "VERSION": {},
  "GAMES": {},
  "AUTO": {},
  "CANVAS": {},
  "WEBGL": {},
  "HEADLESS": {},
  "NONE": {},
  "LEFT": {},
  "RIGHT": {},
  "UP": {},
  "DOWN": {},
  "SPRITE": {},
  "BUTTON": {},
  "IMAGE": {},
  "GRAPHICS": {},
  "TEXT": {},
  "TILESPRITE": {},
  "BITMAPTEXT": {},
  "GROUP": {},
  "RENDERTEXTURE": {},
  "TILEMAP": {},
  "TILEMAPLAYER": {},
  "EMITTER": {},
  "POLYGON": {},
  "BITMAPDATA": {},
  "CANVAS_FILTER": {},
  "WEBGL_FILTER": {},
  "ELLIPSE": {},
  "SPRITEBATCH": {},
  "RETROFONT": {},
  "POINTER": {},
  "ROPE": {},
  "CIRCLE": {},
  "RECTANGLE": {},
  "LINE": {},
  "MATRIX": {},
  "POINT": {},
  "ROUNDEDRECTANGLE": {},
  "CREATURE": {},
  "VIDEO": {},
  "blendModes": {
    "NORMAL": {},
    "ADD": {},
    "MULTIPLY": {},
    "SCREEN": {},
    "OVERLAY": {},
    "DARKEN": {},
    "LIGHTEN": {},
    "COLOR_DODGE": {},
    "COLOR_BURN": {},
    "HARD_LIGHT": {},
    "SOFT_LIGHT": {},
    "DIFFERENCE": {},
    "EXCLUSION": {},
    "HUE": {},
    "SATURATION": {},
    "COLOR": {},
    "LUMINOSITY": {}
  },
  "scaleModes": {
    "DEFAULT": {},
    "LINEAR": {},
    "NEAREST": {}
  },
  "PIXI": {
    "WEBGL_RENDERER": {},
    "CANVAS_RENDERER": {},
    "VERSION": {},
    "_UID": {},
    "Float32Array": function () {},
    "Uint16Array": function () {},
    "Uint32Array": function () {},
    "ArrayBuffer": function () {},
    "PI_2": {},
    "RAD_TO_DEG": {},
    "DEG_TO_RAD": {},
    "RETINA_PREFIX": {},
    "defaultRenderOptions": {
      "view": {},
      "transparent": {},
      "antialias": {},
      "preserveDrawingBuffer": {},
      "resolution": {},
      "clearBeforeRender": {},
      "autoResize": {}
    },
    "DisplayObject": {
      "_tempMatrix": {
        "a": {},
        "b": {},
        "c": {},
        "d": {},
        "tx": {},
        "ty": {},
        "type": {},
        "fromArray": function () {},
        "setTo": function () {},
        "clone": function () {},
        "copyTo": function () {},
        "copyFrom": function () {},
        "toArray": function () {},
        "apply": function () {},
        "applyInverse": function () {},
        "translate": function () {},
        "scale": function () {},
        "rotate": function () {},
        "append": function () {},
        "identity": function () {}
      }
    },
    "DisplayObjectContainer": function () {},
    "Sprite": {
      "fromFrame": function () {},
      "fromImage": function () {}
    },
    "SpriteBatch": function () {},
    "Stage": function () {},
    "hex2rgb": function () {},
    "rgb2hex": function () {},
    "canUseNewCanvasBlendModes": function () {},
    "getNextPowerOfTwo": function () {},
    "isPowerOfTwo": function () {},
    "PolyK": {
      "Triangulate": function () {},
      "_PointInTriangle": function () {},
      "_convex": function () {}
    },
    "initDefaultShaders": function () {},
    "CompileVertexShader": function () {},
    "CompileFragmentShader": function () {},
    "_CompileShader": function () {},
    "compileProgram": function () {},
    "PixiShader": {
      "defaultVertexSrc": {}
    },
    "PixiFastShader": function () {},
    "StripShader": function () {},
    "PrimitiveShader": function () {},
    "ComplexPrimitiveShader": function () {},
    "WebGLGraphics": {
      "renderGraphics": function () {},
      "updateGraphics": function () {},
      "switchMode": function () {},
      "buildRectangle": function () {},
      "buildRoundedRectangle": function () {},
      "quadraticBezierCurve": function () {},
      "buildCircle": function () {},
      "buildLine": function () {},
      "buildComplexPoly": function () {},
      "buildPoly": function () {},
      "graphicsDataPool": {}
    },
    "WebGLGraphicsData": function () {},
    "glContexts": {},
    "instances": {},
    "WebGLRenderer": {
      "glContextId": {}
    },
    "WebGLBlendModeManager": function () {},
    "WebGLMaskManager": function () {},
    "WebGLStencilManager": function () {},
    "WebGLShaderManager": function () {},
    "WebGLSpriteBatch": function () {},
    "WebGLFastSpriteBatch": function () {},
    "WebGLFilterManager": function () {},
    "FilterTexture": function () {},
    "CanvasBuffer": function () {},
    "CanvasMaskManager": function () {},
    "CanvasTinter": {
      "getTintedTexture": function () {},
      "tintWithMultiply": function () {},
      "tintWithPerPixel": function () {},
      "checkInverseAlpha": function () {},
      "canHandleAlpha": {},
      "canUseMultiply": {},
      "tintMethod": function () {}
    },
    "CanvasRenderer": function () {},
    "CanvasGraphics": {
      "renderGraphics": function () {},
      "renderGraphicsMask": function () {},
      "updateGraphicsTint": function () {}
    },
    "BaseTextureCache": {},
    "BaseTextureCacheIdGenerator": {},
    "BaseTexture": {
      "fromImage": function () {},
      "fromCanvas": function () {}
    },
    "TextureCache": {},
    "FrameCache": {},
    "TextureSilentFail": {},
    "TextureCacheIdGenerator": {},
    "Texture": {
      "fromImage": function () {},
      "fromFrame": function () {},
      "fromCanvas": function () {},
      "addTextureToCache": function () {},
      "removeTextureFromCache": function () {},
      "emptyTexture": {}
    },
    "TextureUvs": function () {},
    "RenderTexture": {
      "tempMatrix": {
        "a": {},
        "b": {},
        "c": {},
        "d": {},
        "tx": {},
        "ty": {},
        "type": {},
        "fromArray": function () {},
        "setTo": function () {},
        "clone": function () {},
        "copyTo": function () {},
        "copyFrom": function () {},
        "toArray": function () {},
        "apply": function () {},
        "applyInverse": function () {},
        "translate": function () {},
        "scale": function () {},
        "rotate": function () {},
        "append": function () {},
        "identity": function () {}
      }
    },
    "AbstractFilter": function () {},
    "Strip": {
      "DrawModes": {
        "TRIANGLE_STRIP": {},
        "TRIANGLES": {}
      }
    },
    "Rope": function () {},
    "TilingSprite": function () {},
    "Circle": {
      "contains": function () {},
      "equals": function () {},
      "intersects": function () {},
      "circumferencePoint": function () {},
      "intersectsRectangle": function () {}
    },
    "Ellipse": {
      "contains": function () {}
    },
    "Matrix": function () {},
    "identityMatrix": {
      "a": {},
      "b": {},
      "c": {},
      "d": {},
      "tx": {},
      "ty": {},
      "type": {},
      "fromArray": function () {},
      "setTo": function () {},
      "clone": function () {},
      "copyTo": function () {},
      "copyFrom": function () {},
      "toArray": function () {},
      "apply": function () {},
      "applyInverse": function () {},
      "translate": function () {},
      "scale": function () {},
      "rotate": function () {},
      "append": function () {},
      "identity": function () {}
    },
    "Point": {
      "add": function () {},
      "subtract": function () {},
      "multiply": function () {},
      "divide": function () {},
      "equals": function () {},
      "angle": function () {},
      "negative": function () {},
      "multiplyAdd": function () {},
      "interpolate": function () {},
      "perp": function () {},
      "rperp": function () {},
      "distance": function () {},
      "project": function () {},
      "projectUnit": function () {},
      "normalRightHand": function () {},
      "normalize": function () {},
      "rotate": function () {},
      "centroid": function () {},
      "parse": function () {}
    },
    "Polygon": function () {},
    "Rectangle": {
      "inflate": function () {},
      "inflatePoint": function () {},
      "size": function () {},
      "clone": function () {},
      "contains": function () {},
      "containsRaw": function () {},
      "containsPoint": function () {},
      "containsRect": function () {},
      "equals": function () {},
      "sameDimensions": function () {},
      "intersection": function () {},
      "intersects": function () {},
      "intersectsRaw": function () {},
      "union": function () {},
      "aabb": function () {}
    },
    "EmptyRectangle": {},
    "RoundedRectangle": function () {},
    "Graphics": {
      "POLY": {},
      "RECT": {},
      "CIRC": {},
      "ELIP": {},
      "RREC": {}
    },
    "GraphicsData": function () {},
    "blendModes": {
      "NORMAL": {},
      "ADD": {},
      "MULTIPLY": {},
      "SCREEN": {},
      "OVERLAY": {},
      "DARKEN": {},
      "LIGHTEN": {},
      "COLOR_DODGE": {},
      "COLOR_BURN": {},
      "HARD_LIGHT": {},
      "SOFT_LIGHT": {},
      "DIFFERENCE": {},
      "EXCLUSION": {},
      "HUE": {},
      "SATURATION": {},
      "COLOR": {},
      "LUMINOSITY": {}
    },
    "scaleModes": {
      "DEFAULT": {},
      "LINEAR": {},
      "NEAREST": {}
    }
  },
  "Utils": {
    "getProperty": function () {},
    "setProperty": function () {},
    "chanceRoll": function () {},
    "randomChoice": function () {},
    "parseDimension": function () {},
    "pad": function () {},
    "isPlainObject": function () {},
    "extend": function () {},
    "mixinPrototype": function () {},
    "mixin": function () {},
    "Debug": function () {}
  },
  "Circle": {
    "contains": function () {},
    "equals": function () {},
    "intersects": function () {},
    "circumferencePoint": function () {},
    "intersectsRectangle": function () {}
  },
  "Ellipse": {
    "contains": function () {}
  },
  "Line": {
    "intersectsPoints": function () {},
    "intersects": function () {},
    "reflect": function () {}
  },
  "Matrix": function () {},
  "identityMatrix": {
    "a": {},
    "b": {},
    "c": {},
    "d": {},
    "tx": {},
    "ty": {},
    "type": {},
    "fromArray": function () {},
    "setTo": function () {},
    "clone": function () {},
    "copyTo": function () {},
    "copyFrom": function () {},
    "toArray": function () {},
    "apply": function () {},
    "applyInverse": function () {},
    "translate": function () {},
    "scale": function () {},
    "rotate": function () {},
    "append": function () {},
    "identity": function () {}
  },
  "Point": {
    "add": function () {},
    "subtract": function () {},
    "multiply": function () {},
    "divide": function () {},
    "equals": function () {},
    "angle": function () {},
    "negative": function () {},
    "multiplyAdd": function () {},
    "interpolate": function () {},
    "perp": function () {},
    "rperp": function () {},
    "distance": function () {},
    "project": function () {},
    "projectUnit": function () {},
    "normalRightHand": function () {},
    "normalize": function () {},
    "rotate": function () {},
    "centroid": function () {},
    "parse": function () {}
  },
  "Polygon": function () {},
  "Rectangle": {
    "inflate": function () {},
    "inflatePoint": function () {},
    "size": function () {},
    "clone": function () {},
    "contains": function () {},
    "containsRaw": function () {},
    "containsPoint": function () {},
    "containsRect": function () {},
    "equals": function () {},
    "sameDimensions": function () {},
    "intersection": function () {},
    "intersects": function () {},
    "intersectsRaw": function () {},
    "union": function () {},
    "aabb": function () {}
  },
  "RoundedRectangle": function () {},
  "Camera": {
    "FOLLOW_LOCKON": {},
    "FOLLOW_PLATFORMER": {},
    "FOLLOW_TOPDOWN": {},
    "FOLLOW_TOPDOWN_TIGHT": {}
  },
  "Create": {
    "PALETTE_ARNE": {},
    "PALETTE_JMP": {},
    "PALETTE_CGA": {},
    "PALETTE_C64": {},
    "PALETTE_JAPANESE_MACHINE": {}
  },
  "State": function () {},
  "StateManager": function () {},
  "Signal": function () {},
  "SignalBinding": function () {},
  "Filter": function () {},
  "Plugin": function () {},
  "PluginManager": function () {},
  "Stage": function () {},
  "Group": {
    "RETURN_NONE": {},
    "RETURN_TOTAL": {},
    "RETURN_CHILD": {},
    "SORT_ASCENDING": {},
    "SORT_DESCENDING": {}
  },
  "World": function () {},
  "FlexGrid": function () {},
  "FlexLayer": function () {},
  "ScaleManager": {
    "EXACT_FIT": {},
    "NO_SCALE": {},
    "SHOW_ALL": {},
    "RESIZE": {},
    "USER_SCALE": {}
  },
  "Game": function () {},
  "Input": {
    "MOUSE_OVERRIDES_TOUCH": {},
    "TOUCH_OVERRIDES_MOUSE": {},
    "MOUSE_TOUCH_COMBINE": {},
    "MAX_POINTERS": {}
  },
  "Mouse": {
    "NO_BUTTON": {},
    "LEFT_BUTTON": {},
    "MIDDLE_BUTTON": {},
    "RIGHT_BUTTON": {},
    "BACK_BUTTON": {},
    "FORWARD_BUTTON": {},
    "WHEEL_UP": {},
    "WHEEL_DOWN": {}
  },
  "MSPointer": function () {},
  "DeviceButton": function () {},
  "Pointer": {
    "NO_BUTTON": {},
    "LEFT_BUTTON": {},
    "RIGHT_BUTTON": {},
    "MIDDLE_BUTTON": {},
    "BACK_BUTTON": {},
    "FORWARD_BUTTON": {},
    "ERASER_BUTTON": {}
  },
  "Touch": function () {},
  "InputHandler": function () {},
  "Gamepad": {
    "BUTTON_0": {},
    "BUTTON_1": {},
    "BUTTON_2": {},
    "BUTTON_3": {},
    "BUTTON_4": {},
    "BUTTON_5": {},
    "BUTTON_6": {},
    "BUTTON_7": {},
    "BUTTON_8": {},
    "BUTTON_9": {},
    "BUTTON_10": {},
    "BUTTON_11": {},
    "BUTTON_12": {},
    "BUTTON_13": {},
    "BUTTON_14": {},
    "BUTTON_15": {},
    "AXIS_0": {},
    "AXIS_1": {},
    "AXIS_2": {},
    "AXIS_3": {},
    "AXIS_4": {},
    "AXIS_5": {},
    "AXIS_6": {},
    "AXIS_7": {},
    "AXIS_8": {},
    "AXIS_9": {},
    "XBOX360_A": {},
    "XBOX360_B": {},
    "XBOX360_X": {},
    "XBOX360_Y": {},
    "XBOX360_LEFT_BUMPER": {},
    "XBOX360_RIGHT_BUMPER": {},
    "XBOX360_LEFT_TRIGGER": {},
    "XBOX360_RIGHT_TRIGGER": {},
    "XBOX360_BACK": {},
    "XBOX360_START": {},
    "XBOX360_STICK_LEFT_BUTTON": {},
    "XBOX360_STICK_RIGHT_BUTTON": {},
    "XBOX360_DPAD_LEFT": {},
    "XBOX360_DPAD_RIGHT": {},
    "XBOX360_DPAD_UP": {},
    "XBOX360_DPAD_DOWN": {},
    "XBOX360_STICK_LEFT_X": {},
    "XBOX360_STICK_LEFT_Y": {},
    "XBOX360_STICK_RIGHT_X": {},
    "XBOX360_STICK_RIGHT_Y": {},
    "PS3XC_X": {},
    "PS3XC_CIRCLE": {},
    "PS3XC_SQUARE": {},
    "PS3XC_TRIANGLE": {},
    "PS3XC_L1": {},
    "PS3XC_R1": {},
    "PS3XC_L2": {},
    "PS3XC_R2": {},
    "PS3XC_SELECT": {},
    "PS3XC_START": {},
    "PS3XC_STICK_LEFT_BUTTON": {},
    "PS3XC_STICK_RIGHT_BUTTON": {},
    "PS3XC_DPAD_UP": {},
    "PS3XC_DPAD_DOWN": {},
    "PS3XC_DPAD_LEFT": {},
    "PS3XC_DPAD_RIGHT": {},
    "PS3XC_STICK_LEFT_X": {},
    "PS3XC_STICK_LEFT_Y": {},
    "PS3XC_STICK_RIGHT_X": {},
    "PS3XC_STICK_RIGHT_Y": {}
  },
  "SinglePad": function () {},
  "Key": function () {},
  "Keyboard": {
    "A": {},
    "B": {},
    "C": {},
    "D": {},
    "E": {},
    "F": {},
    "G": {},
    "H": {},
    "I": {},
    "J": {},
    "K": {},
    "L": {},
    "M": {},
    "N": {},
    "O": {},
    "P": {},
    "Q": {},
    "R": {},
    "S": {},
    "T": {},
    "U": {},
    "V": {},
    "W": {},
    "X": {},
    "Y": {},
    "Z": {},
    "ZERO": {},
    "ONE": {},
    "TWO": {},
    "THREE": {},
    "FOUR": {},
    "FIVE": {},
    "SIX": {},
    "SEVEN": {},
    "EIGHT": {},
    "NINE": {},
    "NUMPAD_0": {},
    "NUMPAD_1": {},
    "NUMPAD_2": {},
    "NUMPAD_3": {},
    "NUMPAD_4": {},
    "NUMPAD_5": {},
    "NUMPAD_6": {},
    "NUMPAD_7": {},
    "NUMPAD_8": {},
    "NUMPAD_9": {},
    "NUMPAD_MULTIPLY": {},
    "NUMPAD_ADD": {},
    "NUMPAD_ENTER": {},
    "NUMPAD_SUBTRACT": {},
    "NUMPAD_DECIMAL": {},
    "NUMPAD_DIVIDE": {},
    "F1": {},
    "F2": {},
    "F3": {},
    "F4": {},
    "F5": {},
    "F6": {},
    "F7": {},
    "F8": {},
    "F9": {},
    "F10": {},
    "F11": {},
    "F12": {},
    "F13": {},
    "F14": {},
    "F15": {},
    "COLON": {},
    "EQUALS": {},
    "COMMA": {},
    "UNDERSCORE": {},
    "PERIOD": {},
    "QUESTION_MARK": {},
    "TILDE": {},
    "OPEN_BRACKET": {},
    "BACKWARD_SLASH": {},
    "CLOSED_BRACKET": {},
    "QUOTES": {},
    "BACKSPACE": {},
    "TAB": {},
    "CLEAR": {},
    "ENTER": {},
    "SHIFT": {},
    "CONTROL": {},
    "ALT": {},
    "CAPS_LOCK": {},
    "ESC": {},
    "SPACEBAR": {},
    "PAGE_UP": {},
    "PAGE_DOWN": {},
    "END": {},
    "HOME": {},
    "LEFT": {},
    "UP": {},
    "RIGHT": {},
    "DOWN": {},
    "PLUS": {},
    "MINUS": {},
    "INSERT": {},
    "DELETE": {},
    "HELP": {},
    "NUM_LOCK": {}
  },
  "Component": {
    "Angle": function () {},
    "Animation": function () {},
    "AutoCull": function () {},
    "Bounds": function () {},
    "BringToTop": function () {},
    "Core": {
      "install": function () {},
      "init": function () {},
      "preUpdate": function () {}
    },
    "Crop": function () {},
    "Delta": function () {},
    "Destroy": function () {},
    "FixedToCamera": {
      "postUpdate": function () {}
    },
    "Health": function () {},
    "InCamera": function () {},
    "InputEnabled": function () {},
    "InWorld": {
      "preUpdate": function () {}
    },
    "LifeSpan": {
      "preUpdate": function () {}
    },
    "LoadTexture": function () {},
    "Overlap": function () {},
    "PhysicsBody": {
      "preUpdate": function () {},
      "postUpdate": function () {}
    },
    "Reset": function () {},
    "ScaleMinMax": function () {},
    "Smoothed": function () {}
  },
  "Events": function () {},
  "GameObjectFactory": function () {},
  "GameObjectCreator": function () {},
  "Sprite": function () {},
  "Image": function () {},
  "TileSprite": function () {},
  "Rope": function () {},
  "Button": function () {},
  "SpriteBatch": function () {},
  "Particle": function () {},
  "BitmapData": {
    "getTransform": function () {}
  },
  "Graphics": function () {},
  "RenderTexture": function () {},
  "Text": {
    "fontPropertiesCache": {},
    "fontPropertiesCanvas": {},
    "fontPropertiesContext": {}
  },
  "BitmapText": function () {},
  "RetroFont": {
    "ALIGN_LEFT": {},
    "ALIGN_RIGHT": {},
    "ALIGN_CENTER": {},
    "TEXT_SET1": {},
    "TEXT_SET2": {},
    "TEXT_SET3": {},
    "TEXT_SET4": {},
    "TEXT_SET5": {},
    "TEXT_SET6": {},
    "TEXT_SET7": {},
    "TEXT_SET8": {},
    "TEXT_SET9": {},
    "TEXT_SET10": {},
    "TEXT_SET11": {}
  },
  "Device": {},
  "DOM": {
    "getOffset": function () {},
    "getBounds": function () {},
    "calibrate": function () {},
    "getAspectRatio": function () {},
    "inLayoutViewport": function () {},
    "getScreenOrientation": function () {},
    "visualBounds": {},
    "layoutBounds": {},
    "documentBounds": {}
  },
  "Canvas": {
    "create": function () {},
    "setBackgroundColor": function () {},
    "setTouchAction": function () {},
    "setUserSelect": function () {},
    "addToDOM": function () {},
    "removeFromDOM": function () {},
    "setTransform": function () {},
    "setSmoothingEnabled": function () {},
    "getSmoothingEnabled": function () {},
    "setImageRenderingCrisp": function () {},
    "setImageRenderingBicubic": function () {}
  },
  "RequestAnimationFrame": function () {},
  "Math": {
    "PI2": {},
    "fuzzyEqual": function () {},
    "fuzzyLessThan": function () {},
    "fuzzyGreaterThan": function () {},
    "fuzzyCeil": function () {},
    "fuzzyFloor": function () {},
    "average": function () {},
    "shear": function () {},
    "snapTo": function () {},
    "snapToFloor": function () {},
    "snapToCeil": function () {},
    "roundTo": function () {},
    "floorTo": function () {},
    "ceilTo": function () {},
    "angleBetween": function () {},
    "angleBetweenY": function () {},
    "angleBetweenPoints": function () {},
    "angleBetweenPointsY": function () {},
    "reverseAngle": function () {},
    "normalizeAngle": function () {},
    "maxAdd": function () {},
    "minSub": function () {},
    "wrap": function () {},
    "wrapValue": function () {},
    "isOdd": function () {},
    "isEven": function () {},
    "min": function () {},
    "max": function () {},
    "minProperty": function () {},
    "maxProperty": function () {},
    "wrapAngle": function () {},
    "linearInterpolation": function () {},
    "bezierInterpolation": function () {},
    "catmullRomInterpolation": function () {},
    "linear": function () {},
    "bernstein": function () {},
    "factorial": function () {},
    "catmullRom": function () {},
    "difference": function () {},
    "roundAwayFromZero": function () {},
    "sinCosGenerator": function () {},
    "distance": function () {},
    "distanceSq": function () {},
    "distancePow": function () {},
    "clamp": function () {},
    "clampBottom": function () {},
    "within": function () {},
    "mapLinear": function () {},
    "smoothstep": function () {},
    "smootherstep": function () {},
    "sign": function () {},
    "percent": function () {},
    "degToRad": function () {},
    "radToDeg": function () {}
  },
  "RandomDataGenerator": function () {},
  "QuadTree": function () {},
  "Net": function () {},
  "TweenManager": function () {},
  "Tween": function () {},
  "TweenData": {
    "PENDING": {},
    "RUNNING": {},
    "LOOPED": {},
    "COMPLETE": {}
  },
  "Easing": {
    "Linear": {
      "None": function () {}
    },
    "Quadratic": {
      "In": function () {},
      "Out": function () {},
      "InOut": function () {}
    },
    "Cubic": {
      "In": function () {},
      "Out": function () {},
      "InOut": function () {}
    },
    "Quartic": {
      "In": function () {},
      "Out": function () {},
      "InOut": function () {}
    },
    "Quintic": {
      "In": function () {},
      "Out": function () {},
      "InOut": function () {}
    },
    "Sinusoidal": {
      "In": function () {},
      "Out": function () {},
      "InOut": function () {}
    },
    "Exponential": {
      "In": function () {},
      "Out": function () {},
      "InOut": function () {}
    },
    "Circular": {
      "In": function () {},
      "Out": function () {},
      "InOut": function () {}
    },
    "Elastic": {
      "In": function () {},
      "Out": function () {},
      "InOut": function () {}
    },
    "Back": {
      "In": function () {},
      "Out": function () {},
      "InOut": function () {}
    },
    "Bounce": {
      "In": function () {},
      "Out": function () {},
      "InOut": function () {}
    },
    "Default": function () {},
    "Power0": function () {},
    "Power1": function () {},
    "Power2": function () {},
    "Power3": function () {},
    "Power4": function () {}
  },
  "Time": function () {},
  "Timer": {
    "MINUTE": {},
    "SECOND": {},
    "HALF": {},
    "QUARTER": {}
  },
  "TimerEvent": function () {},
  "AnimationManager": function () {},
  "Animation": {
    "generateFrameNames": function () {}
  },
  "Frame": function () {},
  "FrameData": function () {},
  "AnimationParser": {
    "spriteSheet": function () {},
    "JSONData": function () {},
    "JSONDataHash": function () {},
    "XMLData": function () {}
  },
  "Cache": {
    "CANVAS": {},
    "IMAGE": {},
    "TEXTURE": {},
    "SOUND": {},
    "TEXT": {},
    "PHYSICS": {},
    "TILEMAP": {},
    "BINARY": {},
    "BITMAPDATA": {},
    "BITMAPFONT": {},
    "JSON": {},
    "XML": {},
    "VIDEO": {},
    "SHADER": {},
    "RENDER_TEXTURE": {}
  },
  "Loader": {
    "TEXTURE_ATLAS_JSON_ARRAY": {},
    "TEXTURE_ATLAS_JSON_HASH": {},
    "TEXTURE_ATLAS_XML_STARLING": {},
    "PHYSICS_LIME_CORONA_JSON": {},
    "PHYSICS_PHASER_JSON": {}
  },
  "LoaderParser": {
    "bitmapFont": function () {},
    "xmlBitmapFont": function () {},
    "jsonBitmapFont": function () {},
    "finalizeBitmapFont": function () {}
  },
  "AudioSprite": function () {},
  "Sound": function () {},
  "SoundManager": function () {},
  "ArraySet": function () {},
  "ArrayUtils": {
    "getRandomItem": function () {},
    "removeRandomItem": function () {},
    "shuffle": function () {},
    "transposeMatrix": function () {},
    "rotateMatrix": function () {},
    "findClosest": function () {},
    "rotate": function () {},
    "numberArray": function () {},
    "numberArrayStep": function () {}
  },
  "Color": {
    "packPixel": function () {},
    "unpackPixel": function () {},
    "fromRGBA": function () {},
    "toRGBA": function () {},
    "RGBtoHSL": function () {},
    "HSLtoRGB": function () {},
    "RGBtoHSV": function () {},
    "HSVtoRGB": function () {},
    "hueToColor": function () {},
    "createColor": function () {},
    "updateColor": function () {},
    "getColor32": function () {},
    "getColor": function () {},
    "RGBtoString": function () {},
    "hexToRGB": function () {},
    "hexToColor": function () {},
    "webToColor": function () {},
    "valueToColor": function () {},
    "componentToHex": function () {},
    "HSVColorWheel": function () {},
    "HSLColorWheel": function () {},
    "interpolateColor": function () {},
    "interpolateColorWithRGB": function () {},
    "interpolateRGB": function () {},
    "getRandomColor": function () {},
    "getRGB": function () {},
    "getWebRGB": function () {},
    "getAlpha": function () {},
    "getAlphaFloat": function () {},
    "getRed": function () {},
    "getGreen": function () {},
    "getBlue": function () {},
    "blendNormal": function () {},
    "blendLighten": function () {},
    "blendDarken": function () {},
    "blendMultiply": function () {},
    "blendAverage": function () {},
    "blendAdd": function () {},
    "blendSubtract": function () {},
    "blendDifference": function () {},
    "blendNegation": function () {},
    "blendScreen": function () {},
    "blendExclusion": function () {},
    "blendOverlay": function () {},
    "blendSoftLight": function () {},
    "blendHardLight": function () {},
    "blendColorDodge": function () {},
    "blendColorBurn": function () {},
    "blendLinearDodge": function () {},
    "blendLinearBurn": function () {},
    "blendLinearLight": function () {},
    "blendVividLight": function () {},
    "blendPinLight": function () {},
    "blendHardMix": function () {},
    "blendReflect": function () {},
    "blendGlow": function () {},
    "blendPhoenix": function () {}
  },
  "LinkedList": function () {},
  "Physics": {
    "ARCADE": {},
    "P2JS": {},
    "NINJA": {},
    "BOX2D": {},
    "CHIPMUNK": {},
    "MATTERJS": {},
    "Arcade": {
      "SORT_NONE": {},
      "LEFT_RIGHT": {},
      "RIGHT_LEFT": {},
      "TOP_BOTTOM": {},
      "BOTTOM_TOP": {},
      "Body": {
        "render": function () {},
        "renderBodyInfo": function () {}
      },
      "TilemapCollision": function () {}
    },
    "P2": {
      "FixtureList": function () {},
      "PointProxy": function () {},
      "InversePointProxy": function () {},
      "Body": {
        "DYNAMIC": {},
        "STATIC": {},
        "KINEMATIC": {}
      },
      "BodyDebug": function () {},
      "Spring": function () {},
      "RotationalSpring": function () {},
      "Material": function () {},
      "ContactMaterial": function () {},
      "CollisionGroup": function () {},
      "DistanceConstraint": function () {},
      "GearConstraint": function () {},
      "LockConstraint": function () {},
      "PrismaticConstraint": function () {},
      "RevoluteConstraint": function () {}
    }
  },
  "ImageCollection": function () {},
  "Tile": function () {},
  "Tilemap": {
    "CSV": {},
    "TILED_JSON": {},
    "NORTH": {},
    "EAST": {},
    "SOUTH": {},
    "WEST": {}
  },
  "TilemapLayer": {
    "sharedCopyCanvas": {},
    "ensureSharedCopyCanvas": function () {}
  },
  "TilemapParser": {
    "parse": function () {},
    "parseCSV": function () {},
    "getEmptyData": function () {},
    "parseTiledJSON": function () {}
  },
  "Tileset": function () {},
  "Particles": {
    "Arcade": {
      "Emitter": function () {}
    }
  },
  "Video": function () {}
};
Phaser.PIXI.DisplayObject.prototype = {
  "destroy": function () {},
  "updateTransform": function () {},
  "displayObjectUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "setStageReference": function () {},
  "preUpdate": function () {},
  "generateTexture": function () {},
  "updateCache": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "_renderCachedSprite": function () {},
  "_generateCachedSprite": function () {},
  "_destroyCachedSprite": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {}
};
Phaser.PIXI.DisplayObjectContainer.prototype = {
  "constructor": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "displayObjectContainerUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "setStageReference": function () {},
  "removeStageReference": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "destroy": function () {},
  "displayObjectUpdateTransform": function () {},
  "preUpdate": function () {},
  "generateTexture": function () {},
  "updateCache": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "_renderCachedSprite": function () {},
  "_generateCachedSprite": function () {},
  "_destroyCachedSprite": function () {}
};
Phaser.PIXI.Sprite.prototype = {
  "constructor": function () {},
  "setTexture": function () {},
  "onTextureUpdate": function () {},
  "getBounds": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "displayObjectContainerUpdateTransform": function () {},
  "getLocalBounds": function () {},
  "setStageReference": function () {},
  "removeStageReference": function () {},
  "destroy": function () {},
  "displayObjectUpdateTransform": function () {},
  "preUpdate": function () {},
  "generateTexture": function () {},
  "updateCache": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "_renderCachedSprite": function () {},
  "_generateCachedSprite": function () {},
  "_destroyCachedSprite": function () {}
};
Phaser.PIXI.SpriteBatch.prototype = {
  "constructor": function () {},
  "initWebGL": function () {},
  "updateTransform": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "displayObjectContainerUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "setStageReference": function () {},
  "removeStageReference": function () {},
  "destroy": function () {},
  "displayObjectUpdateTransform": function () {},
  "preUpdate": function () {},
  "generateTexture": function () {},
  "updateCache": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "_renderCachedSprite": function () {},
  "_generateCachedSprite": function () {},
  "_destroyCachedSprite": function () {}
};
Phaser.PIXI.Stage.prototype = {
  "constructor": function () {},
  "updateTransform": function () {},
  "setBackgroundColor": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "displayObjectContainerUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "setStageReference": function () {},
  "removeStageReference": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "destroy": function () {},
  "displayObjectUpdateTransform": function () {},
  "preUpdate": function () {},
  "generateTexture": function () {},
  "updateCache": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "_renderCachedSprite": function () {},
  "_generateCachedSprite": function () {},
  "_destroyCachedSprite": function () {}
};
Phaser.PIXI.PixiShader.prototype = {
  "init": function () {},
  "initUniforms": function () {},
  "initSampler2D": function () {},
  "syncUniforms": function () {},
  "destroy": function () {}
};
Phaser.PIXI.PixiFastShader.prototype = {
  "init": function () {},
  "destroy": function () {}
};
Phaser.PIXI.StripShader.prototype = {
  "init": function () {},
  "destroy": function () {}
};
Phaser.PIXI.PrimitiveShader.prototype = {
  "init": function () {},
  "destroy": function () {}
};
Phaser.PIXI.ComplexPrimitiveShader.prototype = {
  "init": function () {},
  "destroy": function () {}
};
Phaser.PIXI.WebGLGraphicsData.prototype = {
  "reset": function () {},
  "upload": function () {}
};
Phaser.PIXI.WebGLRenderer.prototype = {
  "initContext": function () {},
  "render": function () {},
  "renderDisplayObject": function () {},
  "resize": function () {},
  "updateTexture": function () {},
  "destroy": function () {},
  "mapBlendModes": function () {}
};
Phaser.PIXI.WebGLBlendModeManager.prototype = {
  "setContext": function () {},
  "setBlendMode": function () {},
  "destroy": function () {}
};
Phaser.PIXI.WebGLMaskManager.prototype = {
  "setContext": function () {},
  "pushMask": function () {},
  "popMask": function () {},
  "destroy": function () {}
};
Phaser.PIXI.WebGLStencilManager.prototype = {
  "setContext": function () {},
  "pushStencil": function () {},
  "bindGraphics": function () {},
  "popStencil": function () {},
  "destroy": function () {}
};
Phaser.PIXI.WebGLShaderManager.prototype = {
  "setContext": function () {},
  "setAttribs": function () {},
  "setShader": function () {},
  "destroy": function () {}
};
Phaser.PIXI.WebGLSpriteBatch.prototype = {
  "setContext": function () {},
  "begin": function () {},
  "end": function () {},
  "render": function () {},
  "renderTilingSprite": function () {},
  "flush": function () {},
  "renderBatch": function () {},
  "stop": function () {},
  "start": function () {},
  "destroy": function () {}
};
Phaser.PIXI.WebGLFastSpriteBatch.prototype = {
  "setContext": function () {},
  "begin": function () {},
  "end": function () {},
  "render": function () {},
  "renderSprite": function () {},
  "flush": function () {},
  "stop": function () {},
  "start": function () {}
};
Phaser.PIXI.WebGLFilterManager.prototype = {
  "setContext": function () {},
  "begin": function () {},
  "pushFilter": function () {},
  "popFilter": function () {},
  "applyFilterPass": function () {},
  "initShaderBuffers": function () {},
  "destroy": function () {}
};
Phaser.PIXI.FilterTexture.prototype = {
  "clear": function () {},
  "resize": function () {},
  "destroy": function () {}
};
Phaser.PIXI.CanvasBuffer.prototype = {
  "clear": function () {},
  "resize": function () {}
};
Phaser.PIXI.CanvasMaskManager.prototype = {
  "pushMask": function () {},
  "popMask": function () {}
};
Phaser.PIXI.CanvasRenderer.prototype = {
  "render": function () {},
  "destroy": function () {},
  "resize": function () {},
  "renderDisplayObject": function () {},
  "mapBlendModes": function () {}
};
Phaser.PIXI.BaseTexture.prototype = {
  "forceLoaded": function () {},
  "destroy": function () {},
  "updateSourceImage": function () {},
  "dirty": function () {},
  "unloadFromGPU": function () {}
};
Phaser.PIXI.Texture.prototype = {
  "onBaseTextureLoaded": function () {},
  "destroy": function () {},
  "setFrame": function () {},
  "_updateUvs": function () {}
};
Phaser.PIXI.RenderTexture.prototype = {
  "constructor": function () {},
  "resize": function () {},
  "clear": function () {},
  "renderWebGL": function () {},
  "renderCanvas": function () {},
  "getImage": function () {},
  "getBase64": function () {},
  "getCanvas": function () {},
  "onBaseTextureLoaded": function () {},
  "destroy": function () {},
  "setFrame": function () {},
  "_updateUvs": function () {}
};
Phaser.PIXI.AbstractFilter.prototype = {
  "syncUniforms": function () {}
};
Phaser.PIXI.Strip.prototype = {
  "constructor": function () {},
  "_renderWebGL": function () {},
  "_initWebGL": function () {},
  "_renderStrip": function () {},
  "_renderCanvas": function () {},
  "_renderCanvasTriangleStrip": function () {},
  "_renderCanvasTriangles": function () {},
  "_renderCanvasDrawTriangle": function () {},
  "renderStripFlat": function () {},
  "onTextureUpdate": function () {},
  "getBounds": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "displayObjectContainerUpdateTransform": function () {},
  "getLocalBounds": function () {},
  "setStageReference": function () {},
  "removeStageReference": function () {},
  "destroy": function () {},
  "displayObjectUpdateTransform": function () {},
  "preUpdate": function () {},
  "generateTexture": function () {},
  "updateCache": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "_renderCachedSprite": function () {},
  "_generateCachedSprite": function () {},
  "_destroyCachedSprite": function () {}
};
Phaser.PIXI.Rope.prototype = {
  "constructor": function () {},
  "refresh": function () {},
  "updateTransform": function () {},
  "setTexture": function () {},
  "_renderWebGL": function () {},
  "_initWebGL": function () {},
  "_renderStrip": function () {},
  "_renderCanvas": function () {},
  "_renderCanvasTriangleStrip": function () {},
  "_renderCanvasTriangles": function () {},
  "_renderCanvasDrawTriangle": function () {},
  "renderStripFlat": function () {},
  "onTextureUpdate": function () {},
  "getBounds": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "displayObjectContainerUpdateTransform": function () {},
  "getLocalBounds": function () {},
  "setStageReference": function () {},
  "removeStageReference": function () {},
  "destroy": function () {},
  "displayObjectUpdateTransform": function () {},
  "preUpdate": function () {},
  "generateTexture": function () {},
  "updateCache": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "_renderCachedSprite": function () {},
  "_generateCachedSprite": function () {},
  "_destroyCachedSprite": function () {}
};
Phaser.PIXI.TilingSprite.prototype = {
  "constructor": function () {},
  "setTexture": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "onTextureUpdate": function () {},
  "generateTilingTexture": function () {},
  "getBounds": function () {},
  "destroy": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "displayObjectContainerUpdateTransform": function () {},
  "getLocalBounds": function () {},
  "setStageReference": function () {},
  "removeStageReference": function () {},
  "displayObjectUpdateTransform": function () {},
  "preUpdate": function () {},
  "generateTexture": function () {},
  "updateCache": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "_renderCachedSprite": function () {},
  "_generateCachedSprite": function () {},
  "_destroyCachedSprite": function () {}
};
Phaser.PIXI.Circle.prototype = {
  "circumference": function () {},
  "random": function () {},
  "getBounds": function () {},
  "setTo": function () {},
  "copyFrom": function () {},
  "copyTo": function () {},
  "distance": function () {},
  "clone": function () {},
  "contains": function () {},
  "circumferencePoint": function () {},
  "offset": function () {},
  "offsetPoint": function () {},
  "toString": function () {},
  "constructor": function () {}
};
Phaser.PIXI.Ellipse.prototype = {
  "setTo": function () {},
  "getBounds": function () {},
  "copyFrom": function () {},
  "copyTo": function () {},
  "clone": function () {},
  "contains": function () {},
  "random": function () {},
  "toString": function () {},
  "constructor": function () {}
};
Phaser.PIXI.Matrix.prototype = {
  "fromArray": function () {},
  "setTo": function () {},
  "clone": function () {},
  "copyTo": function () {},
  "copyFrom": function () {},
  "toArray": function () {},
  "apply": function () {},
  "applyInverse": function () {},
  "translate": function () {},
  "scale": function () {},
  "rotate": function () {},
  "append": function () {},
  "identity": function () {}
};
Phaser.PIXI.Point.prototype = {
  "copyFrom": function () {},
  "invert": function () {},
  "setTo": function () {},
  "set": function () {},
  "add": function () {},
  "subtract": function () {},
  "multiply": function () {},
  "divide": function () {},
  "clampX": function () {},
  "clampY": function () {},
  "clamp": function () {},
  "clone": function () {},
  "copyTo": function () {},
  "distance": function () {},
  "equals": function () {},
  "angle": function () {},
  "rotate": function () {},
  "getMagnitude": function () {},
  "getMagnitudeSq": function () {},
  "setMagnitude": function () {},
  "normalize": function () {},
  "isZero": function () {},
  "dot": function () {},
  "cross": function () {},
  "perp": function () {},
  "rperp": function () {},
  "normalRightHand": function () {},
  "floor": function () {},
  "ceil": function () {},
  "toString": function () {},
  "constructor": function () {}
};
Phaser.PIXI.Polygon.prototype = {
  "toNumberArray": function () {},
  "flatten": function () {},
  "clone": function () {},
  "contains": function () {},
  "setTo": function () {},
  "calculateArea": function () {},
  "constructor": function () {}
};
Phaser.PIXI.Rectangle.prototype = {
  "offset": function () {},
  "offsetPoint": function () {},
  "setTo": function () {},
  "scale": function () {},
  "centerOn": function () {},
  "floor": function () {},
  "floorAll": function () {},
  "ceil": function () {},
  "ceilAll": function () {},
  "copyFrom": function () {},
  "copyTo": function () {},
  "inflate": function () {},
  "size": function () {},
  "resize": function () {},
  "clone": function () {},
  "contains": function () {},
  "containsRect": function () {},
  "equals": function () {},
  "intersection": function () {},
  "intersects": function () {},
  "intersectsRaw": function () {},
  "union": function () {},
  "random": function () {},
  "toString": function () {},
  "constructor": function () {}
};
Phaser.PIXI.RoundedRectangle.prototype = {
  "clone": function () {},
  "contains": function () {},
  "constructor": function () {}
};
Phaser.PIXI.Graphics.prototype = {
  "constructor": function () {},
  "lineStyle": function () {},
  "moveTo": function () {},
  "lineTo": function () {},
  "quadraticCurveTo": function () {},
  "bezierCurveTo": function () {},
  "arcTo": function () {},
  "arc": function () {},
  "beginFill": function () {},
  "endFill": function () {},
  "drawRect": function () {},
  "drawRoundedRect": function () {},
  "drawCircle": function () {},
  "drawEllipse": function () {},
  "drawPolygon": function () {},
  "clear": function () {},
  "generateTexture": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "getBounds": function () {},
  "containsPoint": function () {},
  "updateLocalBounds": function () {},
  "_generateCachedSprite": function () {},
  "updateCachedSpriteTexture": function () {},
  "destroyCachedSprite": function () {},
  "drawShape": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "displayObjectContainerUpdateTransform": function () {},
  "getLocalBounds": function () {},
  "setStageReference": function () {},
  "removeStageReference": function () {},
  "destroy": function () {},
  "displayObjectUpdateTransform": function () {},
  "preUpdate": function () {},
  "updateCache": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "_renderCachedSprite": function () {},
  "_destroyCachedSprite": function () {}
};
Phaser.PIXI.GraphicsData.prototype = {
  "clone": function () {}
};
Phaser.Utils.Debug.prototype = {
  "boot": function () {},
  "preUpdate": function () {},
  "reset": function () {},
  "start": function () {},
  "stop": function () {},
  "line": function () {},
  "soundInfo": function () {},
  "cameraInfo": function () {},
  "timer": function () {},
  "pointer": function () {},
  "spriteInputInfo": function () {},
  "key": function () {},
  "inputInfo": function () {},
  "spriteBounds": function () {},
  "ropeSegments": function () {},
  "spriteInfo": function () {},
  "spriteCoords": function () {},
  "lineInfo": function () {},
  "pixel": function () {},
  "geom": function () {},
  "rectangle": function () {},
  "text": function () {},
  "quadTree": function () {},
  "body": function () {},
  "bodyInfo": function () {},
  "box2dWorld": function () {},
  "box2dBody": function () {},
  "constructor": function () {}
};
Phaser.Circle.prototype = {
  "circumference": function () {},
  "random": function () {},
  "getBounds": function () {},
  "setTo": function () {},
  "copyFrom": function () {},
  "copyTo": function () {},
  "distance": function () {},
  "clone": function () {},
  "contains": function () {},
  "circumferencePoint": function () {},
  "offset": function () {},
  "offsetPoint": function () {},
  "toString": function () {},
  "constructor": function () {}
};
Phaser.Ellipse.prototype = {
  "setTo": function () {},
  "getBounds": function () {},
  "copyFrom": function () {},
  "copyTo": function () {},
  "clone": function () {},
  "contains": function () {},
  "random": function () {},
  "toString": function () {},
  "constructor": function () {}
};
Phaser.Line.prototype = {
  "setTo": function () {},
  "fromSprite": function () {},
  "fromAngle": function () {},
  "rotate": function () {},
  "intersects": function () {},
  "reflect": function () {},
  "pointOnLine": function () {},
  "pointOnSegment": function () {},
  "random": function () {},
  "coordinatesOnLine": function () {},
  "clone": function () {}
};
Phaser.Matrix.prototype = {
  "fromArray": function () {},
  "setTo": function () {},
  "clone": function () {},
  "copyTo": function () {},
  "copyFrom": function () {},
  "toArray": function () {},
  "apply": function () {},
  "applyInverse": function () {},
  "translate": function () {},
  "scale": function () {},
  "rotate": function () {},
  "append": function () {},
  "identity": function () {}
};
Phaser.Point.prototype = {
  "copyFrom": function () {},
  "invert": function () {},
  "setTo": function () {},
  "set": function () {},
  "add": function () {},
  "subtract": function () {},
  "multiply": function () {},
  "divide": function () {},
  "clampX": function () {},
  "clampY": function () {},
  "clamp": function () {},
  "clone": function () {},
  "copyTo": function () {},
  "distance": function () {},
  "equals": function () {},
  "angle": function () {},
  "rotate": function () {},
  "getMagnitude": function () {},
  "getMagnitudeSq": function () {},
  "setMagnitude": function () {},
  "normalize": function () {},
  "isZero": function () {},
  "dot": function () {},
  "cross": function () {},
  "perp": function () {},
  "rperp": function () {},
  "normalRightHand": function () {},
  "floor": function () {},
  "ceil": function () {},
  "toString": function () {},
  "constructor": function () {}
};
Phaser.Polygon.prototype = {
  "toNumberArray": function () {},
  "flatten": function () {},
  "clone": function () {},
  "contains": function () {},
  "setTo": function () {},
  "calculateArea": function () {},
  "constructor": function () {}
};
Phaser.Rectangle.prototype = {
  "offset": function () {},
  "offsetPoint": function () {},
  "setTo": function () {},
  "scale": function () {},
  "centerOn": function () {},
  "floor": function () {},
  "floorAll": function () {},
  "ceil": function () {},
  "ceilAll": function () {},
  "copyFrom": function () {},
  "copyTo": function () {},
  "inflate": function () {},
  "size": function () {},
  "resize": function () {},
  "clone": function () {},
  "contains": function () {},
  "containsRect": function () {},
  "equals": function () {},
  "intersection": function () {},
  "intersects": function () {},
  "intersectsRaw": function () {},
  "union": function () {},
  "random": function () {},
  "toString": function () {},
  "constructor": function () {}
};
Phaser.RoundedRectangle.prototype = {
  "clone": function () {},
  "contains": function () {},
  "constructor": function () {}
};
Phaser.Camera.prototype = {
  "preUpdate": function () {},
  "follow": function () {},
  "unfollow": function () {},
  "focusOn": function () {},
  "focusOnXY": function () {},
  "update": function () {},
  "updateTarget": function () {},
  "setBoundsToWorld": function () {},
  "checkBounds": function () {},
  "setPosition": function () {},
  "setSize": function () {},
  "reset": function () {},
  "constructor": function () {}
};
Phaser.Create.prototype = {
  "texture": function () {},
  "grid": function () {},
  "constructor": function () {}
};
Phaser.State.prototype = {
  "init": function () {},
  "preload": function () {},
  "loadUpdate": function () {},
  "loadRender": function () {},
  "create": function () {},
  "update": function () {},
  "preRender": function () {},
  "render": function () {},
  "resize": function () {},
  "paused": function () {},
  "resumed": function () {},
  "pauseUpdate": function () {},
  "shutdown": function () {},
  "constructor": function () {}
};
Phaser.StateManager.prototype = {
  "boot": function () {},
  "add": function () {},
  "remove": function () {},
  "start": function () {},
  "restart": function () {},
  "dummy": function () {},
  "preUpdate": function () {},
  "clearCurrentState": function () {},
  "checkState": function () {},
  "link": function () {},
  "unlink": function () {},
  "setCurrentState": function () {},
  "getCurrentState": function () {},
  "loadComplete": function () {},
  "pause": function () {},
  "resume": function () {},
  "update": function () {},
  "pauseUpdate": function () {},
  "preRender": function () {},
  "resize": function () {},
  "render": function () {},
  "destroy": function () {},
  "constructor": function () {}
};
Phaser.Signal.prototype = {
  "_bindings": function () {},
  "_prevParams": function () {},
  "memorize": function () {},
  "_shouldPropagate": function () {},
  "active": function () {},
  "_boundDispatch": function () {},
  "validateListener": function () {},
  "_registerListener": function () {},
  "_addBinding": function () {},
  "_indexOfListener": function () {},
  "has": function () {},
  "add": function () {},
  "addOnce": function () {},
  "remove": function () {},
  "removeAll": function () {},
  "getNumListeners": function () {},
  "halt": function () {},
  "dispatch": function () {},
  "forget": function () {},
  "dispose": function () {},
  "toString": function () {},
  "constructor": function () {}
};
Phaser.SignalBinding.prototype = {
  "context": function () {},
  "_isOnce": function () {},
  "_priority": function () {},
  "_args": function () {},
  "callCount": function () {},
  "active": function () {},
  "params": function () {},
  "execute": function () {},
  "detach": function () {},
  "isBound": function () {},
  "isOnce": function () {},
  "getListener": function () {},
  "getSignal": function () {},
  "_destroy": function () {},
  "toString": function () {},
  "constructor": function () {}
};
Phaser.Filter.prototype = {
  "init": function () {},
  "setResolution": function () {},
  "update": function () {},
  "destroy": function () {},
  "constructor": function () {}
};
Phaser.Plugin.prototype = {
  "preUpdate": function () {},
  "update": function () {},
  "render": function () {},
  "postRender": function () {},
  "destroy": function () {},
  "constructor": function () {}
};
Phaser.PluginManager.prototype = {
  "add": function () {},
  "remove": function () {},
  "removeAll": function () {},
  "preUpdate": function () {},
  "update": function () {},
  "postUpdate": function () {},
  "render": function () {},
  "postRender": function () {},
  "destroy": function () {},
  "constructor": function () {}
};
Phaser.Stage.prototype = {
  "constructor": function () {},
  "parseConfig": function () {},
  "boot": function () {},
  "preUpdate": function () {},
  "update": function () {},
  "postUpdate": function () {},
  "updateTransform": function () {},
  "checkVisibility": function () {},
  "visibilityChange": function () {},
  "setBackgroundColor": function () {},
  "destroy": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "displayObjectContainerUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "setStageReference": function () {},
  "removeStageReference": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "displayObjectUpdateTransform": function () {},
  "generateTexture": function () {},
  "updateCache": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "_renderCachedSprite": function () {},
  "_generateCachedSprite": function () {},
  "_destroyCachedSprite": function () {}
};
Phaser.Group.prototype = {
  "constructor": function () {},
  "add": function () {},
  "addToHash": function () {},
  "removeFromHash": function () {},
  "addMultiple": function () {},
  "addAt": function () {},
  "getAt": function () {},
  "create": function () {},
  "createMultiple": function () {},
  "updateZ": function () {},
  "resetCursor": function () {},
  "next": function () {},
  "previous": function () {},
  "swap": function () {},
  "bringToTop": function () {},
  "sendToBack": function () {},
  "moveUp": function () {},
  "moveDown": function () {},
  "xy": function () {},
  "reverse": function () {},
  "getIndex": function () {},
  "replace": function () {},
  "hasProperty": function () {},
  "setProperty": function () {},
  "checkProperty": function () {},
  "set": function () {},
  "setAll": function () {},
  "setAllChildren": function () {},
  "checkAll": function () {},
  "addAll": function () {},
  "subAll": function () {},
  "multiplyAll": function () {},
  "divideAll": function () {},
  "callAllExists": function () {},
  "callbackFromArray": function () {},
  "callAll": function () {},
  "preUpdate": function () {},
  "update": function () {},
  "postUpdate": function () {},
  "filter": function () {},
  "forEach": function () {},
  "forEachExists": function () {},
  "forEachAlive": function () {},
  "forEachDead": function () {},
  "sort": function () {},
  "customSort": function () {},
  "ascendingSortHandler": function () {},
  "descendingSortHandler": function () {},
  "iterate": function () {},
  "getFirstExists": function () {},
  "getFirstAlive": function () {},
  "getFirstDead": function () {},
  "getTop": function () {},
  "getBottom": function () {},
  "countLiving": function () {},
  "countDead": function () {},
  "getRandom": function () {},
  "remove": function () {},
  "moveAll": function () {},
  "removeAll": function () {},
  "removeBetween": function () {},
  "destroy": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "displayObjectContainerUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "setStageReference": function () {},
  "removeStageReference": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "displayObjectUpdateTransform": function () {},
  "generateTexture": function () {},
  "updateCache": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "_renderCachedSprite": function () {},
  "_generateCachedSprite": function () {},
  "_destroyCachedSprite": function () {}
};
Phaser.World.prototype = {
  "constructor": function () {},
  "boot": function () {},
  "stateChange": function () {},
  "setBounds": function () {},
  "resize": function () {},
  "shutdown": function () {},
  "wrap": function () {},
  "add": function () {},
  "addToHash": function () {},
  "removeFromHash": function () {},
  "addMultiple": function () {},
  "addAt": function () {},
  "getAt": function () {},
  "create": function () {},
  "createMultiple": function () {},
  "updateZ": function () {},
  "resetCursor": function () {},
  "next": function () {},
  "previous": function () {},
  "swap": function () {},
  "bringToTop": function () {},
  "sendToBack": function () {},
  "moveUp": function () {},
  "moveDown": function () {},
  "xy": function () {},
  "reverse": function () {},
  "getIndex": function () {},
  "replace": function () {},
  "hasProperty": function () {},
  "setProperty": function () {},
  "checkProperty": function () {},
  "set": function () {},
  "setAll": function () {},
  "setAllChildren": function () {},
  "checkAll": function () {},
  "addAll": function () {},
  "subAll": function () {},
  "multiplyAll": function () {},
  "divideAll": function () {},
  "callAllExists": function () {},
  "callbackFromArray": function () {},
  "callAll": function () {},
  "preUpdate": function () {},
  "update": function () {},
  "postUpdate": function () {},
  "filter": function () {},
  "forEach": function () {},
  "forEachExists": function () {},
  "forEachAlive": function () {},
  "forEachDead": function () {},
  "sort": function () {},
  "customSort": function () {},
  "ascendingSortHandler": function () {},
  "descendingSortHandler": function () {},
  "iterate": function () {},
  "getFirstExists": function () {},
  "getFirstAlive": function () {},
  "getFirstDead": function () {},
  "getTop": function () {},
  "getBottom": function () {},
  "countLiving": function () {},
  "countDead": function () {},
  "getRandom": function () {},
  "remove": function () {},
  "moveAll": function () {},
  "removeAll": function () {},
  "removeBetween": function () {},
  "destroy": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "displayObjectContainerUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "setStageReference": function () {},
  "removeStageReference": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "displayObjectUpdateTransform": function () {},
  "generateTexture": function () {},
  "updateCache": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "_renderCachedSprite": function () {},
  "_generateCachedSprite": function () {},
  "_destroyCachedSprite": function () {}
};
Phaser.FlexGrid.prototype = {
  "setSize": function () {},
  "createCustomLayer": function () {},
  "createFluidLayer": function () {},
  "createFullLayer": function () {},
  "createFixedLayer": function () {},
  "reset": function () {},
  "onResize": function () {},
  "refresh": function () {},
  "fitSprite": function () {},
  "debug": function () {},
  "constructor": function () {}
};
Phaser.FlexLayer.prototype = {
  "constructor": function () {},
  "resize": function () {},
  "debug": function () {},
  "add": function () {},
  "addToHash": function () {},
  "removeFromHash": function () {},
  "addMultiple": function () {},
  "addAt": function () {},
  "getAt": function () {},
  "create": function () {},
  "createMultiple": function () {},
  "updateZ": function () {},
  "resetCursor": function () {},
  "next": function () {},
  "previous": function () {},
  "swap": function () {},
  "bringToTop": function () {},
  "sendToBack": function () {},
  "moveUp": function () {},
  "moveDown": function () {},
  "xy": function () {},
  "reverse": function () {},
  "getIndex": function () {},
  "replace": function () {},
  "hasProperty": function () {},
  "setProperty": function () {},
  "checkProperty": function () {},
  "set": function () {},
  "setAll": function () {},
  "setAllChildren": function () {},
  "checkAll": function () {},
  "addAll": function () {},
  "subAll": function () {},
  "multiplyAll": function () {},
  "divideAll": function () {},
  "callAllExists": function () {},
  "callbackFromArray": function () {},
  "callAll": function () {},
  "preUpdate": function () {},
  "update": function () {},
  "postUpdate": function () {},
  "filter": function () {},
  "forEach": function () {},
  "forEachExists": function () {},
  "forEachAlive": function () {},
  "forEachDead": function () {},
  "sort": function () {},
  "customSort": function () {},
  "ascendingSortHandler": function () {},
  "descendingSortHandler": function () {},
  "iterate": function () {},
  "getFirstExists": function () {},
  "getFirstAlive": function () {},
  "getFirstDead": function () {},
  "getTop": function () {},
  "getBottom": function () {},
  "countLiving": function () {},
  "countDead": function () {},
  "getRandom": function () {},
  "remove": function () {},
  "moveAll": function () {},
  "removeAll": function () {},
  "removeBetween": function () {},
  "destroy": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "displayObjectContainerUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "setStageReference": function () {},
  "removeStageReference": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "displayObjectUpdateTransform": function () {},
  "generateTexture": function () {},
  "updateCache": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "_renderCachedSprite": function () {},
  "_generateCachedSprite": function () {},
  "_destroyCachedSprite": function () {}
};
Phaser.ScaleManager.prototype = {
  "boot": function () {},
  "parseConfig": function () {},
  "setupScale": function () {},
  "_gameResumed": function () {},
  "setGameSize": function () {},
  "setUserScale": function () {},
  "setResizeCallback": function () {},
  "signalSizeChange": function () {},
  "setMinMax": function () {},
  "preUpdate": function () {},
  "pauseUpdate": function () {},
  "updateDimensions": function () {},
  "updateScalingAndBounds": function () {},
  "forceOrientation": function () {},
  "classifyOrientation": function () {},
  "updateOrientationState": function () {},
  "orientationChange": function () {},
  "windowResize": function () {},
  "scrollTop": function () {},
  "refresh": function () {},
  "updateLayout": function () {},
  "getParentBounds": function () {},
  "alignCanvas": function () {},
  "reflowGame": function () {},
  "reflowCanvas": function () {},
  "resetCanvas": function () {},
  "queueUpdate": function () {},
  "reset": function () {},
  "setMaximum": function () {},
  "setShowAll": function () {},
  "setExactFit": function () {},
  "createFullScreenTarget": function () {},
  "startFullScreen": function () {},
  "stopFullScreen": function () {},
  "cleanupCreatedTarget": function () {},
  "prepScreenMode": function () {},
  "fullScreenChange": function () {},
  "fullScreenError": function () {},
  "scaleSprite": function () {},
  "destroy": function () {},
  "constructor": function () {}
};
Phaser.Game.prototype = {
  "parseConfig": function () {},
  "boot": function () {},
  "showDebugHeader": function () {},
  "setUpRenderer": function () {},
  "contextLost": function () {},
  "contextRestored": function () {},
  "update": function () {},
  "updateLogic": function () {},
  "updateRender": function () {},
  "enableStep": function () {},
  "disableStep": function () {},
  "step": function () {},
  "destroy": function () {},
  "gamePaused": function () {},
  "gameResumed": function () {},
  "focusLoss": function () {},
  "focusGain": function () {},
  "constructor": function () {}
};
Phaser.Input.prototype = {
  "boot": function () {},
  "destroy": function () {},
  "addMoveCallback": function () {},
  "deleteMoveCallback": function () {},
  "addPointer": function () {},
  "update": function () {},
  "reset": function () {},
  "resetSpeed": function () {},
  "startPointer": function () {},
  "updatePointer": function () {},
  "stopPointer": function () {},
  "countActivePointers": function () {},
  "getPointer": function () {},
  "getPointerFromIdentifier": function () {},
  "getPointerFromId": function () {},
  "getLocalPosition": function () {},
  "hitTest": function () {},
  "onClickTrampoline": function () {},
  "constructor": function () {}
};
Phaser.Mouse.prototype = {
  "start": function () {},
  "onMouseDown": function () {},
  "onMouseMove": function () {},
  "onMouseUp": function () {},
  "onMouseUpGlobal": function () {},
  "onMouseOut": function () {},
  "onMouseWheel": function () {},
  "onMouseOver": function () {},
  "requestPointerLock": function () {},
  "pointerLockChange": function () {},
  "releasePointerLock": function () {},
  "stop": function () {},
  "constructor": function () {}
};
Phaser.MSPointer.prototype = {
  "start": function () {},
  "onPointerDown": function () {},
  "onPointerMove": function () {},
  "onPointerUp": function () {},
  "stop": function () {},
  "constructor": function () {}
};
Phaser.DeviceButton.prototype = {
  "start": function () {},
  "stop": function () {},
  "padFloat": function () {},
  "justPressed": function () {},
  "justReleased": function () {},
  "reset": function () {},
  "destroy": function () {},
  "constructor": function () {}
};
Phaser.Pointer.prototype = {
  "resetButtons": function () {},
  "processButtonsDown": function () {},
  "processButtonsUp": function () {},
  "updateButtons": function () {},
  "start": function () {},
  "update": function () {},
  "move": function () {},
  "processInteractiveObjects": function () {},
  "leave": function () {},
  "stop": function () {},
  "justPressed": function () {},
  "justReleased": function () {},
  "addClickTrampoline": function () {},
  "processClickTrampolines": function () {},
  "reset": function () {},
  "resetMovement": function () {},
  "constructor": function () {}
};
Phaser.Touch.prototype = {
  "start": function () {},
  "consumeDocumentTouches": function () {},
  "addTouchLockCallback": function () {},
  "removeTouchLockCallback": function () {},
  "onTouchStart": function () {},
  "onTouchCancel": function () {},
  "onTouchEnter": function () {},
  "onTouchLeave": function () {},
  "onTouchMove": function () {},
  "onTouchEnd": function () {},
  "stop": function () {},
  "constructor": function () {}
};
Phaser.InputHandler.prototype = {
  "start": function () {},
  "addedToGroup": function () {},
  "removedFromGroup": function () {},
  "reset": function () {},
  "stop": function () {},
  "destroy": function () {},
  "validForInput": function () {},
  "isPixelPerfect": function () {},
  "pointerX": function () {},
  "pointerY": function () {},
  "pointerDown": function () {},
  "pointerUp": function () {},
  "pointerTimeDown": function () {},
  "pointerTimeUp": function () {},
  "pointerOver": function () {},
  "pointerOut": function () {},
  "pointerTimeOver": function () {},
  "pointerTimeOut": function () {},
  "pointerDragged": function () {},
  "checkPointerDown": function () {},
  "checkPointerOver": function () {},
  "checkPixel": function () {},
  "update": function () {},
  "_pointerOverHandler": function () {},
  "_pointerOutHandler": function () {},
  "_touchedHandler": function () {},
  "_releasedHandler": function () {},
  "updateDrag": function () {},
  "justOver": function () {},
  "justOut": function () {},
  "justPressed": function () {},
  "justReleased": function () {},
  "overDuration": function () {},
  "downDuration": function () {},
  "enableDrag": function () {},
  "disableDrag": function () {},
  "startDrag": function () {},
  "globalToLocalX": function () {},
  "globalToLocalY": function () {},
  "stopDrag": function () {},
  "setDragLock": function () {},
  "enableSnap": function () {},
  "disableSnap": function () {},
  "checkBoundsRect": function () {},
  "checkBoundsSprite": function () {},
  "constructor": function () {}
};
Phaser.Gamepad.prototype = {
  "addCallbacks": function () {},
  "start": function () {},
  "onGamepadConnected": function () {},
  "onGamepadDisconnected": function () {},
  "update": function () {},
  "_pollGamepads": function () {},
  "setDeadZones": function () {},
  "stop": function () {},
  "reset": function () {},
  "justPressed": function () {},
  "justReleased": function () {},
  "isDown": function () {},
  "destroy": function () {},
  "constructor": function () {}
};
Phaser.SinglePad.prototype = {
  "addCallbacks": function () {},
  "getButton": function () {},
  "pollStatus": function () {},
  "connect": function () {},
  "disconnect": function () {},
  "destroy": function () {},
  "processAxisChange": function () {},
  "processButtonDown": function () {},
  "processButtonUp": function () {},
  "processButtonFloat": function () {},
  "axis": function () {},
  "isDown": function () {},
  "isUp": function () {},
  "justReleased": function () {},
  "justPressed": function () {},
  "buttonValue": function () {},
  "reset": function () {},
  "constructor": function () {}
};
Phaser.Key.prototype = {
  "update": function () {},
  "processKeyDown": function () {},
  "processKeyUp": function () {},
  "reset": function () {},
  "downDuration": function () {},
  "upDuration": function () {},
  "constructor": function () {}
};
Phaser.Keyboard.prototype = {
  "addCallbacks": function () {},
  "addKey": function () {},
  "addKeys": function () {},
  "removeKey": function () {},
  "createCursorKeys": function () {},
  "start": function () {},
  "stop": function () {},
  "destroy": function () {},
  "addKeyCapture": function () {},
  "removeKeyCapture": function () {},
  "clearCaptures": function () {},
  "update": function () {},
  "processKeyDown": function () {},
  "processKeyPress": function () {},
  "processKeyUp": function () {},
  "reset": function () {},
  "downDuration": function () {},
  "upDuration": function () {},
  "isDown": function () {},
  "constructor": function () {}
};
Phaser.Component.Angle.prototype = {
  "angle": function () {}
};
Phaser.Component.Animation.prototype = {
  "play": function () {}
};
Phaser.Component.AutoCull.prototype = {
  "autoCull": function () {},
  "inCamera": function () {}
};
Phaser.Component.Bounds.prototype = {
  "offsetX": function () {},
  "offsetY": function () {},
  "left": function () {},
  "right": function () {},
  "top": function () {},
  "bottom": function () {}
};
Phaser.Component.BringToTop.prototype = {
  "bringToTop": function () {},
  "sendToBack": function () {},
  "moveUp": function () {},
  "moveDown": function () {}
};
Phaser.Component.Core.prototype = {
  "game": function () {},
  "name": function () {},
  "components": function () {},
  "z": function () {},
  "events": function () {},
  "animations": function () {},
  "key": function () {},
  "world": function () {},
  "debug": function () {},
  "previousPosition": function () {},
  "previousRotation": function () {},
  "renderOrderID": function () {},
  "fresh": function () {},
  "pendingDestroy": function () {},
  "_bounds": function () {},
  "_exists": function () {},
  "exists": function () {},
  "update": function () {},
  "postUpdate": function () {}
};
Phaser.Component.Crop.prototype = {
  "cropRect": function () {},
  "_crop": function () {},
  "crop": function () {},
  "updateCrop": function () {}
};
Phaser.Component.Delta.prototype = {
  "deltaX": function () {},
  "deltaY": function () {},
  "deltaZ": function () {}
};
Phaser.Component.Destroy.prototype = {
  "destroyPhase": function () {},
  "destroy": function () {}
};
Phaser.Component.FixedToCamera.prototype = {
  "_fixedToCamera": function () {},
  "fixedToCamera": function () {},
  "cameraOffset": function () {}
};
Phaser.Component.Health.prototype = {
  "health": function () {},
  "maxHealth": function () {},
  "damage": function () {},
  "heal": function () {}
};
Phaser.Component.InCamera.prototype = {
  "inCamera": function () {}
};
Phaser.Component.InputEnabled.prototype = {
  "input": function () {},
  "inputEnabled": function () {}
};
Phaser.Component.InWorld.prototype = {
  "checkWorldBounds": function () {},
  "outOfBoundsKill": function () {},
  "_outOfBoundsFired": function () {},
  "inWorld": function () {}
};
Phaser.Component.LifeSpan.prototype = {
  "alive": function () {},
  "lifespan": function () {},
  "revive": function () {},
  "kill": function () {}
};
Phaser.Component.LoadTexture.prototype = {
  "customRender": function () {},
  "_frame": function () {},
  "loadTexture": function () {},
  "setFrame": function () {},
  "resizeFrame": function () {},
  "resetFrame": function () {},
  "frame": function () {},
  "frameName": function () {}
};
Phaser.Component.Overlap.prototype = {
  "overlap": function () {}
};
Phaser.Component.PhysicsBody.prototype = {
  "body": function () {},
  "x": function () {},
  "y": function () {}
};
Phaser.Component.Reset.prototype = {
  "reset": function () {}
};
Phaser.Component.ScaleMinMax.prototype = {
  "transformCallback": function () {},
  "transformCallbackContext": function () {},
  "scaleMin": function () {},
  "scaleMax": function () {},
  "checkTransform": function () {},
  "setScaleMinMax": function () {}
};
Phaser.Component.Smoothed.prototype = {
  "smoothed": function () {}
};
Phaser.Events.prototype = {
  "destroy": function () {},
  "onAddedToGroup": function () {},
  "onRemovedFromGroup": function () {},
  "onRemovedFromWorld": function () {},
  "onDestroy": function () {},
  "onKilled": function () {},
  "onRevived": function () {},
  "onOutOfBounds": function () {},
  "onEnterBounds": function () {},
  "onInputOver": function () {},
  "onInputOut": function () {},
  "onInputDown": function () {},
  "onInputUp": function () {},
  "onDragStart": function () {},
  "onDragUpdate": function () {},
  "onDragStop": function () {},
  "onAnimationStart": function () {},
  "onAnimationComplete": function () {},
  "onAnimationLoop": function () {},
  "constructor": function () {},
  "onAddedToGroup$dispatch": function () {},
  "onRemovedFromGroup$dispatch": function () {},
  "onRemovedFromWorld$dispatch": function () {},
  "onDestroy$dispatch": function () {},
  "onKilled$dispatch": function () {},
  "onRevived$dispatch": function () {},
  "onOutOfBounds$dispatch": function () {},
  "onEnterBounds$dispatch": function () {},
  "onInputOver$dispatch": function () {},
  "onInputOut$dispatch": function () {},
  "onInputDown$dispatch": function () {},
  "onInputUp$dispatch": function () {},
  "onDragStart$dispatch": function () {},
  "onDragUpdate$dispatch": function () {},
  "onDragStop$dispatch": function () {},
  "onAnimationStart$dispatch": function () {},
  "onAnimationComplete$dispatch": function () {},
  "onAnimationLoop$dispatch": function () {}
};
Phaser.GameObjectFactory.prototype = {
  "existing": function () {},
  "image": function () {},
  "sprite": function () {},
  "creature": function () {},
  "tween": function () {},
  "group": function () {},
  "physicsGroup": function () {},
  "spriteBatch": function () {},
  "audio": function () {},
  "sound": function () {},
  "audioSprite": function () {},
  "tileSprite": function () {},
  "rope": function () {},
  "text": function () {},
  "button": function () {},
  "graphics": function () {},
  "emitter": function () {},
  "retroFont": function () {},
  "bitmapText": function () {},
  "tilemap": function () {},
  "renderTexture": function () {},
  "video": function () {},
  "bitmapData": function () {},
  "filter": function () {},
  "plugin": function () {},
  "constructor": function () {}
};
Phaser.GameObjectCreator.prototype = {
  "image": function () {},
  "sprite": function () {},
  "tween": function () {},
  "group": function () {},
  "spriteBatch": function () {},
  "audio": function () {},
  "audioSprite": function () {},
  "sound": function () {},
  "tileSprite": function () {},
  "rope": function () {},
  "text": function () {},
  "button": function () {},
  "graphics": function () {},
  "emitter": function () {},
  "retroFont": function () {},
  "bitmapText": function () {},
  "tilemap": function () {},
  "renderTexture": function () {},
  "bitmapData": function () {},
  "filter": function () {},
  "constructor": function () {}
};
Phaser.Sprite.prototype = {
  "constructor": function () {},
  "game": function () {},
  "name": function () {},
  "components": function () {},
  "z": function () {},
  "events": function () {},
  "animations": function () {},
  "key": function () {},
  "world": function () {},
  "debug": function () {},
  "previousPosition": function () {},
  "previousRotation": function () {},
  "renderOrderID": function () {},
  "fresh": function () {},
  "pendingDestroy": function () {},
  "_bounds": function () {},
  "_exists": function () {},
  "update": function () {},
  "postUpdate": function () {},
  "play": function () {},
  "autoCull": function () {},
  "bringToTop": function () {},
  "sendToBack": function () {},
  "moveUp": function () {},
  "moveDown": function () {},
  "cropRect": function () {},
  "_crop": function () {},
  "crop": function () {},
  "updateCrop": function () {},
  "destroyPhase": function () {},
  "destroy": function () {},
  "_fixedToCamera": function () {},
  "cameraOffset": function () {},
  "health": function () {},
  "maxHealth": function () {},
  "damage": function () {},
  "heal": function () {},
  "input": function () {},
  "checkWorldBounds": function () {},
  "outOfBoundsKill": function () {},
  "_outOfBoundsFired": function () {},
  "alive": function () {},
  "lifespan": function () {},
  "revive": function () {},
  "kill": function () {},
  "customRender": function () {},
  "_frame": function () {},
  "loadTexture": function () {},
  "setFrame": function () {},
  "resizeFrame": function () {},
  "resetFrame": function () {},
  "overlap": function () {},
  "body": function () {},
  "reset": function () {},
  "transformCallback": function () {},
  "transformCallbackContext": function () {},
  "scaleMin": function () {},
  "scaleMax": function () {},
  "checkTransform": function () {},
  "setScaleMinMax": function () {},
  "preUpdatePhysics": function () {},
  "preUpdateLifeSpan": function () {},
  "preUpdateInWorld": function () {},
  "preUpdateCore": function () {},
  "preUpdate": function () {},
  "setTexture": function () {},
  "onTextureUpdate": function () {},
  "getBounds": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "displayObjectContainerUpdateTransform": function () {},
  "getLocalBounds": function () {},
  "setStageReference": function () {},
  "removeStageReference": function () {},
  "displayObjectUpdateTransform": function () {},
  "generateTexture": function () {},
  "updateCache": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "_renderCachedSprite": function () {},
  "_generateCachedSprite": function () {},
  "_destroyCachedSprite": function () {}
};
Phaser.Image.prototype = {
  "constructor": function () {},
  "game": function () {},
  "name": function () {},
  "components": function () {},
  "z": function () {},
  "events": function () {},
  "animations": function () {},
  "key": function () {},
  "world": function () {},
  "debug": function () {},
  "previousPosition": function () {},
  "previousRotation": function () {},
  "renderOrderID": function () {},
  "fresh": function () {},
  "pendingDestroy": function () {},
  "_bounds": function () {},
  "_exists": function () {},
  "update": function () {},
  "postUpdate": function () {},
  "play": function () {},
  "autoCull": function () {},
  "bringToTop": function () {},
  "sendToBack": function () {},
  "moveUp": function () {},
  "moveDown": function () {},
  "cropRect": function () {},
  "_crop": function () {},
  "crop": function () {},
  "updateCrop": function () {},
  "destroyPhase": function () {},
  "destroy": function () {},
  "_fixedToCamera": function () {},
  "cameraOffset": function () {},
  "input": function () {},
  "alive": function () {},
  "lifespan": function () {},
  "revive": function () {},
  "kill": function () {},
  "customRender": function () {},
  "_frame": function () {},
  "loadTexture": function () {},
  "setFrame": function () {},
  "resizeFrame": function () {},
  "resetFrame": function () {},
  "overlap": function () {},
  "reset": function () {},
  "preUpdateInWorld": function () {},
  "preUpdateCore": function () {},
  "preUpdate": function () {},
  "setTexture": function () {},
  "onTextureUpdate": function () {},
  "getBounds": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "displayObjectContainerUpdateTransform": function () {},
  "getLocalBounds": function () {},
  "setStageReference": function () {},
  "removeStageReference": function () {},
  "displayObjectUpdateTransform": function () {},
  "generateTexture": function () {},
  "updateCache": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "_renderCachedSprite": function () {},
  "_generateCachedSprite": function () {},
  "_destroyCachedSprite": function () {}
};
Phaser.TileSprite.prototype = {
  "constructor": function () {},
  "game": function () {},
  "name": function () {},
  "components": function () {},
  "z": function () {},
  "events": function () {},
  "animations": function () {},
  "key": function () {},
  "world": function () {},
  "debug": function () {},
  "previousPosition": function () {},
  "previousRotation": function () {},
  "renderOrderID": function () {},
  "fresh": function () {},
  "pendingDestroy": function () {},
  "_bounds": function () {},
  "_exists": function () {},
  "update": function () {},
  "postUpdate": function () {},
  "play": function () {},
  "autoCull": function () {},
  "bringToTop": function () {},
  "sendToBack": function () {},
  "moveUp": function () {},
  "moveDown": function () {},
  "destroyPhase": function () {},
  "destroy": function () {},
  "_fixedToCamera": function () {},
  "cameraOffset": function () {},
  "health": function () {},
  "maxHealth": function () {},
  "damage": function () {},
  "heal": function () {},
  "input": function () {},
  "checkWorldBounds": function () {},
  "outOfBoundsKill": function () {},
  "_outOfBoundsFired": function () {},
  "alive": function () {},
  "lifespan": function () {},
  "revive": function () {},
  "kill": function () {},
  "customRender": function () {},
  "_frame": function () {},
  "loadTexture": function () {},
  "setFrame": function () {},
  "resizeFrame": function () {},
  "resetFrame": function () {},
  "overlap": function () {},
  "body": function () {},
  "reset": function () {},
  "preUpdatePhysics": function () {},
  "preUpdateLifeSpan": function () {},
  "preUpdateInWorld": function () {},
  "preUpdateCore": function () {},
  "preUpdate": function () {},
  "autoScroll": function () {},
  "stopScroll": function () {},
  "setTexture": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "onTextureUpdate": function () {},
  "generateTilingTexture": function () {},
  "getBounds": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "displayObjectContainerUpdateTransform": function () {},
  "getLocalBounds": function () {},
  "setStageReference": function () {},
  "removeStageReference": function () {},
  "displayObjectUpdateTransform": function () {},
  "generateTexture": function () {},
  "updateCache": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "_renderCachedSprite": function () {},
  "_generateCachedSprite": function () {},
  "_destroyCachedSprite": function () {}
};
Phaser.Rope.prototype = {
  "constructor": function () {},
  "game": function () {},
  "name": function () {},
  "components": function () {},
  "z": function () {},
  "events": function () {},
  "animations": function () {},
  "key": function () {},
  "world": function () {},
  "debug": function () {},
  "previousPosition": function () {},
  "previousRotation": function () {},
  "renderOrderID": function () {},
  "fresh": function () {},
  "pendingDestroy": function () {},
  "_bounds": function () {},
  "_exists": function () {},
  "update": function () {},
  "postUpdate": function () {},
  "play": function () {},
  "autoCull": function () {},
  "bringToTop": function () {},
  "sendToBack": function () {},
  "moveUp": function () {},
  "moveDown": function () {},
  "cropRect": function () {},
  "_crop": function () {},
  "crop": function () {},
  "updateCrop": function () {},
  "destroyPhase": function () {},
  "destroy": function () {},
  "_fixedToCamera": function () {},
  "cameraOffset": function () {},
  "input": function () {},
  "checkWorldBounds": function () {},
  "outOfBoundsKill": function () {},
  "_outOfBoundsFired": function () {},
  "alive": function () {},
  "lifespan": function () {},
  "revive": function () {},
  "kill": function () {},
  "customRender": function () {},
  "_frame": function () {},
  "loadTexture": function () {},
  "setFrame": function () {},
  "resizeFrame": function () {},
  "resetFrame": function () {},
  "overlap": function () {},
  "body": function () {},
  "reset": function () {},
  "transformCallback": function () {},
  "transformCallbackContext": function () {},
  "scaleMin": function () {},
  "scaleMax": function () {},
  "checkTransform": function () {},
  "setScaleMinMax": function () {},
  "preUpdatePhysics": function () {},
  "preUpdateLifeSpan": function () {},
  "preUpdateInWorld": function () {},
  "preUpdateCore": function () {},
  "preUpdate": function () {},
  "refresh": function () {},
  "updateTransform": function () {},
  "setTexture": function () {},
  "_renderWebGL": function () {},
  "_initWebGL": function () {},
  "_renderStrip": function () {},
  "_renderCanvas": function () {},
  "_renderCanvasTriangleStrip": function () {},
  "_renderCanvasTriangles": function () {},
  "_renderCanvasDrawTriangle": function () {},
  "renderStripFlat": function () {},
  "onTextureUpdate": function () {},
  "getBounds": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "displayObjectContainerUpdateTransform": function () {},
  "getLocalBounds": function () {},
  "setStageReference": function () {},
  "removeStageReference": function () {},
  "displayObjectUpdateTransform": function () {},
  "generateTexture": function () {},
  "updateCache": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "_renderCachedSprite": function () {},
  "_generateCachedSprite": function () {},
  "_destroyCachedSprite": function () {}
};
Phaser.Button.prototype = {
  "constructor": function () {},
  "clearFrames": function () {},
  "removedFromWorld": function () {},
  "setStateFrame": function () {},
  "changeStateFrame": function () {},
  "setFrames": function () {},
  "setStateSound": function () {},
  "playStateSound": function () {},
  "setSounds": function () {},
  "setOverSound": function () {},
  "setOutSound": function () {},
  "setDownSound": function () {},
  "setUpSound": function () {},
  "onInputOverHandler": function () {},
  "onInputOutHandler": function () {},
  "onInputDownHandler": function () {},
  "onInputUpHandler": function () {},
  "game": function () {},
  "name": function () {},
  "components": function () {},
  "z": function () {},
  "events": function () {},
  "animations": function () {},
  "key": function () {},
  "world": function () {},
  "debug": function () {},
  "previousPosition": function () {},
  "previousRotation": function () {},
  "renderOrderID": function () {},
  "fresh": function () {},
  "pendingDestroy": function () {},
  "_bounds": function () {},
  "_exists": function () {},
  "update": function () {},
  "postUpdate": function () {},
  "play": function () {},
  "autoCull": function () {},
  "bringToTop": function () {},
  "sendToBack": function () {},
  "moveUp": function () {},
  "moveDown": function () {},
  "cropRect": function () {},
  "_crop": function () {},
  "crop": function () {},
  "updateCrop": function () {},
  "destroyPhase": function () {},
  "destroy": function () {},
  "_fixedToCamera": function () {},
  "cameraOffset": function () {},
  "input": function () {},
  "alive": function () {},
  "lifespan": function () {},
  "revive": function () {},
  "kill": function () {},
  "customRender": function () {},
  "_frame": function () {},
  "loadTexture": function () {},
  "setFrame": function () {},
  "resizeFrame": function () {},
  "resetFrame": function () {},
  "overlap": function () {},
  "reset": function () {},
  "preUpdateInWorld": function () {},
  "preUpdateCore": function () {},
  "preUpdate": function () {},
  "setTexture": function () {},
  "onTextureUpdate": function () {},
  "getBounds": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "displayObjectContainerUpdateTransform": function () {},
  "getLocalBounds": function () {},
  "setStageReference": function () {},
  "removeStageReference": function () {},
  "displayObjectUpdateTransform": function () {},
  "generateTexture": function () {},
  "updateCache": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "_renderCachedSprite": function () {},
  "_generateCachedSprite": function () {},
  "_destroyCachedSprite": function () {}
};
Phaser.SpriteBatch.prototype = {
  "add": function () {},
  "addToHash": function () {},
  "removeFromHash": function () {},
  "addMultiple": function () {},
  "addAt": function () {},
  "getAt": function () {},
  "create": function () {},
  "createMultiple": function () {},
  "updateZ": function () {},
  "resetCursor": function () {},
  "next": function () {},
  "previous": function () {},
  "swap": function () {},
  "bringToTop": function () {},
  "sendToBack": function () {},
  "moveUp": function () {},
  "moveDown": function () {},
  "xy": function () {},
  "reverse": function () {},
  "getIndex": function () {},
  "replace": function () {},
  "hasProperty": function () {},
  "setProperty": function () {},
  "checkProperty": function () {},
  "set": function () {},
  "setAll": function () {},
  "setAllChildren": function () {},
  "checkAll": function () {},
  "addAll": function () {},
  "subAll": function () {},
  "multiplyAll": function () {},
  "divideAll": function () {},
  "callAllExists": function () {},
  "callbackFromArray": function () {},
  "callAll": function () {},
  "preUpdate": function () {},
  "update": function () {},
  "postUpdate": function () {},
  "filter": function () {},
  "forEach": function () {},
  "forEachExists": function () {},
  "forEachAlive": function () {},
  "forEachDead": function () {},
  "sort": function () {},
  "customSort": function () {},
  "ascendingSortHandler": function () {},
  "descendingSortHandler": function () {},
  "iterate": function () {},
  "getFirstExists": function () {},
  "getFirstAlive": function () {},
  "getFirstDead": function () {},
  "getTop": function () {},
  "getBottom": function () {},
  "countLiving": function () {},
  "countDead": function () {},
  "getRandom": function () {},
  "remove": function () {},
  "moveAll": function () {},
  "removeAll": function () {},
  "removeBetween": function () {},
  "destroy": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "displayObjectContainerUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "setStageReference": function () {},
  "removeStageReference": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "displayObjectUpdateTransform": function () {},
  "generateTexture": function () {},
  "updateCache": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "_renderCachedSprite": function () {},
  "_generateCachedSprite": function () {},
  "_destroyCachedSprite": function () {},
  "initWebGL": function () {}
};
Phaser.Particle.prototype = {
  "constructor": function () {},
  "update": function () {},
  "onEmit": function () {},
  "setAlphaData": function () {},
  "setScaleData": function () {},
  "reset": function () {},
  "game": function () {},
  "name": function () {},
  "components": function () {},
  "z": function () {},
  "events": function () {},
  "animations": function () {},
  "key": function () {},
  "world": function () {},
  "debug": function () {},
  "previousPosition": function () {},
  "previousRotation": function () {},
  "renderOrderID": function () {},
  "fresh": function () {},
  "pendingDestroy": function () {},
  "_bounds": function () {},
  "_exists": function () {},
  "postUpdate": function () {},
  "play": function () {},
  "autoCull": function () {},
  "bringToTop": function () {},
  "sendToBack": function () {},
  "moveUp": function () {},
  "moveDown": function () {},
  "cropRect": function () {},
  "_crop": function () {},
  "crop": function () {},
  "updateCrop": function () {},
  "destroyPhase": function () {},
  "destroy": function () {},
  "_fixedToCamera": function () {},
  "cameraOffset": function () {},
  "health": function () {},
  "maxHealth": function () {},
  "damage": function () {},
  "heal": function () {},
  "input": function () {},
  "checkWorldBounds": function () {},
  "outOfBoundsKill": function () {},
  "_outOfBoundsFired": function () {},
  "alive": function () {},
  "lifespan": function () {},
  "revive": function () {},
  "kill": function () {},
  "customRender": function () {},
  "_frame": function () {},
  "loadTexture": function () {},
  "setFrame": function () {},
  "resizeFrame": function () {},
  "resetFrame": function () {},
  "overlap": function () {},
  "body": function () {},
  "transformCallback": function () {},
  "transformCallbackContext": function () {},
  "scaleMin": function () {},
  "scaleMax": function () {},
  "checkTransform": function () {},
  "setScaleMinMax": function () {},
  "preUpdatePhysics": function () {},
  "preUpdateLifeSpan": function () {},
  "preUpdateInWorld": function () {},
  "preUpdateCore": function () {},
  "preUpdate": function () {},
  "setTexture": function () {},
  "onTextureUpdate": function () {},
  "getBounds": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "displayObjectContainerUpdateTransform": function () {},
  "getLocalBounds": function () {},
  "setStageReference": function () {},
  "removeStageReference": function () {},
  "displayObjectUpdateTransform": function () {},
  "generateTexture": function () {},
  "updateCache": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "_renderCachedSprite": function () {},
  "_generateCachedSprite": function () {},
  "_destroyCachedSprite": function () {}
};
Phaser.BitmapData.prototype = {
  "move": function () {},
  "moveH": function () {},
  "moveV": function () {},
  "add": function () {},
  "load": function () {},
  "clear": function () {},
  "fill": function () {},
  "generateTexture": function () {},
  "resize": function () {},
  "update": function () {},
  "processPixelRGB": function () {},
  "processPixel": function () {},
  "replaceRGB": function () {},
  "setHSL": function () {},
  "shiftHSL": function () {},
  "setPixel32": function () {},
  "setPixel": function () {},
  "getPixel": function () {},
  "getPixel32": function () {},
  "getPixelRGB": function () {},
  "getPixels": function () {},
  "getFirstPixel": function () {},
  "getBounds": function () {},
  "addToWorld": function () {},
  "copy": function () {},
  "copyRect": function () {},
  "draw": function () {},
  "drawGroup": function () {},
  "shadow": function () {},
  "alphaMask": function () {},
  "extract": function () {},
  "rect": function () {},
  "text": function () {},
  "circle": function () {},
  "textureLine": function () {},
  "render": function () {},
  "blendReset": function () {},
  "blendSourceOver": function () {},
  "blendSourceIn": function () {},
  "blendSourceOut": function () {},
  "blendSourceAtop": function () {},
  "blendDestinationOver": function () {},
  "blendDestinationIn": function () {},
  "blendDestinationOut": function () {},
  "blendDestinationAtop": function () {},
  "blendXor": function () {},
  "blendAdd": function () {},
  "blendMultiply": function () {},
  "blendScreen": function () {},
  "blendOverlay": function () {},
  "blendDarken": function () {},
  "blendLighten": function () {},
  "blendColorDodge": function () {},
  "blendColorBurn": function () {},
  "blendHardLight": function () {},
  "blendSoftLight": function () {},
  "blendDifference": function () {},
  "blendExclusion": function () {},
  "blendHue": function () {},
  "blendSaturation": function () {},
  "blendColor": function () {},
  "blendLuminosity": function () {},
  "constructor": function () {}
};
Phaser.Graphics.prototype = {
  "constructor": function () {},
  "game": function () {},
  "name": function () {},
  "components": function () {},
  "z": function () {},
  "events": function () {},
  "animations": function () {},
  "key": function () {},
  "world": function () {},
  "debug": function () {},
  "previousPosition": function () {},
  "previousRotation": function () {},
  "renderOrderID": function () {},
  "fresh": function () {},
  "pendingDestroy": function () {},
  "_bounds": function () {},
  "_exists": function () {},
  "update": function () {},
  "postUpdate": function () {},
  "autoCull": function () {},
  "destroyPhase": function () {},
  "destroy": function () {},
  "_fixedToCamera": function () {},
  "cameraOffset": function () {},
  "input": function () {},
  "checkWorldBounds": function () {},
  "outOfBoundsKill": function () {},
  "_outOfBoundsFired": function () {},
  "alive": function () {},
  "lifespan": function () {},
  "revive": function () {},
  "kill": function () {},
  "body": function () {},
  "reset": function () {},
  "preUpdatePhysics": function () {},
  "preUpdateLifeSpan": function () {},
  "preUpdateInWorld": function () {},
  "preUpdateCore": function () {},
  "preUpdate": function () {},
  "drawTriangle": function () {},
  "drawTriangles": function () {},
  "lineStyle": function () {},
  "moveTo": function () {},
  "lineTo": function () {},
  "quadraticCurveTo": function () {},
  "bezierCurveTo": function () {},
  "arcTo": function () {},
  "arc": function () {},
  "beginFill": function () {},
  "endFill": function () {},
  "drawRect": function () {},
  "drawRoundedRect": function () {},
  "drawCircle": function () {},
  "drawEllipse": function () {},
  "drawPolygon": function () {},
  "clear": function () {},
  "generateTexture": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "getBounds": function () {},
  "containsPoint": function () {},
  "updateLocalBounds": function () {},
  "_generateCachedSprite": function () {},
  "updateCachedSpriteTexture": function () {},
  "destroyCachedSprite": function () {},
  "drawShape": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "displayObjectContainerUpdateTransform": function () {},
  "getLocalBounds": function () {},
  "setStageReference": function () {},
  "removeStageReference": function () {},
  "displayObjectUpdateTransform": function () {},
  "updateCache": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "_renderCachedSprite": function () {},
  "_destroyCachedSprite": function () {}
};
Phaser.RenderTexture.prototype = {
  "constructor": function () {},
  "renderXY": function () {},
  "renderRawXY": function () {},
  "render": function () {},
  "resize": function () {},
  "clear": function () {},
  "renderWebGL": function () {},
  "renderCanvas": function () {},
  "getImage": function () {},
  "getBase64": function () {},
  "getCanvas": function () {},
  "onBaseTextureLoaded": function () {},
  "destroy": function () {},
  "setFrame": function () {},
  "_updateUvs": function () {}
};
Phaser.Text.prototype = {
  "constructor": function () {},
  "preUpdate": function () {},
  "update": function () {},
  "destroy": function () {},
  "setShadow": function () {},
  "setStyle": function () {},
  "updateText": function () {},
  "renderTabLine": function () {},
  "updateShadow": function () {},
  "updateLine": function () {},
  "clearColors": function () {},
  "addColor": function () {},
  "addStrokeColor": function () {},
  "runWordWrap": function () {},
  "updateFont": function () {},
  "fontToComponents": function () {},
  "componentsToFont": function () {},
  "setText": function () {},
  "parseList": function () {},
  "setTextBounds": function () {},
  "updateTexture": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "determineFontProperties": function () {},
  "getBounds": function () {},
  "game": function () {},
  "name": function () {},
  "components": function () {},
  "z": function () {},
  "events": function () {},
  "animations": function () {},
  "key": function () {},
  "world": function () {},
  "debug": function () {},
  "previousPosition": function () {},
  "previousRotation": function () {},
  "renderOrderID": function () {},
  "fresh": function () {},
  "pendingDestroy": function () {},
  "_bounds": function () {},
  "_exists": function () {},
  "postUpdate": function () {},
  "play": function () {},
  "autoCull": function () {},
  "bringToTop": function () {},
  "sendToBack": function () {},
  "moveUp": function () {},
  "moveDown": function () {},
  "cropRect": function () {},
  "_crop": function () {},
  "crop": function () {},
  "updateCrop": function () {},
  "destroyPhase": function () {},
  "_fixedToCamera": function () {},
  "cameraOffset": function () {},
  "health": function () {},
  "maxHealth": function () {},
  "damage": function () {},
  "heal": function () {},
  "input": function () {},
  "checkWorldBounds": function () {},
  "outOfBoundsKill": function () {},
  "_outOfBoundsFired": function () {},
  "alive": function () {},
  "lifespan": function () {},
  "revive": function () {},
  "kill": function () {},
  "customRender": function () {},
  "_frame": function () {},
  "loadTexture": function () {},
  "setFrame": function () {},
  "resizeFrame": function () {},
  "resetFrame": function () {},
  "overlap": function () {},
  "body": function () {},
  "reset": function () {},
  "transformCallback": function () {},
  "transformCallbackContext": function () {},
  "scaleMin": function () {},
  "scaleMax": function () {},
  "checkTransform": function () {},
  "setScaleMinMax": function () {},
  "preUpdatePhysics": function () {},
  "preUpdateLifeSpan": function () {},
  "preUpdateInWorld": function () {},
  "preUpdateCore": function () {},
  "setTexture": function () {},
  "onTextureUpdate": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "displayObjectContainerUpdateTransform": function () {},
  "getLocalBounds": function () {},
  "setStageReference": function () {},
  "removeStageReference": function () {},
  "displayObjectUpdateTransform": function () {},
  "generateTexture": function () {},
  "updateCache": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "_renderCachedSprite": function () {},
  "_generateCachedSprite": function () {},
  "_destroyCachedSprite": function () {}
};
Phaser.BitmapText.prototype = {
  "constructor": function () {},
  "game": function () {},
  "name": function () {},
  "components": function () {},
  "z": function () {},
  "events": function () {},
  "animations": function () {},
  "key": function () {},
  "world": function () {},
  "debug": function () {},
  "previousPosition": function () {},
  "previousRotation": function () {},
  "renderOrderID": function () {},
  "fresh": function () {},
  "pendingDestroy": function () {},
  "_bounds": function () {},
  "_exists": function () {},
  "update": function () {},
  "postUpdate": function () {},
  "autoCull": function () {},
  "destroyPhase": function () {},
  "destroy": function () {},
  "_fixedToCamera": function () {},
  "cameraOffset": function () {},
  "input": function () {},
  "checkWorldBounds": function () {},
  "outOfBoundsKill": function () {},
  "_outOfBoundsFired": function () {},
  "alive": function () {},
  "lifespan": function () {},
  "revive": function () {},
  "kill": function () {},
  "body": function () {},
  "reset": function () {},
  "preUpdatePhysics": function () {},
  "preUpdateLifeSpan": function () {},
  "preUpdateInWorld": function () {},
  "preUpdateCore": function () {},
  "preUpdate": function () {},
  "setText": function () {},
  "scanLine": function () {},
  "updateText": function () {},
  "purgeGlyphs": function () {},
  "updateTransform": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "displayObjectContainerUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "setStageReference": function () {},
  "removeStageReference": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "displayObjectUpdateTransform": function () {},
  "generateTexture": function () {},
  "updateCache": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "_renderCachedSprite": function () {},
  "_generateCachedSprite": function () {},
  "_destroyCachedSprite": function () {}
};
Phaser.RetroFont.prototype = {
  "constructor": function () {},
  "setFixedWidth": function () {},
  "setText": function () {},
  "buildRetroFontText": function () {},
  "pasteLine": function () {},
  "getLongestLine": function () {},
  "removeUnsupportedCharacters": function () {},
  "updateOffset": function () {},
  "renderXY": function () {},
  "renderRawXY": function () {},
  "render": function () {},
  "resize": function () {},
  "clear": function () {},
  "renderWebGL": function () {},
  "renderCanvas": function () {},
  "getImage": function () {},
  "getBase64": function () {},
  "getCanvas": function () {},
  "onBaseTextureLoaded": function () {},
  "destroy": function () {},
  "setFrame": function () {},
  "_updateUvs": function () {}
};
Phaser.RequestAnimationFrame.prototype = {
  "start": function () {},
  "updateRAF": function () {},
  "updateSetTimeout": function () {},
  "stop": function () {},
  "isSetTimeOut": function () {},
  "isRAF": function () {},
  "constructor": function () {}
};
Phaser.RandomDataGenerator.prototype = {
  "rnd": function () {},
  "sow": function () {},
  "hash": function () {},
  "integer": function () {},
  "frac": function () {},
  "real": function () {},
  "integerInRange": function () {},
  "between": function () {},
  "realInRange": function () {},
  "normal": function () {},
  "uuid": function () {},
  "pick": function () {},
  "weightedPick": function () {},
  "timestamp": function () {},
  "angle": function () {},
  "constructor": function () {}
};
Phaser.QuadTree.prototype = {
  "reset": function () {},
  "populate": function () {},
  "populateHandler": function () {},
  "split": function () {},
  "insert": function () {},
  "getIndex": function () {},
  "retrieve": function () {},
  "clear": function () {},
  "constructor": function () {}
};
Phaser.Net.prototype = {
  "getHostName": function () {},
  "checkDomainName": function () {},
  "updateQueryString": function () {},
  "getQueryString": function () {},
  "decodeURI": function () {},
  "constructor": function () {}
};
Phaser.TweenManager.prototype = {
  "getAll": function () {},
  "removeAll": function () {},
  "removeFrom": function () {},
  "add": function () {},
  "create": function () {},
  "remove": function () {},
  "update": function () {},
  "isTweening": function () {},
  "_pauseAll": function () {},
  "_resumeAll": function () {},
  "pauseAll": function () {},
  "resumeAll": function () {},
  "constructor": function () {}
};
Phaser.Tween.prototype = {
  "to": function () {},
  "from": function () {},
  "start": function () {},
  "stop": function () {},
  "updateTweenData": function () {},
  "delay": function () {},
  "repeat": function () {},
  "repeatDelay": function () {},
  "yoyo": function () {},
  "yoyoDelay": function () {},
  "easing": function () {},
  "interpolation": function () {},
  "repeatAll": function () {},
  "chain": function () {},
  "loop": function () {},
  "onUpdateCallback": function () {},
  "pause": function () {},
  "_pause": function () {},
  "resume": function () {},
  "_resume": function () {},
  "update": function () {},
  "generateData": function () {},
  "constructor": function () {}
};
Phaser.TweenData.prototype = {
  "to": function () {},
  "from": function () {},
  "start": function () {},
  "loadValues": function () {},
  "update": function () {},
  "generateData": function () {},
  "repeat": function () {},
  "constructor": function () {}
};
Phaser.Time.prototype = {
  "boot": function () {},
  "add": function () {},
  "create": function () {},
  "removeAll": function () {},
  "update": function () {},
  "updateSetTimeout": function () {},
  "updateRAF": function () {},
  "updateTimers": function () {},
  "updateAdvancedTiming": function () {},
  "gamePaused": function () {},
  "gameResumed": function () {},
  "totalElapsedSeconds": function () {},
  "elapsedSince": function () {},
  "elapsedSecondsSince": function () {},
  "reset": function () {},
  "constructor": function () {}
};
Phaser.Timer.prototype = {
  "create": function () {},
  "add": function () {},
  "repeat": function () {},
  "loop": function () {},
  "start": function () {},
  "stop": function () {},
  "remove": function () {},
  "order": function () {},
  "sortHandler": function () {},
  "clearPendingEvents": function () {},
  "update": function () {},
  "pause": function () {},
  "_pause": function () {},
  "adjustEvents": function () {},
  "resume": function () {},
  "_resume": function () {},
  "removeAll": function () {},
  "destroy": function () {},
  "constructor": function () {}
};
Phaser.AnimationManager.prototype = {
  "loadFrameData": function () {},
  "copyFrameData": function () {},
  "add": function () {},
  "validateFrames": function () {},
  "play": function () {},
  "stop": function () {},
  "update": function () {},
  "next": function () {},
  "previous": function () {},
  "getAnimation": function () {},
  "refreshFrame": function () {},
  "destroy": function () {},
  "constructor": function () {}
};
Phaser.Animation.prototype = {
  "play": function () {},
  "restart": function () {},
  "setFrame": function () {},
  "stop": function () {},
  "onPause": function () {},
  "onResume": function () {},
  "update": function () {},
  "updateCurrentFrame": function () {},
  "next": function () {},
  "previous": function () {},
  "updateFrameData": function () {},
  "destroy": function () {},
  "complete": function () {},
  "constructor": function () {}
};
Phaser.Frame.prototype = {
  "resize": function () {},
  "setTrim": function () {},
  "clone": function () {},
  "getRect": function () {},
  "constructor": function () {}
};
Phaser.FrameData.prototype = {
  "addFrame": function () {},
  "getFrame": function () {},
  "getFrameByName": function () {},
  "checkFrameName": function () {},
  "clone": function () {},
  "getFrameRange": function () {},
  "getFrames": function () {},
  "getFrameIndexes": function () {},
  "constructor": function () {}
};
Phaser.Cache.prototype = {
  "addCanvas": function () {},
  "addImage": function () {},
  "addDefaultImage": function () {},
  "addMissingImage": function () {},
  "addSound": function () {},
  "addText": function () {},
  "addPhysicsData": function () {},
  "addTilemap": function () {},
  "addBinary": function () {},
  "addBitmapData": function () {},
  "addBitmapFont": function () {},
  "addJSON": function () {},
  "addXML": function () {},
  "addVideo": function () {},
  "addShader": function () {},
  "addRenderTexture": function () {},
  "addSpriteSheet": function () {},
  "addTextureAtlas": function () {},
  "reloadSound": function () {},
  "reloadSoundComplete": function () {},
  "updateSound": function () {},
  "decodedSound": function () {},
  "isSoundDecoded": function () {},
  "isSoundReady": function () {},
  "checkKey": function () {},
  "checkURL": function () {},
  "checkCanvasKey": function () {},
  "checkImageKey": function () {},
  "checkTextureKey": function () {},
  "checkSoundKey": function () {},
  "checkTextKey": function () {},
  "checkPhysicsKey": function () {},
  "checkTilemapKey": function () {},
  "checkBinaryKey": function () {},
  "checkBitmapDataKey": function () {},
  "checkBitmapFontKey": function () {},
  "checkJSONKey": function () {},
  "checkXMLKey": function () {},
  "checkVideoKey": function () {},
  "checkShaderKey": function () {},
  "checkRenderTextureKey": function () {},
  "getItem": function () {},
  "getCanvas": function () {},
  "getImage": function () {},
  "getTextureFrame": function () {},
  "getSound": function () {},
  "getSoundData": function () {},
  "getText": function () {},
  "getPhysicsData": function () {},
  "getTilemapData": function () {},
  "getBinary": function () {},
  "getBitmapData": function () {},
  "getBitmapFont": function () {},
  "getJSON": function () {},
  "getXML": function () {},
  "getVideo": function () {},
  "getShader": function () {},
  "getRenderTexture": function () {},
  "getBaseTexture": function () {},
  "getFrame": function () {},
  "getFrameCount": function () {},
  "getFrameData": function () {},
  "hasFrameData": function () {},
  "updateFrameData": function () {},
  "getFrameByIndex": function () {},
  "getFrameByName": function () {},
  "getPixiTexture": function () {},
  "getPixiBaseTexture": function () {},
  "getURL": function () {},
  "getKeys": function () {},
  "removeCanvas": function () {},
  "removeImage": function () {},
  "removeSound": function () {},
  "removeText": function () {},
  "removePhysics": function () {},
  "removeTilemap": function () {},
  "removeBinary": function () {},
  "removeBitmapData": function () {},
  "removeBitmapFont": function () {},
  "removeJSON": function () {},
  "removeXML": function () {},
  "removeVideo": function () {},
  "removeShader": function () {},
  "removeRenderTexture": function () {},
  "removeSpriteSheet": function () {},
  "removeTextureAtlas": function () {},
  "clearGLTextures": function () {},
  "_resolveURL": function () {},
  "destroy": function () {},
  "constructor": function () {}
};
Phaser.Loader.prototype = {
  "setPreloadSprite": function () {},
  "resize": function () {},
  "checkKeyExists": function () {},
  "getAssetIndex": function () {},
  "getAsset": function () {},
  "reset": function () {},
  "addToFileList": function () {},
  "replaceInFileList": function () {},
  "pack": function () {},
  "image": function () {},
  "text": function () {},
  "json": function () {},
  "shader": function () {},
  "xml": function () {},
  "script": function () {},
  "binary": function () {},
  "spritesheet": function () {},
  "audio": function () {},
  "audiosprite": function () {},
  "video": function () {},
  "tilemap": function () {},
  "physics": function () {},
  "bitmapFont": function () {},
  "atlasJSONArray": function () {},
  "atlasJSONHash": function () {},
  "atlasXML": function () {},
  "atlas": function () {},
  "withSyncPoint": function () {},
  "addSyncPoint": function () {},
  "removeFile": function () {},
  "removeAll": function () {},
  "start": function () {},
  "processLoadQueue": function () {},
  "finishedLoading": function () {},
  "asyncComplete": function () {},
  "processPack": function () {},
  "transformUrl": function () {},
  "loadFile": function () {},
  "loadImageTag": function () {},
  "loadVideoTag": function () {},
  "loadAudioTag": function () {},
  "xhrLoad": function () {},
  "xhrLoadWithXDR": function () {},
  "getVideoURL": function () {},
  "getAudioURL": function () {},
  "fileError": function () {},
  "fileComplete": function () {},
  "jsonLoadComplete": function () {},
  "csvLoadComplete": function () {},
  "xmlLoadComplete": function () {},
  "parseXml": function () {},
  "updateProgress": function () {},
  "totalLoadedFiles": function () {},
  "totalQueuedFiles": function () {},
  "totalLoadedPacks": function () {},
  "totalQueuedPacks": function () {},
  "constructor": function () {}
};
Phaser.AudioSprite.prototype = {
  "play": function () {},
  "stop": function () {},
  "get": function () {},
  "constructor": function () {}
};
Phaser.Sound.prototype = {
  "soundHasUnlocked": function () {},
  "addMarker": function () {},
  "removeMarker": function () {},
  "onEndedHandler": function () {},
  "update": function () {},
  "loopFull": function () {},
  "play": function () {},
  "restart": function () {},
  "pause": function () {},
  "resume": function () {},
  "stop": function () {},
  "fadeIn": function () {},
  "fadeOut": function () {},
  "fadeTo": function () {},
  "fadeComplete": function () {},
  "destroy": function () {},
  "constructor": function () {}
};
Phaser.SoundManager.prototype = {
  "boot": function () {},
  "setTouchLock": function () {},
  "unlock": function () {},
  "stopAll": function () {},
  "pauseAll": function () {},
  "resumeAll": function () {},
  "decode": function () {},
  "setDecodedCallback": function () {},
  "update": function () {},
  "add": function () {},
  "addSprite": function () {},
  "remove": function () {},
  "removeByKey": function () {},
  "play": function () {},
  "setMute": function () {},
  "unsetMute": function () {},
  "destroy": function () {},
  "constructor": function () {}
};
Phaser.ArraySet.prototype = {
  "add": function () {},
  "getIndex": function () {},
  "getByKey": function () {},
  "exists": function () {},
  "reset": function () {},
  "remove": function () {},
  "setAll": function () {},
  "callAll": function () {},
  "removeAll": function () {},
  "constructor": function () {}
};
Phaser.LinkedList.prototype = {
  "add": function () {},
  "reset": function () {},
  "remove": function () {},
  "callAll": function () {},
  "constructor": function () {}
};
Phaser.Physics.prototype = {
  "parseConfig": function () {},
  "startSystem": function () {},
  "enable": function () {},
  "preUpdate": function () {},
  "update": function () {},
  "setBoundsToWorld": function () {},
  "clear": function () {},
  "reset": function () {},
  "destroy": function () {},
  "constructor": function () {}
};
Phaser.Physics.Arcade.prototype = {
  "setBounds": function () {},
  "setBoundsToWorld": function () {},
  "enable": function () {},
  "enableBody": function () {},
  "updateMotion": function () {},
  "computeVelocity": function () {},
  "overlap": function () {},
  "collide": function () {},
  "sortLeftRight": function () {},
  "sortRightLeft": function () {},
  "sortTopBottom": function () {},
  "sortBottomTop": function () {},
  "sort": function () {},
  "collideHandler": function () {},
  "collideSpriteVsSprite": function () {},
  "collideSpriteVsGroup": function () {},
  "collideGroupVsSelf": function () {},
  "collideGroupVsGroup": function () {},
  "separate": function () {},
  "intersects": function () {},
  "separateX": function () {},
  "separateY": function () {},
  "getObjectsUnderPointer": function () {},
  "getObjectsAtLocation": function () {},
  "moveToObject": function () {},
  "moveToPointer": function () {},
  "moveToXY": function () {},
  "velocityFromAngle": function () {},
  "velocityFromRotation": function () {},
  "accelerationFromRotation": function () {},
  "accelerateToObject": function () {},
  "accelerateToPointer": function () {},
  "accelerateToXY": function () {},
  "distanceBetween": function () {},
  "distanceToXY": function () {},
  "distanceToPointer": function () {},
  "angleBetween": function () {},
  "angleToXY": function () {},
  "angleToPointer": function () {},
  "TILE_BIAS": function () {},
  "collideSpriteVsTilemapLayer": function () {},
  "collideGroupVsTilemapLayer": function () {},
  "separateTile": function () {},
  "tileCheckX": function () {},
  "tileCheckY": function () {},
  "processTileSeparationX": function () {},
  "processTileSeparationY": function () {}
};
Phaser.Physics.Arcade.Body.prototype = {
  "updateBounds": function () {},
  "preUpdate": function () {},
  "postUpdate": function () {},
  "destroy": function () {},
  "checkWorldBounds": function () {},
  "setSize": function () {},
  "reset": function () {},
  "hitTest": function () {},
  "onFloor": function () {},
  "onWall": function () {},
  "deltaAbsX": function () {},
  "deltaAbsY": function () {},
  "deltaX": function () {},
  "deltaY": function () {},
  "deltaZ": function () {},
  "constructor": function () {}
};
Phaser.Physics.Arcade.TilemapCollision.prototype = {
  "TILE_BIAS": function () {},
  "collideSpriteVsTilemapLayer": function () {},
  "collideGroupVsTilemapLayer": function () {},
  "separateTile": function () {},
  "tileCheckX": function () {},
  "tileCheckY": function () {},
  "processTileSeparationX": function () {},
  "processTileSeparationY": function () {}
};
Phaser.Physics.P2.prototype = {
  "removeBodyNextStep": function () {},
  "preUpdate": function () {},
  "enable": function () {},
  "enableBody": function () {},
  "setImpactEvents": function () {},
  "setPostBroadphaseCallback": function () {},
  "postBroadphaseHandler": function () {},
  "impactHandler": function () {},
  "beginContactHandler": function () {},
  "endContactHandler": function () {},
  "setBoundsToWorld": function () {},
  "setWorldMaterial": function () {},
  "updateBoundsCollisionGroup": function () {},
  "setBounds": function () {},
  "pause": function () {},
  "resume": function () {},
  "update": function () {},
  "reset": function () {},
  "clear": function () {},
  "destroy": function () {},
  "addBody": function () {},
  "removeBody": function () {},
  "addSpring": function () {},
  "removeSpring": function () {},
  "createDistanceConstraint": function () {},
  "createGearConstraint": function () {},
  "createRevoluteConstraint": function () {},
  "createLockConstraint": function () {},
  "createPrismaticConstraint": function () {},
  "addConstraint": function () {},
  "removeConstraint": function () {},
  "addContactMaterial": function () {},
  "removeContactMaterial": function () {},
  "getContactMaterial": function () {},
  "setMaterial": function () {},
  "createMaterial": function () {},
  "createContactMaterial": function () {},
  "getBodies": function () {},
  "getBody": function () {},
  "getSprings": function () {},
  "getConstraints": function () {},
  "hitTest": function () {},
  "toJSON": function () {},
  "createCollisionGroup": function () {},
  "setCollisionGroup": function () {},
  "createSpring": function () {},
  "createRotationalSpring": function () {},
  "createBody": function () {},
  "createParticle": function () {},
  "convertCollisionObjects": function () {},
  "clearTilemapLayerBodies": function () {},
  "convertTilemap": function () {},
  "mpx": function () {},
  "pxm": function () {},
  "mpxi": function () {},
  "pxmi": function () {}
};
Phaser.Physics.P2.FixtureList.prototype = {
  "init": function () {},
  "setCategory": function () {},
  "setMask": function () {},
  "setSensor": function () {},
  "setMaterial": function () {},
  "getFixtures": function () {},
  "getFixtureByKey": function () {},
  "getGroup": function () {},
  "parse": function () {},
  "flatten": function () {}
};
Phaser.Physics.P2.Body.prototype = {
  "createBodyCallback": function () {},
  "createGroupCallback": function () {},
  "getCollisionMask": function () {},
  "updateCollisionMask": function () {},
  "setCollisionGroup": function () {},
  "clearCollision": function () {},
  "collides": function () {},
  "adjustCenterOfMass": function () {},
  "getVelocityAtPoint": function () {},
  "applyDamping": function () {},
  "applyImpulse": function () {},
  "applyImpulseLocal": function () {},
  "applyForce": function () {},
  "setZeroForce": function () {},
  "setZeroRotation": function () {},
  "setZeroVelocity": function () {},
  "setZeroDamping": function () {},
  "toLocalFrame": function () {},
  "toWorldFrame": function () {},
  "rotateLeft": function () {},
  "rotateRight": function () {},
  "moveForward": function () {},
  "moveBackward": function () {},
  "thrust": function () {},
  "reverse": function () {},
  "moveLeft": function () {},
  "moveRight": function () {},
  "moveUp": function () {},
  "moveDown": function () {},
  "preUpdate": function () {},
  "postUpdate": function () {},
  "reset": function () {},
  "addToWorld": function () {},
  "removeFromWorld": function () {},
  "destroy": function () {},
  "clearShapes": function () {},
  "addShape": function () {},
  "addCircle": function () {},
  "addRectangle": function () {},
  "addPlane": function () {},
  "addParticle": function () {},
  "addLine": function () {},
  "addCapsule": function () {},
  "addPolygon": function () {},
  "removeShape": function () {},
  "setCircle": function () {},
  "setRectangle": function () {},
  "setRectangleFromSprite": function () {},
  "setMaterial": function () {},
  "shapeChanged": function () {},
  "addPhaserPolygon": function () {},
  "addFixture": function () {},
  "loadPolygon": function () {},
  "constructor": function () {}
};
Phaser.Physics.P2.BodyDebug.prototype = {
  "constructor": function () {},
  "updateSpriteTransform": function () {},
  "draw": function () {},
  "drawRectangle": function () {},
  "drawCircle": function () {},
  "drawLine": function () {},
  "drawConvex": function () {},
  "drawPath": function () {},
  "drawPlane": function () {},
  "drawCapsule": function () {},
  "randomPastelHex": function () {},
  "rgbToHex": function () {},
  "componentToHex": function () {},
  "add": function () {},
  "addToHash": function () {},
  "removeFromHash": function () {},
  "addMultiple": function () {},
  "addAt": function () {},
  "getAt": function () {},
  "create": function () {},
  "createMultiple": function () {},
  "updateZ": function () {},
  "resetCursor": function () {},
  "next": function () {},
  "previous": function () {},
  "swap": function () {},
  "bringToTop": function () {},
  "sendToBack": function () {},
  "moveUp": function () {},
  "moveDown": function () {},
  "xy": function () {},
  "reverse": function () {},
  "getIndex": function () {},
  "replace": function () {},
  "hasProperty": function () {},
  "setProperty": function () {},
  "checkProperty": function () {},
  "set": function () {},
  "setAll": function () {},
  "setAllChildren": function () {},
  "checkAll": function () {},
  "addAll": function () {},
  "subAll": function () {},
  "multiplyAll": function () {},
  "divideAll": function () {},
  "callAllExists": function () {},
  "callbackFromArray": function () {},
  "callAll": function () {},
  "preUpdate": function () {},
  "update": function () {},
  "postUpdate": function () {},
  "filter": function () {},
  "forEach": function () {},
  "forEachExists": function () {},
  "forEachAlive": function () {},
  "forEachDead": function () {},
  "sort": function () {},
  "customSort": function () {},
  "ascendingSortHandler": function () {},
  "descendingSortHandler": function () {},
  "iterate": function () {},
  "getFirstExists": function () {},
  "getFirstAlive": function () {},
  "getFirstDead": function () {},
  "getTop": function () {},
  "getBottom": function () {},
  "countLiving": function () {},
  "countDead": function () {},
  "getRandom": function () {},
  "remove": function () {},
  "moveAll": function () {},
  "removeAll": function () {},
  "removeBetween": function () {},
  "destroy": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "displayObjectContainerUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "setStageReference": function () {},
  "removeStageReference": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "displayObjectUpdateTransform": function () {},
  "generateTexture": function () {},
  "updateCache": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "_renderCachedSprite": function () {},
  "_generateCachedSprite": function () {},
  "_destroyCachedSprite": function () {}
};
Phaser.Physics.P2.Material.prototype = {
  "constructor": function () {}
};
Phaser.Physics.P2.ContactMaterial.prototype = {
  "constructor": function () {}
};
Phaser.Physics.P2.DistanceConstraint.prototype = {
  "constructor": function () {},
  "type": function () {},
  "equations": function () {},
  "bodyA": function () {},
  "bodyB": function () {},
  "collideConnected": function () {},
  "update": function () {},
  "setMaxForce": function () {},
  "getMaxForce": function () {},
  "setStiffness": function () {},
  "setRelaxation": function () {}
};
Phaser.Physics.P2.GearConstraint.prototype = {
  "constructor": function () {},
  "type": function () {},
  "equations": function () {},
  "bodyA": function () {},
  "bodyB": function () {},
  "collideConnected": function () {},
  "update": function () {},
  "setMaxTorque": function () {},
  "getMaxTorque": function () {},
  "setStiffness": function () {},
  "setRelaxation": function () {}
};
Phaser.Physics.P2.LockConstraint.prototype = {
  "constructor": function () {},
  "type": function () {},
  "equations": function () {},
  "bodyA": function () {},
  "bodyB": function () {},
  "collideConnected": function () {},
  "setMaxForce": function () {},
  "getMaxForce": function () {},
  "update": function () {},
  "setStiffness": function () {},
  "setRelaxation": function () {}
};
Phaser.Physics.P2.PrismaticConstraint.prototype = {
  "constructor": function () {},
  "type": function () {},
  "equations": function () {},
  "bodyA": function () {},
  "bodyB": function () {},
  "collideConnected": function () {},
  "update": function () {},
  "enableMotor": function () {},
  "disableMotor": function () {},
  "setLimits": function () {},
  "setStiffness": function () {},
  "setRelaxation": function () {}
};
Phaser.Physics.P2.RevoluteConstraint.prototype = {
  "constructor": function () {},
  "type": function () {},
  "equations": function () {},
  "bodyA": function () {},
  "bodyB": function () {},
  "collideConnected": function () {},
  "setLimits": function () {},
  "update": function () {},
  "enableMotor": function () {},
  "disableMotor": function () {},
  "motorIsEnabled": function () {},
  "setMotorSpeed": function () {},
  "getMotorSpeed": function () {},
  "setStiffness": function () {},
  "setRelaxation": function () {}
};
Phaser.ImageCollection.prototype = {
  "containsImageIndex": function () {},
  "addImage": function () {},
  "constructor": function () {}
};
Phaser.Tile.prototype = {
  "containsPoint": function () {},
  "intersects": function () {},
  "setCollisionCallback": function () {},
  "destroy": function () {},
  "setCollision": function () {},
  "resetCollision": function () {},
  "isInteresting": function () {},
  "copy": function () {},
  "constructor": function () {}
};
Phaser.Tilemap.prototype = {
  "create": function () {},
  "setTileSize": function () {},
  "addTilesetImage": function () {},
  "createFromObjects": function () {},
  "createFromTiles": function () {},
  "createLayer": function () {},
  "createBlankLayer": function () {},
  "getIndex": function () {},
  "getLayerIndex": function () {},
  "getTilesetIndex": function () {},
  "getImageIndex": function () {},
  "getObjectIndex": function () {},
  "setTileIndexCallback": function () {},
  "setTileLocationCallback": function () {},
  "setCollision": function () {},
  "setCollisionBetween": function () {},
  "setCollisionByExclusion": function () {},
  "setCollisionByIndex": function () {},
  "getLayer": function () {},
  "setPreventRecalculate": function () {},
  "calculateFaces": function () {},
  "getTileAbove": function () {},
  "getTileBelow": function () {},
  "getTileLeft": function () {},
  "getTileRight": function () {},
  "setLayer": function () {},
  "hasTile": function () {},
  "removeTile": function () {},
  "removeTileWorldXY": function () {},
  "putTile": function () {},
  "putTileWorldXY": function () {},
  "searchTileIndex": function () {},
  "getTile": function () {},
  "getTileWorldXY": function () {},
  "copy": function () {},
  "paste": function () {},
  "swap": function () {},
  "swapHandler": function () {},
  "forEach": function () {},
  "replace": function () {},
  "random": function () {},
  "shuffle": function () {},
  "fill": function () {},
  "removeAllLayers": function () {},
  "dump": function () {},
  "destroy": function () {},
  "constructor": function () {}
};
Phaser.TilemapLayer.prototype = {
  "constructor": function () {},
  "preUpdateCore": function () {},
  "preUpdate": function () {},
  "postUpdate": function () {},
  "resize": function () {},
  "resizeWorld": function () {},
  "_fixX": function () {},
  "_unfixX": function () {},
  "_fixY": function () {},
  "_unfixY": function () {},
  "getTileX": function () {},
  "getTileY": function () {},
  "getTileXY": function () {},
  "getRayCastTiles": function () {},
  "getTiles": function () {},
  "resolveTileset": function () {},
  "resetTilesetCache": function () {},
  "setScale": function () {},
  "shiftCanvas": function () {},
  "renderRegion": function () {},
  "renderDeltaScroll": function () {},
  "renderFull": function () {},
  "render": function () {},
  "renderDebug": function () {},
  "game": function () {},
  "name": function () {},
  "components": function () {},
  "z": function () {},
  "events": function () {},
  "animations": function () {},
  "key": function () {},
  "world": function () {},
  "debug": function () {},
  "previousPosition": function () {},
  "previousRotation": function () {},
  "renderOrderID": function () {},
  "fresh": function () {},
  "pendingDestroy": function () {},
  "_bounds": function () {},
  "_exists": function () {},
  "update": function () {},
  "play": function () {},
  "autoCull": function () {},
  "bringToTop": function () {},
  "sendToBack": function () {},
  "moveUp": function () {},
  "moveDown": function () {},
  "cropRect": function () {},
  "_crop": function () {},
  "crop": function () {},
  "updateCrop": function () {},
  "destroyPhase": function () {},
  "destroy": function () {},
  "_fixedToCamera": function () {},
  "cameraOffset": function () {},
  "health": function () {},
  "maxHealth": function () {},
  "damage": function () {},
  "heal": function () {},
  "input": function () {},
  "checkWorldBounds": function () {},
  "outOfBoundsKill": function () {},
  "_outOfBoundsFired": function () {},
  "alive": function () {},
  "lifespan": function () {},
  "revive": function () {},
  "kill": function () {},
  "customRender": function () {},
  "_frame": function () {},
  "loadTexture": function () {},
  "setFrame": function () {},
  "resizeFrame": function () {},
  "resetFrame": function () {},
  "overlap": function () {},
  "body": function () {},
  "reset": function () {},
  "transformCallback": function () {},
  "transformCallbackContext": function () {},
  "scaleMin": function () {},
  "scaleMax": function () {},
  "checkTransform": function () {},
  "setScaleMinMax": function () {},
  "preUpdatePhysics": function () {},
  "preUpdateLifeSpan": function () {},
  "preUpdateInWorld": function () {},
  "setTexture": function () {},
  "onTextureUpdate": function () {},
  "getBounds": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "displayObjectContainerUpdateTransform": function () {},
  "getLocalBounds": function () {},
  "setStageReference": function () {},
  "removeStageReference": function () {},
  "displayObjectUpdateTransform": function () {},
  "generateTexture": function () {},
  "updateCache": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "_renderCachedSprite": function () {},
  "_generateCachedSprite": function () {},
  "_destroyCachedSprite": function () {}
};
Phaser.Tileset.prototype = {
  "draw": function () {},
  "containsTileIndex": function () {},
  "setImage": function () {},
  "setSpacing": function () {},
  "updateTileData": function () {},
  "constructor": function () {}
};
Phaser.Particles.prototype = {
  "add": function () {},
  "remove": function () {},
  "update": function () {},
  "constructor": function () {}
};
Phaser.Particles.Arcade.Emitter.prototype = {
  "constructor": function () {},
  "update": function () {},
  "makeParticles": function () {},
  "kill": function () {},
  "revive": function () {},
  "explode": function () {},
  "flow": function () {},
  "start": function () {},
  "emitParticle": function () {},
  "destroy": function () {},
  "setSize": function () {},
  "setXSpeed": function () {},
  "setYSpeed": function () {},
  "setRotation": function () {},
  "setAlpha": function () {},
  "setScale": function () {},
  "at": function () {},
  "add": function () {},
  "addToHash": function () {},
  "removeFromHash": function () {},
  "addMultiple": function () {},
  "addAt": function () {},
  "getAt": function () {},
  "create": function () {},
  "createMultiple": function () {},
  "updateZ": function () {},
  "resetCursor": function () {},
  "next": function () {},
  "previous": function () {},
  "swap": function () {},
  "bringToTop": function () {},
  "sendToBack": function () {},
  "moveUp": function () {},
  "moveDown": function () {},
  "xy": function () {},
  "reverse": function () {},
  "getIndex": function () {},
  "replace": function () {},
  "hasProperty": function () {},
  "setProperty": function () {},
  "checkProperty": function () {},
  "set": function () {},
  "setAll": function () {},
  "setAllChildren": function () {},
  "checkAll": function () {},
  "addAll": function () {},
  "subAll": function () {},
  "multiplyAll": function () {},
  "divideAll": function () {},
  "callAllExists": function () {},
  "callbackFromArray": function () {},
  "callAll": function () {},
  "preUpdate": function () {},
  "postUpdate": function () {},
  "filter": function () {},
  "forEach": function () {},
  "forEachExists": function () {},
  "forEachAlive": function () {},
  "forEachDead": function () {},
  "sort": function () {},
  "customSort": function () {},
  "ascendingSortHandler": function () {},
  "descendingSortHandler": function () {},
  "iterate": function () {},
  "getFirstExists": function () {},
  "getFirstAlive": function () {},
  "getFirstDead": function () {},
  "getTop": function () {},
  "getBottom": function () {},
  "countLiving": function () {},
  "countDead": function () {},
  "getRandom": function () {},
  "remove": function () {},
  "moveAll": function () {},
  "removeAll": function () {},
  "removeBetween": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "displayObjectContainerUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "setStageReference": function () {},
  "removeStageReference": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "displayObjectUpdateTransform": function () {},
  "generateTexture": function () {},
  "updateCache": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "_renderCachedSprite": function () {},
  "_generateCachedSprite": function () {},
  "_destroyCachedSprite": function () {}
};
Phaser.Video.prototype = {
  "connectToMediaStream": function () {},
  "startMediaStream": function () {},
  "getUserMediaTimeout": function () {},
  "getUserMediaError": function () {},
  "getUserMediaSuccess": function () {},
  "createVideoFromBlob": function () {},
  "createVideoFromURL": function () {},
  "updateTexture": function () {},
  "complete": function () {},
  "play": function () {},
  "playHandler": function () {},
  "stop": function () {},
  "add": function () {},
  "addToWorld": function () {},
  "render": function () {},
  "setMute": function () {},
  "unsetMute": function () {},
  "setPause": function () {},
  "setResume": function () {},
  "changeSource": function () {},
  "checkVideoProgress": function () {},
  "setTouchLock": function () {},
  "unlock": function () {},
  "grab": function () {},
  "removeVideoElement": function () {},
  "destroy": function () {},
  "constructor": function () {}
};

var PIXI = {
  "WEBGL_RENDERER": {},
  "CANVAS_RENDERER": {},
  "VERSION": {},
  "_UID": {},
  "Float32Array": function () {},
  "Uint16Array": function () {},
  "Uint32Array": function () {},
  "ArrayBuffer": function () {},
  "PI_2": {},
  "RAD_TO_DEG": {},
  "DEG_TO_RAD": {},
  "RETINA_PREFIX": {},
  "defaultRenderOptions": {
    "view": {},
    "transparent": {},
    "antialias": {},
    "preserveDrawingBuffer": {},
    "resolution": {},
    "clearBeforeRender": {},
    "autoResize": {}
  },
  "DisplayObject": {
    "_tempMatrix": {
      "a": {},
      "b": {},
      "c": {},
      "d": {},
      "tx": {},
      "ty": {},
      "type": {},
      "fromArray": function () {},
      "setTo": function () {},
      "clone": function () {},
      "copyTo": function () {},
      "copyFrom": function () {},
      "toArray": function () {},
      "apply": function () {},
      "applyInverse": function () {},
      "translate": function () {},
      "scale": function () {},
      "rotate": function () {},
      "append": function () {},
      "identity": function () {}
    }
  },
  "DisplayObjectContainer": function () {},
  "Sprite": {
    "fromFrame": function () {},
    "fromImage": function () {}
  },
  "SpriteBatch": function () {},
  "Stage": function () {},
  "hex2rgb": function () {},
  "rgb2hex": function () {},
  "canUseNewCanvasBlendModes": function () {},
  "getNextPowerOfTwo": function () {},
  "isPowerOfTwo": function () {},
  "PolyK": {
    "Triangulate": function () {},
    "_PointInTriangle": function () {},
    "_convex": function () {}
  },
  "initDefaultShaders": function () {},
  "CompileVertexShader": function () {},
  "CompileFragmentShader": function () {},
  "_CompileShader": function () {},
  "compileProgram": function () {},
  "PixiShader": {
    "defaultVertexSrc": {}
  },
  "PixiFastShader": function () {},
  "StripShader": function () {},
  "PrimitiveShader": function () {},
  "ComplexPrimitiveShader": function () {},
  "WebGLGraphics": {
    "renderGraphics": function () {},
    "updateGraphics": function () {},
    "switchMode": function () {},
    "buildRectangle": function () {},
    "buildRoundedRectangle": function () {},
    "quadraticBezierCurve": function () {},
    "buildCircle": function () {},
    "buildLine": function () {},
    "buildComplexPoly": function () {},
    "buildPoly": function () {},
    "graphicsDataPool": {}
  },
  "WebGLGraphicsData": function () {},
  "glContexts": {},
  "instances": {},
  "WebGLRenderer": {
    "glContextId": {}
  },
  "WebGLBlendModeManager": function () {},
  "WebGLMaskManager": function () {},
  "WebGLStencilManager": function () {},
  "WebGLShaderManager": function () {},
  "WebGLSpriteBatch": function () {},
  "WebGLFastSpriteBatch": function () {},
  "WebGLFilterManager": function () {},
  "FilterTexture": function () {},
  "CanvasBuffer": function () {},
  "CanvasMaskManager": function () {},
  "CanvasTinter": {
    "getTintedTexture": function () {},
    "tintWithMultiply": function () {},
    "tintWithPerPixel": function () {},
    "checkInverseAlpha": function () {},
    "canHandleAlpha": {},
    "canUseMultiply": {},
    "tintMethod": function () {}
  },
  "CanvasRenderer": function () {},
  "CanvasGraphics": {
    "renderGraphics": function () {},
    "renderGraphicsMask": function () {},
    "updateGraphicsTint": function () {}
  },
  "BaseTextureCache": {},
  "BaseTextureCacheIdGenerator": {},
  "BaseTexture": {
    "fromImage": function () {},
    "fromCanvas": function () {}
  },
  "TextureCache": {},
  "FrameCache": {},
  "TextureSilentFail": {},
  "TextureCacheIdGenerator": {},
  "Texture": {
    "fromImage": function () {},
    "fromFrame": function () {},
    "fromCanvas": function () {},
    "addTextureToCache": function () {},
    "removeTextureFromCache": function () {},
    "emptyTexture": {}
  },
  "TextureUvs": function () {},
  "RenderTexture": {
    "tempMatrix": {
      "a": {},
      "b": {},
      "c": {},
      "d": {},
      "tx": {},
      "ty": {},
      "type": {},
      "fromArray": function () {},
      "setTo": function () {},
      "clone": function () {},
      "copyTo": function () {},
      "copyFrom": function () {},
      "toArray": function () {},
      "apply": function () {},
      "applyInverse": function () {},
      "translate": function () {},
      "scale": function () {},
      "rotate": function () {},
      "append": function () {},
      "identity": function () {}
    }
  },
  "AbstractFilter": function () {},
  "Strip": {
    "DrawModes": {
      "TRIANGLE_STRIP": {},
      "TRIANGLES": {}
    }
  },
  "Rope": function () {},
  "TilingSprite": function () {},
  "Circle": {
    "contains": function () {},
    "equals": function () {},
    "intersects": function () {},
    "circumferencePoint": function () {},
    "intersectsRectangle": function () {}
  },
  "Ellipse": {
    "contains": function () {}
  },
  "Matrix": function () {},
  "identityMatrix": {
    "a": {},
    "b": {},
    "c": {},
    "d": {},
    "tx": {},
    "ty": {},
    "type": {},
    "fromArray": function () {},
    "setTo": function () {},
    "clone": function () {},
    "copyTo": function () {},
    "copyFrom": function () {},
    "toArray": function () {},
    "apply": function () {},
    "applyInverse": function () {},
    "translate": function () {},
    "scale": function () {},
    "rotate": function () {},
    "append": function () {},
    "identity": function () {}
  },
  "Point": {
    "add": function () {},
    "subtract": function () {},
    "multiply": function () {},
    "divide": function () {},
    "equals": function () {},
    "angle": function () {},
    "negative": function () {},
    "multiplyAdd": function () {},
    "interpolate": function () {},
    "perp": function () {},
    "rperp": function () {},
    "distance": function () {},
    "project": function () {},
    "projectUnit": function () {},
    "normalRightHand": function () {},
    "normalize": function () {},
    "rotate": function () {},
    "centroid": function () {},
    "parse": function () {}
  },
  "Polygon": function () {},
  "Rectangle": {
    "inflate": function () {},
    "inflatePoint": function () {},
    "size": function () {},
    "clone": function () {},
    "contains": function () {},
    "containsRaw": function () {},
    "containsPoint": function () {},
    "containsRect": function () {},
    "equals": function () {},
    "sameDimensions": function () {},
    "intersection": function () {},
    "intersects": function () {},
    "intersectsRaw": function () {},
    "union": function () {},
    "aabb": function () {}
  },
  "EmptyRectangle": {},
  "RoundedRectangle": function () {},
  "Graphics": {
    "POLY": {},
    "RECT": {},
    "CIRC": {},
    "ELIP": {},
    "RREC": {}
  },
  "GraphicsData": function () {},
  "blendModes": {
    "NORMAL": {},
    "ADD": {},
    "MULTIPLY": {},
    "SCREEN": {},
    "OVERLAY": {},
    "DARKEN": {},
    "LIGHTEN": {},
    "COLOR_DODGE": {},
    "COLOR_BURN": {},
    "HARD_LIGHT": {},
    "SOFT_LIGHT": {},
    "DIFFERENCE": {},
    "EXCLUSION": {},
    "HUE": {},
    "SATURATION": {},
    "COLOR": {},
    "LUMINOSITY": {}
  },
  "scaleModes": {
    "DEFAULT": {},
    "LINEAR": {},
    "NEAREST": {}
  }
};
PIXI.DisplayObject.prototype = {
  "destroy": function () {},
  "updateTransform": function () {},
  "displayObjectUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "setStageReference": function () {},
  "preUpdate": function () {},
  "generateTexture": function () {},
  "updateCache": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "_renderCachedSprite": function () {},
  "_generateCachedSprite": function () {},
  "_destroyCachedSprite": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {}
};
PIXI.DisplayObjectContainer.prototype = {
  "constructor": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "displayObjectContainerUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "setStageReference": function () {},
  "removeStageReference": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "destroy": function () {},
  "displayObjectUpdateTransform": function () {},
  "preUpdate": function () {},
  "generateTexture": function () {},
  "updateCache": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "_renderCachedSprite": function () {},
  "_generateCachedSprite": function () {},
  "_destroyCachedSprite": function () {}
};
PIXI.Sprite.prototype = {
  "constructor": function () {},
  "setTexture": function () {},
  "onTextureUpdate": function () {},
  "getBounds": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "displayObjectContainerUpdateTransform": function () {},
  "getLocalBounds": function () {},
  "setStageReference": function () {},
  "removeStageReference": function () {},
  "destroy": function () {},
  "displayObjectUpdateTransform": function () {},
  "preUpdate": function () {},
  "generateTexture": function () {},
  "updateCache": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "_renderCachedSprite": function () {},
  "_generateCachedSprite": function () {},
  "_destroyCachedSprite": function () {}
};
PIXI.SpriteBatch.prototype = {
  "constructor": function () {},
  "initWebGL": function () {},
  "updateTransform": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "displayObjectContainerUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "setStageReference": function () {},
  "removeStageReference": function () {},
  "destroy": function () {},
  "displayObjectUpdateTransform": function () {},
  "preUpdate": function () {},
  "generateTexture": function () {},
  "updateCache": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "_renderCachedSprite": function () {},
  "_generateCachedSprite": function () {},
  "_destroyCachedSprite": function () {}
};
PIXI.Stage.prototype = {
  "constructor": function () {},
  "updateTransform": function () {},
  "setBackgroundColor": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "displayObjectContainerUpdateTransform": function () {},
  "getBounds": function () {},
  "getLocalBounds": function () {},
  "setStageReference": function () {},
  "removeStageReference": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "destroy": function () {},
  "displayObjectUpdateTransform": function () {},
  "preUpdate": function () {},
  "generateTexture": function () {},
  "updateCache": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "_renderCachedSprite": function () {},
  "_generateCachedSprite": function () {},
  "_destroyCachedSprite": function () {}
};
PIXI.PixiShader.prototype = {
  "init": function () {},
  "initUniforms": function () {},
  "initSampler2D": function () {},
  "syncUniforms": function () {},
  "destroy": function () {}
};
PIXI.PixiFastShader.prototype = {
  "init": function () {},
  "destroy": function () {}
};
PIXI.StripShader.prototype = {
  "init": function () {},
  "destroy": function () {}
};
PIXI.PrimitiveShader.prototype = {
  "init": function () {},
  "destroy": function () {}
};
PIXI.ComplexPrimitiveShader.prototype = {
  "init": function () {},
  "destroy": function () {}
};
PIXI.WebGLGraphicsData.prototype = {
  "reset": function () {},
  "upload": function () {}
};
PIXI.WebGLRenderer.prototype = {
  "initContext": function () {},
  "render": function () {},
  "renderDisplayObject": function () {},
  "resize": function () {},
  "updateTexture": function () {},
  "destroy": function () {},
  "mapBlendModes": function () {}
};
PIXI.WebGLBlendModeManager.prototype = {
  "setContext": function () {},
  "setBlendMode": function () {},
  "destroy": function () {}
};
PIXI.WebGLMaskManager.prototype = {
  "setContext": function () {},
  "pushMask": function () {},
  "popMask": function () {},
  "destroy": function () {}
};
PIXI.WebGLStencilManager.prototype = {
  "setContext": function () {},
  "pushStencil": function () {},
  "bindGraphics": function () {},
  "popStencil": function () {},
  "destroy": function () {}
};
PIXI.WebGLShaderManager.prototype = {
  "setContext": function () {},
  "setAttribs": function () {},
  "setShader": function () {},
  "destroy": function () {}
};
PIXI.WebGLSpriteBatch.prototype = {
  "setContext": function () {},
  "begin": function () {},
  "end": function () {},
  "render": function () {},
  "renderTilingSprite": function () {},
  "flush": function () {},
  "renderBatch": function () {},
  "stop": function () {},
  "start": function () {},
  "destroy": function () {}
};
PIXI.WebGLFastSpriteBatch.prototype = {
  "setContext": function () {},
  "begin": function () {},
  "end": function () {},
  "render": function () {},
  "renderSprite": function () {},
  "flush": function () {},
  "stop": function () {},
  "start": function () {}
};
PIXI.WebGLFilterManager.prototype = {
  "setContext": function () {},
  "begin": function () {},
  "pushFilter": function () {},
  "popFilter": function () {},
  "applyFilterPass": function () {},
  "initShaderBuffers": function () {},
  "destroy": function () {}
};
PIXI.FilterTexture.prototype = {
  "clear": function () {},
  "resize": function () {},
  "destroy": function () {}
};
PIXI.CanvasBuffer.prototype = {
  "clear": function () {},
  "resize": function () {}
};
PIXI.CanvasMaskManager.prototype = {
  "pushMask": function () {},
  "popMask": function () {}
};
PIXI.CanvasRenderer.prototype = {
  "render": function () {},
  "destroy": function () {},
  "resize": function () {},
  "renderDisplayObject": function () {},
  "mapBlendModes": function () {}
};
PIXI.BaseTexture.prototype = {
  "forceLoaded": function () {},
  "destroy": function () {},
  "updateSourceImage": function () {},
  "dirty": function () {},
  "unloadFromGPU": function () {}
};
PIXI.Texture.prototype = {
  "onBaseTextureLoaded": function () {},
  "destroy": function () {},
  "setFrame": function () {},
  "_updateUvs": function () {}
};
PIXI.RenderTexture.prototype = {
  "constructor": function () {},
  "resize": function () {},
  "clear": function () {},
  "renderWebGL": function () {},
  "renderCanvas": function () {},
  "getImage": function () {},
  "getBase64": function () {},
  "getCanvas": function () {},
  "onBaseTextureLoaded": function () {},
  "destroy": function () {},
  "setFrame": function () {},
  "_updateUvs": function () {}
};
PIXI.AbstractFilter.prototype = {
  "syncUniforms": function () {}
};
PIXI.Strip.prototype = {
  "constructor": function () {},
  "_renderWebGL": function () {},
  "_initWebGL": function () {},
  "_renderStrip": function () {},
  "_renderCanvas": function () {},
  "_renderCanvasTriangleStrip": function () {},
  "_renderCanvasTriangles": function () {},
  "_renderCanvasDrawTriangle": function () {},
  "renderStripFlat": function () {},
  "onTextureUpdate": function () {},
  "getBounds": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "displayObjectContainerUpdateTransform": function () {},
  "getLocalBounds": function () {},
  "setStageReference": function () {},
  "removeStageReference": function () {},
  "destroy": function () {},
  "displayObjectUpdateTransform": function () {},
  "preUpdate": function () {},
  "generateTexture": function () {},
  "updateCache": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "_renderCachedSprite": function () {},
  "_generateCachedSprite": function () {},
  "_destroyCachedSprite": function () {}
};
PIXI.Rope.prototype = {
  "constructor": function () {},
  "refresh": function () {},
  "updateTransform": function () {},
  "setTexture": function () {},
  "_renderWebGL": function () {},
  "_initWebGL": function () {},
  "_renderStrip": function () {},
  "_renderCanvas": function () {},
  "_renderCanvasTriangleStrip": function () {},
  "_renderCanvasTriangles": function () {},
  "_renderCanvasDrawTriangle": function () {},
  "renderStripFlat": function () {},
  "onTextureUpdate": function () {},
  "getBounds": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "displayObjectContainerUpdateTransform": function () {},
  "getLocalBounds": function () {},
  "setStageReference": function () {},
  "removeStageReference": function () {},
  "destroy": function () {},
  "displayObjectUpdateTransform": function () {},
  "preUpdate": function () {},
  "generateTexture": function () {},
  "updateCache": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "_renderCachedSprite": function () {},
  "_generateCachedSprite": function () {},
  "_destroyCachedSprite": function () {}
};
PIXI.TilingSprite.prototype = {
  "constructor": function () {},
  "setTexture": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "onTextureUpdate": function () {},
  "generateTilingTexture": function () {},
  "getBounds": function () {},
  "destroy": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "displayObjectContainerUpdateTransform": function () {},
  "getLocalBounds": function () {},
  "setStageReference": function () {},
  "removeStageReference": function () {},
  "displayObjectUpdateTransform": function () {},
  "preUpdate": function () {},
  "generateTexture": function () {},
  "updateCache": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "_renderCachedSprite": function () {},
  "_generateCachedSprite": function () {},
  "_destroyCachedSprite": function () {}
};
PIXI.Circle.prototype = {
  "circumference": function () {},
  "random": function () {},
  "getBounds": function () {},
  "setTo": function () {},
  "copyFrom": function () {},
  "copyTo": function () {},
  "distance": function () {},
  "clone": function () {},
  "contains": function () {},
  "circumferencePoint": function () {},
  "offset": function () {},
  "offsetPoint": function () {},
  "toString": function () {},
  "constructor": function () {}
};
PIXI.Ellipse.prototype = {
  "setTo": function () {},
  "getBounds": function () {},
  "copyFrom": function () {},
  "copyTo": function () {},
  "clone": function () {},
  "contains": function () {},
  "random": function () {},
  "toString": function () {},
  "constructor": function () {}
};
PIXI.Matrix.prototype = {
  "fromArray": function () {},
  "setTo": function () {},
  "clone": function () {},
  "copyTo": function () {},
  "copyFrom": function () {},
  "toArray": function () {},
  "apply": function () {},
  "applyInverse": function () {},
  "translate": function () {},
  "scale": function () {},
  "rotate": function () {},
  "append": function () {},
  "identity": function () {}
};
PIXI.Point.prototype = {
  "copyFrom": function () {},
  "invert": function () {},
  "setTo": function () {},
  "set": function () {},
  "add": function () {},
  "subtract": function () {},
  "multiply": function () {},
  "divide": function () {},
  "clampX": function () {},
  "clampY": function () {},
  "clamp": function () {},
  "clone": function () {},
  "copyTo": function () {},
  "distance": function () {},
  "equals": function () {},
  "angle": function () {},
  "rotate": function () {},
  "getMagnitude": function () {},
  "getMagnitudeSq": function () {},
  "setMagnitude": function () {},
  "normalize": function () {},
  "isZero": function () {},
  "dot": function () {},
  "cross": function () {},
  "perp": function () {},
  "rperp": function () {},
  "normalRightHand": function () {},
  "floor": function () {},
  "ceil": function () {},
  "toString": function () {},
  "constructor": function () {}
};
PIXI.Polygon.prototype = {
  "toNumberArray": function () {},
  "flatten": function () {},
  "clone": function () {},
  "contains": function () {},
  "setTo": function () {},
  "calculateArea": function () {},
  "constructor": function () {}
};
PIXI.Rectangle.prototype = {
  "offset": function () {},
  "offsetPoint": function () {},
  "setTo": function () {},
  "scale": function () {},
  "centerOn": function () {},
  "floor": function () {},
  "floorAll": function () {},
  "ceil": function () {},
  "ceilAll": function () {},
  "copyFrom": function () {},
  "copyTo": function () {},
  "inflate": function () {},
  "size": function () {},
  "resize": function () {},
  "clone": function () {},
  "contains": function () {},
  "containsRect": function () {},
  "equals": function () {},
  "intersection": function () {},
  "intersects": function () {},
  "intersectsRaw": function () {},
  "union": function () {},
  "random": function () {},
  "toString": function () {},
  "constructor": function () {}
};
PIXI.RoundedRectangle.prototype = {
  "clone": function () {},
  "contains": function () {},
  "constructor": function () {}
};
PIXI.Graphics.prototype = {
  "constructor": function () {},
  "lineStyle": function () {},
  "moveTo": function () {},
  "lineTo": function () {},
  "quadraticCurveTo": function () {},
  "bezierCurveTo": function () {},
  "arcTo": function () {},
  "arc": function () {},
  "beginFill": function () {},
  "endFill": function () {},
  "drawRect": function () {},
  "drawRoundedRect": function () {},
  "drawCircle": function () {},
  "drawEllipse": function () {},
  "drawPolygon": function () {},
  "clear": function () {},
  "generateTexture": function () {},
  "_renderWebGL": function () {},
  "_renderCanvas": function () {},
  "getBounds": function () {},
  "containsPoint": function () {},
  "updateLocalBounds": function () {},
  "_generateCachedSprite": function () {},
  "updateCachedSpriteTexture": function () {},
  "destroyCachedSprite": function () {},
  "drawShape": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "swapChildren": function () {},
  "getChildIndex": function () {},
  "setChildIndex": function () {},
  "getChildAt": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "updateTransform": function () {},
  "displayObjectContainerUpdateTransform": function () {},
  "getLocalBounds": function () {},
  "setStageReference": function () {},
  "removeStageReference": function () {},
  "destroy": function () {},
  "displayObjectUpdateTransform": function () {},
  "preUpdate": function () {},
  "updateCache": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "_renderCachedSprite": function () {},
  "_destroyCachedSprite": function () {}
};
PIXI.GraphicsData.prototype = {
  "clone": function () {}
};
